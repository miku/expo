<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func3 (34 samples, 0.05%)</title><rect x="1042.9" y="101" width="0.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1045.87" y="111.5" ></text>
</g>
<g >
<title>syscall.Read (1,305 samples, 1.78%)</title><rect x="282.5" y="213" width="21.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="285.51" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (7 samples, 0.01%)</title><rect x="828.4" y="149" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="831.42" y="159.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func2 (57 samples, 0.08%)</title><rect x="796.3" y="229" width="1.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="799.33" y="239.5" ></text>
</g>
<g >
<title>strconv.readFloat (6,719 samples, 9.17%)</title><rect x="614.0" y="213" width="108.2" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="617.00" y="223.5" >strconv.readF..</text>
</g>
<g >
<title>runtime.wbBufFlush1 (11 samples, 0.02%)</title><rect x="284.3" y="85" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="287.33" y="95.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (122 samples, 0.17%)</title><rect x="786.1" y="197" width="1.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="789.08" y="207.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (88 samples, 0.12%)</title><rect x="827.9" y="165" width="1.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="830.94" y="175.5" ></text>
</g>
<g >
<title>unicode.isExcludingLatin (9 samples, 0.01%)</title><rect x="779.8" y="197" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="782.83" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (11,318 samples, 15.44%)</title><rect x="956.4" y="229" width="182.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="959.41" y="239.5" >runtime.mallocgc</text>
</g>
<g >
<title>runtime.notesleep (9 samples, 0.01%)</title><rect x="823.2" y="181" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="826.24" y="191.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint64).Add (18 samples, 0.02%)</title><rect x="1044.8" y="149" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1047.76" y="159.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (7 samples, 0.01%)</title><rect x="829.6" y="197" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="832.63" y="207.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (1,140 samples, 1.56%)</title><rect x="285.2" y="165" width="18.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="288.16" y="175.5" ></text>
</g>
<g >
<title>runtime.futexsleep (8 samples, 0.01%)</title><rect x="283.6" y="85" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="286.55" y="95.5" ></text>
</g>
<g >
<title>runtime.stealWork (7 samples, 0.01%)</title><rect x="823.9" y="213" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="826.91" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (202 samples, 0.28%)</title><rect x="791.9" y="245" width="3.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="794.92" y="255.5" ></text>
</g>
<g >
<title>runtime.startm (8 samples, 0.01%)</title><rect x="796.2" y="165" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="799.16" y="175.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (76 samples, 0.10%)</title><rect x="126.2" y="117" width="1.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="129.22" y="127.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).trigger (21 samples, 0.03%)</title><rect x="1064.9" y="197" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1067.93" y="207.5" ></text>
</g>
<g >
<title>strconv.commonPrefixLenIgnoreCase (30 samples, 0.04%)</title><rect x="613.5" y="213" width="0.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="616.50" y="223.5" ></text>
</g>
<g >
<title>runtime.finishsweep_m (23 samples, 0.03%)</title><rect x="1064.3" y="165" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1067.32" y="175.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge.func1 (131 samples, 0.18%)</title><rect x="783.0" y="197" width="2.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="786.04" y="207.5" ></text>
</g>
<g >
<title>runtime.divRoundUp (35 samples, 0.05%)</title><rect x="951.9" y="229" width="0.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="954.90" y="239.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).init (7 samples, 0.01%)</title><rect x="126.3" y="101" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="129.25" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (31 samples, 0.04%)</title><rect x="811.1" y="197" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="814.06" y="207.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (7 samples, 0.01%)</title><rect x="136.7" y="181" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="139.67" y="191.5" ></text>
</g>
<g >
<title>runtime.preemptM (43 samples, 0.06%)</title><rect x="796.5" y="181" width="0.7" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="799.49" y="191.5" ></text>
</g>
<g >
<title>runtime.markroot (87 samples, 0.12%)</title><rect x="126.2" y="133" width="1.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="129.19" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (19 samples, 0.03%)</title><rect x="795.3" y="149" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="798.26" y="159.5" ></text>
</g>
<g >
<title>strings.Split (21,351 samples, 29.13%)</title><rect x="846.3" y="277" width="343.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="849.27" y="287.5" >strings.Split</text>
</g>
<g >
<title>main.readPart (35,601 samples, 48.57%)</title><rect x="209.9" y="277" width="573.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="212.87" y="287.5" >main.readPart</text>
</g>
<g >
<title>runtime.schedule (7 samples, 0.01%)</title><rect x="822.8" y="229" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="825.78" y="239.5" ></text>
</g>
<g >
<title>runtime.schedule (399 samples, 0.54%)</title><rect x="824.5" y="229" width="6.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="827.46" y="239.5" ></text>
</g>
<g >
<title>runtime.mPark (9 samples, 0.01%)</title><rect x="823.2" y="197" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="826.24" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (34 samples, 0.05%)</title><rect x="1042.9" y="117" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1045.87" y="127.5" ></text>
</g>
<g >
<title>runtime.makeSpanClass (54 samples, 0.07%)</title><rect x="955.5" y="229" width="0.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="958.54" y="239.5" ></text>
</g>
<g >
<title>indexbytebody (1,051 samples, 1.43%)</title><rect x="257.6" y="229" width="17.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="260.65" y="239.5" ></text>
</g>
<g >
<title>runtime.futex (72 samples, 0.10%)</title><rect x="831.4" y="197" width="1.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="834.45" y="207.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (664 samples, 0.91%)</title><rect x="125.6" y="149" width="10.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="128.56" y="159.5" ></text>
</g>
<g >
<title>internal/abi.(*Type).Pointers (34 samples, 0.05%)</title><rect x="945.4" y="229" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="948.38" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (86 samples, 0.12%)</title><rect x="115.7" y="229" width="1.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="118.66" y="239.5" ></text>
</g>
<g >
<title>runtime.notewakeup (15 samples, 0.02%)</title><rect x="829.4" y="181" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="832.35" y="191.5" ></text>
</g>
<g >
<title>runtime.forEachPInternal (193 samples, 0.26%)</title><rect x="791.9" y="213" width="3.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="794.92" y="223.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (14 samples, 0.02%)</title><rect x="278.2" y="181" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="281.19" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).heapGoalInternal (9 samples, 0.01%)</title><rect x="1065.1" y="181" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1068.12" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (12 samples, 0.02%)</title><rect x="1034.8" y="213" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1037.82" y="223.5" ></text>
</g>
<g >
<title>internal/stringslite.Index (565 samples, 0.77%)</title><rect x="852.0" y="245" width="9.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="855.00" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (7 samples, 0.01%)</title><rect x="110.5" y="181" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="113.52" y="191.5" ></text>
</g>
<g >
<title>runtime.exitsyscall0 (10 samples, 0.01%)</title><rect x="822.5" y="261" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="825.49" y="271.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (204 samples, 0.28%)</title><rect x="277.9" y="229" width="3.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="280.95" y="239.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (127 samples, 0.17%)</title><rect x="1040.3" y="133" width="2.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1043.26" y="143.5" ></text>
</g>
<g >
<title>internal/bytealg.CountString (213 samples, 0.29%)</title><rect x="1186.5" y="229" width="3.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1189.51" y="239.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readUnlock (18 samples, 0.02%)</title><rect x="282.0" y="197" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="284.96" y="207.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).Add (7 samples, 0.01%)</title><rect x="1036.8" y="165" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1039.82" y="175.5" ></text>
</g>
<g >
<title>runtime.futex (29 samples, 0.04%)</title><rect x="792.1" y="149" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="795.13" y="159.5" ></text>
</g>
<g >
<title>bufio.dropCR (152 samples, 0.21%)</title><rect x="252.7" y="245" width="2.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="255.67" y="255.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).CompareAndSwap (10 samples, 0.01%)</title><rect x="785.8" y="245" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="788.79" y="255.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (7 samples, 0.01%)</title><rect x="136.1" y="101" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="139.13" y="111.5" ></text>
</g>
<g >
<title>runtime.notewakeup (7 samples, 0.01%)</title><rect x="796.2" y="149" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="799.17" y="159.5" ></text>
</g>
<g >
<title>runtime.acquirep (11 samples, 0.02%)</title><rect x="826.7" y="165" width="0.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="829.66" y="175.5" ></text>
</g>
<g >
<title>runtime.markroot (33 samples, 0.05%)</title><rect x="1060.5" y="117" width="0.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1063.47" y="127.5" ></text>
</g>
<g >
<title>runtime.divRoundUp (14 samples, 0.02%)</title><rect x="41.5" y="245" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="44.47" y="255.5" ></text>
</g>
<g >
<title>runtime.gcStart.func2 (23 samples, 0.03%)</title><rect x="1064.3" y="181" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1067.32" y="191.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwunlock (14 samples, 0.02%)</title><rect x="282.0" y="181" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="285.02" y="191.5" ></text>
</g>
<g >
<title>runtime.futexsleep (9 samples, 0.01%)</title><rect x="823.2" y="165" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="826.24" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).markBitsForIndex (10 samples, 0.01%)</title><rect x="811.6" y="197" width="0.1" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="814.56" y="207.5" ></text>
</g>
<g >
<title>runtime.procyield (10 samples, 0.01%)</title><rect x="1043.2" y="53" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1046.16" y="63.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (151 samples, 0.21%)</title><rect x="795.2" y="261" width="2.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="798.17" y="271.5" ></text>
</g>
<g >
<title>runtime.pcvalue (10 samples, 0.01%)</title><rect x="126.5" y="53" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="129.51" y="63.5" ></text>
</g>
<g >
<title>strings.TrimLeftFunc (9 samples, 0.01%)</title><rect x="779.0" y="229" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="781.96" y="239.5" ></text>
</g>
<g >
<title>runtime.heapSetType (3,482 samples, 4.75%)</title><rect x="1066.4" y="213" width="56.0" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="1069.39" y="223.5" >runti..</text>
</g>
<g >
<title>strconv.ParseFloat (11,793 samples, 16.09%)</title><rect x="541.2" y="261" width="189.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="544.20" y="271.5" >strconv.ParseFloat</text>
</g>
<g >
<title>strings.genSplit (19,207 samples, 26.20%)</title><rect x="880.8" y="261" width="309.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="883.79" y="271.5" >strings.genSplit</text>
</g>
<g >
<title>runtime.findObject (150 samples, 0.20%)</title><rect x="931.8" y="165" width="2.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="934.79" y="175.5" ></text>
</g>
<g >
<title>strings.Count (1,893 samples, 2.58%)</title><rect x="1159.5" y="245" width="30.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1162.52" y="255.5" >st..</text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (8 samples, 0.01%)</title><rect x="1060.3" y="117" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1063.32" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (192 samples, 0.26%)</title><rect x="1037.1" y="149" width="3.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1040.12" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mspan).countAlloc (14 samples, 0.02%)</title><rect x="789.3" y="245" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="792.33" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (8 samples, 0.01%)</title><rect x="788.0" y="197" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="791.04" y="207.5" ></text>
</g>
<g >
<title>bytes.IndexByte (1,330 samples, 1.81%)</title><rect x="255.1" y="245" width="21.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="258.12" y="255.5" >b..</text>
</g>
<g >
<title>runtime.sysUnused (119 samples, 0.16%)</title><rect x="783.2" y="181" width="1.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="786.21" y="191.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (107 samples, 0.15%)</title><rect x="827.6" y="181" width="1.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="830.63" y="191.5" ></text>
</g>
<g >
<title>runtime.scanstack (104 samples, 0.14%)</title><rect x="799.0" y="181" width="1.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="802.02" y="191.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (12 samples, 0.02%)</title><rect x="931.6" y="165" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="934.60" y="175.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint64).CompareAndSwap (10 samples, 0.01%)</title><rect x="788.8" y="229" width="0.1" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="791.77" y="239.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (44 samples, 0.06%)</title><rect x="110.7" y="181" width="0.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="113.71" y="191.5" ></text>
</g>
<g >
<title>unicode.IsSpace (15 samples, 0.02%)</title><rect x="779.7" y="213" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="782.74" y="223.5" ></text>
</g>
<g >
<title>runtime.procresize (7 samples, 0.01%)</title><rect x="796.0" y="181" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="799.03" y="191.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination (24 samples, 0.03%)</title><rect x="795.9" y="245" width="0.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="798.90" y="255.5" ></text>
</g>
<g >
<title>runtime.asyncPreempt (10 samples, 0.01%)</title><rect x="935.2" y="245" width="0.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="938.17" y="255.5" ></text>
</g>
<g >
<title>runtime.tophash (22 samples, 0.03%)</title><rect x="540.8" y="261" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="543.84" y="271.5" ></text>
</g>
<g >
<title>runtime.notetsleep (7 samples, 0.01%)</title><rect x="796.4" y="197" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="799.37" y="207.5" ></text>
</g>
<g >
<title>runtime.morestack (1,339 samples, 1.83%)</title><rect x="824.2" y="277" width="21.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="827.25" y="287.5" >r..</text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (53 samples, 0.07%)</title><rect x="796.4" y="213" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="799.37" y="223.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (219 samples, 0.30%)</title><rect x="1060.0" y="197" width="3.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1062.97" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (65 samples, 0.09%)</title><rect x="109.4" y="117" width="1.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="112.44" y="127.5" ></text>
</g>
<g >
<title>runtime.signalM (43 samples, 0.06%)</title><rect x="796.5" y="165" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="799.49" y="175.5" ></text>
</g>
<g >
<title>strings.lastIndexFunc (12 samples, 0.02%)</title><rect x="779.3" y="213" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="782.27" y="223.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (14 samples, 0.02%)</title><rect x="928.7" y="181" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="931.68" y="191.5" ></text>
</g>
<g >
<title>runtime.futex (90 samples, 0.12%)</title><rect x="825.1" y="133" width="1.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="828.12" y="143.5" ></text>
</g>
<g >
<title>runtime.notetsleep (32 samples, 0.04%)</title><rect x="792.1" y="197" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="795.08" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (161 samples, 0.22%)</title><rect x="1037.4" y="101" width="2.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1040.38" y="111.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).Add (11 samples, 0.02%)</title><rect x="109.1" y="181" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="112.07" y="191.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (12 samples, 0.02%)</title><rect x="1043.1" y="85" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1046.13" y="95.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (17 samples, 0.02%)</title><rect x="822.1" y="181" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="825.08" y="191.5" ></text>
</g>
<g >
<title>runtime.markroot (244 samples, 0.33%)</title><rect x="798.7" y="213" width="3.9" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="801.70" y="223.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (14 samples, 0.02%)</title><rect x="136.0" y="117" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="139.02" y="127.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (30 samples, 0.04%)</title><rect x="820.6" y="197" width="0.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="823.63" y="207.5" ></text>
</g>
<g >
<title>runtime.lock2 (8 samples, 0.01%)</title><rect x="788.2" y="181" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="791.20" y="191.5" ></text>
</g>
<g >
<title>runtime.lock2 (12 samples, 0.02%)</title><rect x="1043.1" y="69" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1046.13" y="79.5" ></text>
</g>
<g >
<title>runtime.resetspinning (60 samples, 0.08%)</title><rect x="829.8" y="213" width="1.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="832.84" y="223.5" ></text>
</g>
<g >
<title>runtime.scanblock (7 samples, 0.01%)</title><rect x="1060.7" y="53" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1063.71" y="63.5" ></text>
</g>
<g >
<title>runtime.bool2int (23 samples, 0.03%)</title><rect x="951.5" y="229" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="954.53" y="239.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4.1 (11 samples, 0.02%)</title><rect x="795.6" y="165" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="798.58" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (672 samples, 0.92%)</title><rect x="125.4" y="197" width="10.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="128.45" y="207.5" ></text>
</g>
<g >
<title>memeqbody (1,707 samples, 2.33%)</title><rect x="509.0" y="245" width="27.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="512.05" y="255.5" >m..</text>
</g>
<g >
<title>runtime.scanobject (1,147 samples, 1.56%)</title><rect x="802.6" y="213" width="18.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="805.64" y="223.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (15 samples, 0.02%)</title><rect x="1062.9" y="101" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1065.95" y="111.5" ></text>
</g>
<g >
<title>internal/stringslite.IndexByte (1,223 samples, 1.67%)</title><rect x="861.1" y="245" width="19.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="864.10" y="255.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByteString (146 samples, 0.20%)</title><rect x="878.4" y="229" width="2.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="881.44" y="239.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint64).Add (13 samples, 0.02%)</title><rect x="1036.2" y="181" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1039.18" y="191.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (111 samples, 0.15%)</title><rect x="800.8" y="197" width="1.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="803.81" y="207.5" ></text>
</g>
<g >
<title>io.(*LimitedReader).Read (1,384 samples, 1.89%)</title><rect x="281.2" y="245" width="22.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="284.23" y="255.5" >i..</text>
</g>
<g >
<title>runtime.wbBufFlush (19 samples, 0.03%)</title><rect x="822.0" y="213" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="825.04" y="223.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (1,892 samples, 2.58%)</title><rect x="791.9" y="277" width="30.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="794.91" y="287.5" >ru..</text>
</g>
<g >
<title>runtime.preemptall (46 samples, 0.06%)</title><rect x="796.5" y="197" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="799.48" y="207.5" ></text>
</g>
<g >
<title>strings.TrimFunc (72 samples, 0.10%)</title><rect x="778.8" y="245" width="1.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="781.82" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (20 samples, 0.03%)</title><rect x="795.3" y="165" width="0.3" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="798.26" y="175.5" ></text>
</g>
<g >
<title>runtime.memmove (870 samples, 1.19%)</title><rect x="140.4" y="245" width="14.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="143.38" y="255.5" ></text>
</g>
<g >
<title>runtime.wakep (57 samples, 0.08%)</title><rect x="829.9" y="197" width="0.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="832.88" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (64 samples, 0.09%)</title><rect x="1044.0" y="181" width="1.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1047.03" y="191.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).Add (8 samples, 0.01%)</title><rect x="790.5" y="229" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="793.52" y="239.5" ></text>
</g>
<g >
<title>unicode/utf8.DecodeRuneInString (33 samples, 0.05%)</title><rect x="782.5" y="229" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="785.47" y="239.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (7 samples, 0.01%)</title><rect x="1052.9" y="213" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1055.85" y="223.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (8 samples, 0.01%)</title><rect x="134.2" y="117" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="137.17" y="127.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (21 samples, 0.03%)</title><rect x="790.7" y="229" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="793.75" y="239.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (15 samples, 0.02%)</title><rect x="1060.6" y="69" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1063.58" y="79.5" ></text>
</g>
<g >
<title>runtime.futex (49 samples, 0.07%)</title><rect x="845.0" y="197" width="0.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="848.02" y="207.5" ></text>
</g>
<g >
<title>runtime.gcstopm (122 samples, 0.17%)</title><rect x="824.9" y="197" width="2.0" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="827.93" y="207.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (62 samples, 0.08%)</title><rect x="1044.1" y="165" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1047.06" y="175.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (10,206 samples, 13.92%)</title><rect x="15.5" y="261" width="164.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="18.47" y="271.5" >runtime.slicebytetost..</text>
</g>
<g >
<title>runtime.wbBufFlush (407 samples, 0.56%)</title><rect x="928.6" y="229" width="6.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="931.62" y="239.5" ></text>
</g>
<g >
<title>runtime.findObject (134 samples, 0.18%)</title><rect x="812.4" y="197" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="815.35" y="207.5" ></text>
</g>
<g >
<title>all (73,297 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>runtime.releasem (256 samples, 0.35%)</title><rect x="1155.4" y="229" width="4.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1158.40" y="239.5" ></text>
</g>
<g >
<title>runtime.newAllocBits (8 samples, 0.01%)</title><rect x="1039.8" y="85" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1042.85" y="95.5" ></text>
</g>
<g >
<title>runtime.asyncPreempt (13 samples, 0.02%)</title><rect x="722.0" y="197" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="724.96" y="207.5" ></text>
</g>
<g >
<title>runtime.gcStart.func1 (17 samples, 0.02%)</title><rect x="136.3" y="197" width="0.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="139.28" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (70 samples, 0.10%)</title><rect x="109.4" y="133" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="112.39" y="143.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (9 samples, 0.01%)</title><rect x="1042.9" y="53" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1045.90" y="63.5" ></text>
</g>
<g >
<title>runtime.tgkill (103 samples, 0.14%)</title><rect x="793.3" y="149" width="1.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="796.31" y="159.5" ></text>
</g>
<g >
<title>runtime.gcmarknewobject (70 samples, 0.10%)</title><rect x="1065.3" y="213" width="1.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1068.27" y="223.5" ></text>
</g>
<g >
<title>runtime.(*sysMemStat).add (11 samples, 0.02%)</title><rect x="787.8" y="181" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="790.83" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (131 samples, 0.18%)</title><rect x="783.0" y="213" width="2.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="786.04" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).heapBits (221 samples, 0.30%)</title><rect x="1112.9" y="181" width="3.5" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="1115.89" y="191.5" ></text>
</g>
<g >
<title>runtime.sweepone (399 samples, 0.54%)</title><rect x="785.5" y="261" width="6.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="788.48" y="271.5" ></text>
</g>
<g >
<title>runtime.procyield (702 samples, 0.96%)</title><rect x="833.6" y="213" width="11.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="836.62" y="223.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (8,621 samples, 11.76%)</title><rect x="402.1" y="261" width="138.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="405.06" y="271.5" >runtime.mapaccess..</text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (155 samples, 0.21%)</title><rect x="786.0" y="245" width="2.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="789.00" y="255.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (10 samples, 0.01%)</title><rect x="132.2" y="117" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="135.17" y="127.5" ></text>
</g>
<g >
<title>runtime.memequal (116 samples, 0.16%)</title><rect x="398.2" y="245" width="1.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="401.16" y="255.5" ></text>
</g>
<g >
<title>runtime.spanOf (30 samples, 0.04%)</title><rect x="280.8" y="165" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="283.75" y="175.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).free (9 samples, 0.01%)</title><rect x="111.0" y="85" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="114.02" y="95.5" ></text>
</g>
<g >
<title>runtime.findObject (19 samples, 0.03%)</title><rect x="1062.4" y="101" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1065.42" y="111.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (126 samples, 0.17%)</title><rect x="827.6" y="197" width="2.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="830.57" y="207.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (9 samples, 0.01%)</title><rect x="1063.3" y="117" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1066.32" y="127.5" ></text>
</g>
<g >
<title>runtime.mcall (115 samples, 0.16%)</title><rect x="822.4" y="277" width="1.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="825.40" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (184 samples, 0.25%)</title><rect x="1037.3" y="117" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1040.25" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (14 samples, 0.02%)</title><rect x="1042.9" y="85" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1045.89" y="95.5" ></text>
</g>
<g >
<title>runtime.systemstack (204 samples, 0.28%)</title><rect x="277.9" y="213" width="3.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="280.95" y="223.5" ></text>
</g>
<g >
<title>runtime.nanotime (11 samples, 0.02%)</title><rect x="827.4" y="197" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="830.39" y="207.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).free (10 samples, 0.01%)</title><rect x="1042.9" y="69" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1045.90" y="79.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func3 (15 samples, 0.02%)</title><rect x="111.0" y="117" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="113.97" y="127.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).init (7 samples, 0.01%)</title><rect x="798.8" y="181" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="801.83" y="191.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier2 (10 samples, 0.01%)</title><rect x="935.3" y="245" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="938.33" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (70 samples, 0.10%)</title><rect x="109.4" y="165" width="1.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="112.39" y="175.5" ></text>
</g>
<g >
<title>runtime.alignUp (297 samples, 0.41%)</title><rect x="36.7" y="245" width="4.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="39.66" y="255.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (11 samples, 0.02%)</title><rect x="126.5" y="69" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="129.49" y="79.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (157 samples, 0.21%)</title><rect x="109.0" y="197" width="2.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="111.96" y="207.5" ></text>
</g>
<g >
<title>strings.TrimSpace (3,227 samples, 4.40%)</title><rect x="731.1" y="261" width="51.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="734.05" y="271.5" >strin..</text>
</g>
<g >
<title>os.(*File).wrapErr (11 samples, 0.02%)</title><rect x="281.7" y="213" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="284.68" y="223.5" ></text>
</g>
<g >
<title>runtime.pcvalue (13 samples, 0.02%)</title><rect x="799.3" y="133" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="802.30" y="143.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (9 samples, 0.01%)</title><rect x="795.4" y="117" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="798.42" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (89 samples, 0.12%)</title><rect x="1037.7" y="85" width="1.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1040.70" y="95.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).reset (16 samples, 0.02%)</title><rect x="1064.3" y="149" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1067.35" y="159.5" ></text>
</g>
<g >
<title>runtime.(*bmap).overflow (25 samples, 0.03%)</title><rect x="308.7" y="261" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="311.70" y="271.5" ></text>
</g>
<g >
<title>runtime.finishsweep_m (7 samples, 0.01%)</title><rect x="136.6" y="181" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="139.55" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (9 samples, 0.01%)</title><rect x="826.7" y="133" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="829.70" y="143.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (7 samples, 0.01%)</title><rect x="796.4" y="181" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="799.37" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (50 samples, 0.07%)</title><rect x="930.8" y="165" width="0.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="933.78" y="175.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (15 samples, 0.02%)</title><rect x="136.3" y="181" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="139.28" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (28 samples, 0.04%)</title><rect x="1038.2" y="69" width="0.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1041.22" y="79.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (15 samples, 0.02%)</title><rect x="111.0" y="149" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="113.97" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (21 samples, 0.03%)</title><rect x="125.7" y="133" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="128.69" y="143.5" ></text>
</g>
<g >
<title>unicode/utf8.DecodeRuneInString (37 samples, 0.05%)</title><rect x="781.8" y="197" width="0.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="784.80" y="207.5" ></text>
</g>
<g >
<title>runtime.asyncPreempt (9 samples, 0.01%)</title><rect x="209.7" y="261" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="212.72" y="271.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (10 samples, 0.01%)</title><rect x="126.9" y="53" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="129.93" y="63.5" ></text>
</g>
<g >
<title>memeqbody (705 samples, 0.96%)</title><rect x="386.8" y="245" width="11.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="389.78" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (33 samples, 0.05%)</title><rect x="1061.7" y="101" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1064.74" y="111.5" ></text>
</g>
<g >
<title>runtime.tgkill (23 samples, 0.03%)</title><rect x="798.1" y="149" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="801.10" y="159.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (203 samples, 0.28%)</title><rect x="1060.2" y="133" width="3.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1063.19" y="143.5" ></text>
</g>
<g >
<title>bufio.(*Scanner).advance (276 samples, 0.38%)</title><rect x="303.7" y="261" width="4.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="306.72" y="271.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (42 samples, 0.06%)</title><rect x="129.2" y="117" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="132.24" y="127.5" ></text>
</g>
<g >
<title>runtime.getpid (38 samples, 0.05%)</title><rect x="792.7" y="149" width="0.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="795.70" y="159.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (26 samples, 0.04%)</title><rect x="111.6" y="181" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="114.57" y="191.5" ></text>
</g>
<g >
<title>runtime.unlock2 (7 samples, 0.01%)</title><rect x="795.1" y="197" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="798.06" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (605 samples, 0.83%)</title><rect x="1035.4" y="197" width="9.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1038.39" y="207.5" ></text>
</g>
<g >
<title>runtime.gcstopm (16 samples, 0.02%)</title><rect x="823.2" y="213" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="826.20" y="223.5" ></text>
</g>
<g >
<title>strconv.atof64 (10,628 samples, 14.50%)</title><rect x="560.0" y="229" width="171.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="562.95" y="239.5" >strconv.atof64</text>
</g>
<g >
<title>runtime.scanframeworker (41 samples, 0.06%)</title><rect x="126.7" y="85" width="0.7" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="129.70" y="95.5" ></text>
</g>
<g >
<title>runtime.scanblock (15 samples, 0.02%)</title><rect x="127.1" y="69" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="130.12" y="79.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).init.func2 (133 samples, 0.18%)</title><rect x="783.0" y="245" width="2.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="786.00" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mspan).heapBitsSmallForAddr (9 samples, 0.01%)</title><rect x="811.8" y="181" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="814.84" y="191.5" ></text>
</g>
<g >
<title>runtime.releasem (257 samples, 0.35%)</title><rect x="175.6" y="245" width="4.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="178.64" y="255.5" ></text>
</g>
<g >
<title>runtime.futex (7 samples, 0.01%)</title><rect x="795.1" y="165" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="798.06" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (185 samples, 0.25%)</title><rect x="1037.2" y="133" width="3.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1040.24" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (21 samples, 0.03%)</title><rect x="1112.5" y="181" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1115.55" y="191.5" ></text>
</g>
<g >
<title>runtime.gcStart (32 samples, 0.04%)</title><rect x="136.3" y="229" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="139.28" y="239.5" ></text>
</g>
<g >
<title>runtime.tgkill (29 samples, 0.04%)</title><rect x="796.7" y="149" width="0.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="799.72" y="159.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (7 samples, 0.01%)</title><rect x="795.1" y="213" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="798.06" y="223.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (13 samples, 0.02%)</title><rect x="1061.5" y="101" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1064.51" y="111.5" ></text>
</g>
<g >
<title>runtime.systemstack (211 samples, 0.29%)</title><rect x="1060.1" y="181" width="3.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1063.10" y="191.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (21 samples, 0.03%)</title><rect x="823.5" y="213" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="826.48" y="223.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).allocToCache (17 samples, 0.02%)</title><rect x="1039.3" y="85" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1042.30" y="95.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).summarize (51 samples, 0.07%)</title><rect x="786.6" y="149" width="0.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="789.58" y="159.5" ></text>
</g>
<g >
<title>runtime.systemstack (79 samples, 0.11%)</title><rect x="796.3" y="245" width="1.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="799.33" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (453 samples, 0.62%)</title><rect x="1036.6" y="181" width="7.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1039.64" y="191.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1,043 samples, 1.42%)</title><rect x="1138.6" y="229" width="16.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1141.61" y="239.5" ></text>
</g>
<g >
<title>runtime.futex (9 samples, 0.01%)</title><rect x="823.2" y="149" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="826.24" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (9 samples, 0.01%)</title><rect x="1042.3" y="165" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1045.32" y="175.5" ></text>
</g>
<g >
<title>runtime.preemptall (34 samples, 0.05%)</title><rect x="1063.7" y="149" width="0.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1066.69" y="159.5" ></text>
</g>
<g >
<title>runtime.preemptall (13 samples, 0.02%)</title><rect x="136.3" y="165" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="139.31" y="175.5" ></text>
</g>
<g >
<title>runtime.unlock2 (7 samples, 0.01%)</title><rect x="788.4" y="181" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="791.38" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).update (10 samples, 0.01%)</title><rect x="1036.5" y="181" width="0.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1039.48" y="191.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (17 samples, 0.02%)</title><rect x="815.9" y="197" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="818.91" y="207.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (15 samples, 0.02%)</title><rect x="800.1" y="133" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="803.05" y="143.5" ></text>
</g>
<g >
<title>runtime.heapBitsSlice (328 samples, 0.45%)</title><rect x="1116.4" y="181" width="5.3" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1119.44" y="191.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (71 samples, 0.10%)</title><rect x="786.4" y="165" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="789.45" y="175.5" ></text>
</g>
<g >
<title>runtime.signalM (28 samples, 0.04%)</title><rect x="798.0" y="165" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="801.02" y="175.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (128 samples, 0.17%)</title><rect x="798.7" y="197" width="2.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="801.75" y="207.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwlock (14 samples, 0.02%)</title><rect x="282.3" y="197" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="285.26" y="207.5" ></text>
</g>
<g >
<title>runtime.signalM (33 samples, 0.05%)</title><rect x="1063.7" y="117" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1066.69" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mspan).typePointersOfUnchecked (16 samples, 0.02%)</title><rect x="811.8" y="197" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="814.76" y="207.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (670 samples, 0.91%)</title><rect x="125.5" y="165" width="10.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="128.46" y="175.5" ></text>
</g>
<g >
<title>runtime.greyobject (69 samples, 0.09%)</title><rect x="814.5" y="197" width="1.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="817.51" y="207.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (956 samples, 1.30%)</title><rect x="1122.4" y="213" width="15.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1125.45" y="223.5" ></text>
</g>
<g >
<title>runtime.findObject (34 samples, 0.05%)</title><rect x="828.6" y="149" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="831.56" y="159.5" ></text>
</g>
<g >
<title>runtime.tgkill (10 samples, 0.01%)</title><rect x="136.4" y="117" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="139.36" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (666 samples, 0.91%)</title><rect x="1035.0" y="213" width="10.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1038.03" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).tryAllocMSpan (9 samples, 0.01%)</title><rect x="1040.0" y="101" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1042.97" y="111.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (32 samples, 0.04%)</title><rect x="1137.9" y="213" width="0.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1140.86" y="223.5" ></text>
</g>
<g >
<title>runtime.casgstatus (13 samples, 0.02%)</title><rect x="283.3" y="133" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="286.28" y="143.5" ></text>
</g>
<g >
<title>runtime.makeslice (13,916 samples, 18.99%)</title><rect x="935.5" y="245" width="224.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="938.49" y="255.5" >runtime.makeslice</text>
</g>
<g >
<title>runtime.futexwakeup (7 samples, 0.01%)</title><rect x="796.2" y="133" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="799.17" y="143.5" ></text>
</g>
<g >
<title>runtime.gcStart.func2 (7 samples, 0.01%)</title><rect x="136.6" y="197" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="139.55" y="207.5" ></text>
</g>
<g >
<title>runtime.sweepone (30 samples, 0.04%)</title><rect x="110.9" y="165" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="113.94" y="175.5" ></text>
</g>
<g >
<title>runtime.gcDrain (1,525 samples, 2.08%)</title><rect x="797.8" y="229" width="24.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="800.80" y="239.5" >r..</text>
</g>
<g >
<title>runtime.(*pageCache).flush (11 samples, 0.02%)</title><rect x="795.6" y="149" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="798.58" y="159.5" ></text>
</g>
<g >
<title>gcWriteBarrier (558 samples, 0.76%)</title><rect x="926.2" y="245" width="9.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="929.19" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mspan).markBitsForIndex (8 samples, 0.01%)</title><rect x="928.9" y="181" width="0.2" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="931.92" y="191.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (15 samples, 0.02%)</title><rect x="829.4" y="165" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="832.35" y="175.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (7 samples, 0.01%)</title><rect x="824.9" y="181" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="827.94" y="191.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (12 samples, 0.02%)</title><rect x="135.7" y="117" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="138.65" y="127.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (119 samples, 0.16%)</title><rect x="789.6" y="245" width="1.9" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="792.57" y="255.5" ></text>
</g>
<g >
<title>runtime.(*bmap).keys (33 samples, 0.05%)</title><rect x="308.2" y="261" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="311.17" y="271.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (14 samples, 0.02%)</title><rect x="125.7" y="117" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="128.73" y="127.5" ></text>
</g>
<g >
<title>runtime.strhash (145 samples, 0.20%)</title><rect x="538.5" y="245" width="2.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="541.51" y="255.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (19 samples, 0.03%)</title><rect x="791.1" y="229" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="794.10" y="239.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (10 samples, 0.01%)</title><rect x="109.9" y="85" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="112.88" y="95.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (230 samples, 0.31%)</title><rect x="108.3" y="213" width="3.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="111.33" y="223.5" ></text>
</g>
<g >
<title>runtime.strhash (126 samples, 0.17%)</title><rect x="400.0" y="245" width="2.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="403.03" y="255.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (405 samples, 0.55%)</title><rect x="928.7" y="197" width="6.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="931.65" y="207.5" ></text>
</g>
<g >
<title>strconv.parseFloatPrefix (10,941 samples, 14.93%)</title><rect x="554.9" y="245" width="176.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="557.92" y="255.5" >strconv.parseFloatPrefix</text>
</g>
<g >
<title>runtime.(*unwinder).initAt (7 samples, 0.01%)</title><rect x="126.3" y="85" width="0.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="129.25" y="95.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint64).Add (9 samples, 0.01%)</title><rect x="111.8" y="165" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="114.84" y="175.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (31 samples, 0.04%)</title><rect x="134.3" y="117" width="0.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="137.30" y="127.5" ></text>
</g>
<g >
<title>runtime.systemstack (155 samples, 0.21%)</title><rect x="786.0" y="229" width="2.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="789.00" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (282 samples, 0.38%)</title><rect x="1045.8" y="213" width="4.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1048.75" y="223.5" ></text>
</g>
<g >
<title>runtime.lock2 (864 samples, 1.18%)</title><rect x="831.0" y="229" width="13.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="834.01" y="239.5" ></text>
</g>
<g >
<title>runtime.scanblock (111 samples, 0.15%)</title><rect x="800.8" y="181" width="1.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="803.81" y="191.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (7 samples, 0.01%)</title><rect x="111.3" y="149" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="114.31" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (35 samples, 0.05%)</title><rect x="109.7" y="101" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="112.68" y="111.5" ></text>
</g>
<g >
<title>runtime.spanOf (36 samples, 0.05%)</title><rect x="816.7" y="197" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="819.68" y="207.5" ></text>
</g>
<g >
<title>runtime.lock2 (47 samples, 0.06%)</title><rect x="283.6" y="101" width="0.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="286.55" y="111.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).Add (8 samples, 0.01%)</title><rect x="1036.0" y="181" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1039.03" y="191.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (415 samples, 0.57%)</title><rect x="824.3" y="245" width="6.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="827.33" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (407 samples, 0.56%)</title><rect x="928.6" y="213" width="6.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="931.62" y="223.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (52 samples, 0.07%)</title><rect x="138.3" y="229" width="0.9" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="141.34" y="239.5" ></text>
</g>
<g >
<title>runtime.procyield (35 samples, 0.05%)</title><rect x="283.7" y="85" width="0.6" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="286.75" y="95.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (17 samples, 0.02%)</title><rect x="799.2" y="149" width="0.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="802.25" y="159.5" ></text>
</g>
<g >
<title>runtime.futex (7 samples, 0.01%)</title><rect x="796.2" y="117" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="799.17" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (46 samples, 0.06%)</title><rect x="112.0" y="213" width="0.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="115.03" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (5,830 samples, 7.95%)</title><rect x="46.5" y="245" width="93.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="49.53" y="255.5" >runtime.mal..</text>
</g>
<g >
<title>runtime.wbBufFlush (14 samples, 0.02%)</title><rect x="136.0" y="133" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="139.02" y="143.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (7 samples, 0.01%)</title><rect x="795.1" y="181" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="798.06" y="191.5" ></text>
</g>
<g >
<title>runtime.gcStart.func3 (7 samples, 0.01%)</title><rect x="136.7" y="197" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="139.67" y="207.5" ></text>
</g>
<g >
<title>runtime.findObject (8 samples, 0.01%)</title><rect x="797.5" y="197" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="800.46" y="207.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (13 samples, 0.02%)</title><rect x="822.7" y="245" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="825.70" y="255.5" ></text>
</g>
<g >
<title>runtime.preemptM (33 samples, 0.05%)</title><rect x="1063.7" y="133" width="0.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1066.69" y="143.5" ></text>
</g>
<g >
<title>runtime.gcStart.func3 (9 samples, 0.01%)</title><rect x="1064.7" y="181" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1067.69" y="191.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (11 samples, 0.02%)</title><rect x="1042.5" y="165" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1045.50" y="175.5" ></text>
</g>
<g >
<title>runtime.findObject (77 samples, 0.11%)</title><rect x="279.5" y="165" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="282.51" y="175.5" ></text>
</g>
<g >
<title>runtime.(*scavengeIndex).free (8 samples, 0.01%)</title><rect x="787.6" y="165" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="790.59" y="175.5" ></text>
</g>
<g >
<title>aeshashbody (1,070 samples, 1.46%)</title><rect x="369.6" y="245" width="17.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="372.55" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).nextSpanForSweep (7 samples, 0.01%)</title><rect x="1043.4" y="133" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1046.42" y="143.5" ></text>
</g>
<g >
<title>runtime.systemstack (15 samples, 0.02%)</title><rect x="111.0" y="133" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="113.97" y="143.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (25 samples, 0.03%)</title><rect x="1060.5" y="101" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1063.47" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (11 samples, 0.02%)</title><rect x="795.4" y="133" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="798.38" y="143.5" ></text>
</g>
<g >
<title>runtime.getMCache (294 samples, 0.40%)</title><rect x="41.7" y="245" width="4.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="44.70" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (303 samples, 0.41%)</title><rect x="107.9" y="229" width="4.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="110.90" y="239.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (1,178 samples, 1.61%)</title><rect x="117.3" y="229" width="19.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="120.32" y="239.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (19 samples, 0.03%)</title><rect x="796.0" y="197" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="798.98" y="207.5" ></text>
</g>
<g >
<title>runtime.gcStart.func1 (47 samples, 0.06%)</title><rect x="1063.6" y="181" width="0.7" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1066.56" y="191.5" ></text>
</g>
<g >
<title>runtime/internal/sys.LeadingZeros64 (7 samples, 0.01%)</title><rect x="787.5" y="149" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="790.48" y="159.5" ></text>
</g>
<g >
<title>runtime.suspendG (7 samples, 0.01%)</title><rect x="800.7" y="181" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="803.70" y="191.5" ></text>
</g>
<g >
<title>runtime.entersyscall (123 samples, 0.17%)</title><rect x="282.7" y="165" width="1.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="285.65" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (150 samples, 0.20%)</title><rect x="1050.3" y="213" width="2.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1053.29" y="223.5" ></text>
</g>
<g >
<title>runtime.futexsleep (93 samples, 0.13%)</title><rect x="825.1" y="149" width="1.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="828.07" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (26 samples, 0.04%)</title><rect x="111.6" y="197" width="0.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="114.57" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (39 samples, 0.05%)</title><rect x="1045.1" y="197" width="0.7" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1048.13" y="207.5" ></text>
</g>
<g >
<title>runtime.getcallerfp (10 samples, 0.01%)</title><rect x="282.8" y="149" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="285.81" y="159.5" ></text>
</g>
<g >
<title>runtime.systemstack (1,532 samples, 2.09%)</title><rect x="797.7" y="261" width="24.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="800.70" y="271.5" >r..</text>
</g>
<g >
<title>runtime.(*stkframe).getStackMap (14 samples, 0.02%)</title><rect x="126.9" y="69" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="129.86" y="79.5" ></text>
</g>
<g >
<title>runtime.preemptM (13 samples, 0.02%)</title><rect x="136.3" y="149" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="139.31" y="159.5" ></text>
</g>
<g >
<title>bufio.ScanLines (425 samples, 0.58%)</title><rect x="245.8" y="245" width="6.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="248.83" y="255.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).free (90 samples, 0.12%)</title><rect x="786.4" y="181" width="1.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="789.38" y="191.5" ></text>
</g>
<g >
<title>runtime.futexsleep (29 samples, 0.04%)</title><rect x="792.1" y="165" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="795.13" y="175.5" ></text>
</g>
<g >
<title>bufio.(*Scanner).Scan (4,894 samples, 6.68%)</title><rect x="224.9" y="261" width="78.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="227.94" y="271.5" >bufio.(*S..</text>
</g>
<g >
<title>runtime.procyield (12 samples, 0.02%)</title><rect x="823.6" y="181" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="826.62" y="191.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (48 samples, 0.07%)</title><rect x="830.0" y="149" width="0.8" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="833.03" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (20 samples, 0.03%)</title><rect x="279.1" y="165" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="282.13" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (14 samples, 0.02%)</title><rect x="131.8" y="117" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="134.76" y="127.5" ></text>
</g>
<g >
<title>runtime.futex (15 samples, 0.02%)</title><rect x="829.4" y="149" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="832.35" y="159.5" ></text>
</g>
<g >
<title>syscall.Syscall (1,297 samples, 1.77%)</title><rect x="282.6" y="181" width="20.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="285.63" y="191.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func3 (155 samples, 0.21%)</title><rect x="786.0" y="213" width="2.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="789.00" y="223.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (64 samples, 0.09%)</title><rect x="799.6" y="165" width="1.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="802.63" y="175.5" ></text>
</g>
<g >
<title>strings.TrimRightFunc (22 samples, 0.03%)</title><rect x="779.1" y="229" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="782.11" y="239.5" ></text>
</g>
<g >
<title>strings.lastIndexFunc (117 samples, 0.16%)</title><rect x="780.6" y="229" width="1.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="783.59" y="239.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).summarize (8 samples, 0.01%)</title><rect x="1042.9" y="37" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1045.92" y="47.5" ></text>
</g>
<g >
<title>runtime.(*stkframe).getStackMap (25 samples, 0.03%)</title><rect x="799.9" y="149" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="802.89" y="159.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (49 samples, 0.07%)</title><rect x="845.0" y="213" width="0.8" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="848.02" y="223.5" ></text>
</g>
<g >
<title>runtime.tgkill (10 samples, 0.01%)</title><rect x="125.8" y="69" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="128.80" y="79.5" ></text>
</g>
<g >
<title>runtime.futexsleep (7 samples, 0.01%)</title><rect x="796.4" y="165" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="799.37" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (11 samples, 0.02%)</title><rect x="826.7" y="149" width="0.1" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="829.66" y="159.5" ></text>
</g>
<g >
<title>runtime.spanOf (15 samples, 0.02%)</title><rect x="829.1" y="149" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="832.11" y="159.5" ></text>
</g>
<g >
<title>unicode/utf8.DecodeLastRuneInString (75 samples, 0.10%)</title><rect x="781.2" y="213" width="1.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="784.18" y="223.5" ></text>
</g>
<g >
<title>os.(*File).read (1,344 samples, 1.83%)</title><rect x="281.9" y="229" width="21.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="284.88" y="239.5" >o..</text>
</g>
<g >
<title>runtime.mPark (94 samples, 0.13%)</title><rect x="825.1" y="181" width="1.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="828.05" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (9 samples, 0.01%)</title><rect x="278.0" y="181" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="280.97" y="191.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).summarize (7 samples, 0.01%)</title><rect x="1039.4" y="53" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1042.36" y="63.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readLock (15 samples, 0.02%)</title><rect x="282.2" y="213" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="285.25" y="223.5" ></text>
</g>
<g >
<title>strconv.special (552 samples, 0.75%)</title><rect x="722.2" y="213" width="8.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="725.17" y="223.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (203 samples, 0.28%)</title><rect x="278.0" y="197" width="3.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="280.97" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (12 samples, 0.02%)</title><rect x="125.2" y="181" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="128.20" y="191.5" ></text>
</g>
<g >
<title>runtime.signalM (13 samples, 0.02%)</title><rect x="136.3" y="133" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="139.31" y="143.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (671 samples, 0.92%)</title><rect x="125.5" y="181" width="10.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="128.46" y="191.5" ></text>
</g>
<g >
<title>runtime.add (722 samples, 0.99%)</title><rect x="309.1" y="261" width="11.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="312.10" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (690 samples, 0.94%)</title><rect x="125.2" y="213" width="11.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="128.17" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (116 samples, 0.16%)</title><rect x="809.2" y="197" width="1.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="812.20" y="207.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (8 samples, 0.01%)</title><rect x="788.2" y="197" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="791.20" y="207.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (20 samples, 0.03%)</title><rect x="797.3" y="213" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="800.28" y="223.5" ></text>
</g>
<g >
<title>runtime.futexsleep (7 samples, 0.01%)</title><rect x="1063.6" y="117" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1066.58" y="127.5" ></text>
</g>
<g >
<title>bufio.(*Scanner).Text (10,546 samples, 14.39%)</title><rect x="10.0" y="277" width="169.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >bufio.(*Scanner).Text</text>
</g>
<g >
<title>runtime.pcvalue (10 samples, 0.01%)</title><rect x="800.1" y="117" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="803.13" y="127.5" ></text>
</g>
<g >
<title>runtime.findRunnable (316 samples, 0.43%)</title><rect x="824.7" y="213" width="5.0" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="827.65" y="223.5" ></text>
</g>
<g >
<title>runtime.lock2 (7 samples, 0.01%)</title><rect x="824.9" y="165" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="827.94" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (32 samples, 0.04%)</title><rect x="136.3" y="213" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="139.28" y="223.5" ></text>
</g>
<g >
<title>runtime.lock2 (26 samples, 0.04%)</title><rect x="826.9" y="181" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="829.91" y="191.5" ></text>
</g>
<g >
<title>runtime.futex (47 samples, 0.06%)</title><rect x="830.0" y="133" width="0.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="833.05" y="143.5" ></text>
</g>
<g >
<title>runtime.getpid (7 samples, 0.01%)</title><rect x="1063.7" y="101" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1066.69" y="111.5" ></text>
</g>
<g >
<title>runtime.getpid (13 samples, 0.02%)</title><rect x="796.5" y="149" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="799.51" y="159.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (18 samples, 0.02%)</title><rect x="815.6" y="197" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="818.62" y="207.5" ></text>
</g>
<g >
<title>runtime.park_m (77 samples, 0.11%)</title><rect x="823.0" y="261" width="1.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="826.01" y="271.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavengeOne (9 samples, 0.01%)</title><rect x="783.0" y="181" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="786.04" y="191.5" ></text>
</g>
<g >
<title>runtime.findRunnable (61 samples, 0.08%)</title><rect x="823.1" y="229" width="1.0" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="826.11" y="239.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (98 samples, 0.13%)</title><rect x="283.0" y="149" width="1.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="285.97" y="159.5" ></text>
</g>
<g >
<title>runtime.forEachP (41 samples, 0.06%)</title><rect x="795.2" y="245" width="0.7" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="798.24" y="255.5" ></text>
</g>
<g >
<title>runtime.getMCache (191 samples, 0.26%)</title><rect x="952.5" y="229" width="3.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="955.46" y="239.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (11 samples, 0.02%)</title><rect x="107.7" y="229" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="110.70" y="239.5" ></text>
</g>
<g >
<title>runtime.forEachP (12 samples, 0.02%)</title><rect x="125.2" y="197" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="128.20" y="207.5" ></text>
</g>
<g >
<title>runtime.preemptM (143 samples, 0.20%)</title><rect x="792.7" y="181" width="2.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="795.66" y="191.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (12 samples, 0.02%)</title><rect x="285.0" y="149" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="287.97" y="159.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (4,864 samples, 6.64%)</title><rect x="323.8" y="261" width="78.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="326.75" y="271.5" >runtime.m..</text>
</g>
<g >
<title>runtime.typePointers.nextFast (54 samples, 0.07%)</title><rect x="821.2" y="213" width="0.8" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="824.17" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (22 samples, 0.03%)</title><rect x="795.9" y="229" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="798.93" y="239.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (7 samples, 0.01%)</title><rect x="1039.8" y="69" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1042.85" y="79.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (654 samples, 0.89%)</title><rect x="1053.0" y="213" width="10.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1055.97" y="223.5" ></text>
</g>
<g >
<title>runtime.readUintptr (43 samples, 0.06%)</title><rect x="1121.8" y="197" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1124.76" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (113 samples, 0.15%)</title><rect x="129.9" y="117" width="1.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="132.94" y="127.5" ></text>
</g>
<g >
<title>runtime.signalM (143 samples, 0.20%)</title><rect x="792.7" y="165" width="2.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="795.66" y="175.5" ></text>
</g>
<g >
<title>runtime.sysUnusedOS (119 samples, 0.16%)</title><rect x="783.2" y="165" width="1.9" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="786.21" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (70 samples, 0.10%)</title><rect x="109.4" y="181" width="1.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="112.39" y="191.5" ></text>
</g>
<g >
<title>runtime.gcStart (84 samples, 0.11%)</title><rect x="1063.5" y="213" width="1.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1066.49" y="223.5" ></text>
</g>
<g >
<title>runtime.stopm (11 samples, 0.02%)</title><rect x="826.7" y="181" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="829.66" y="191.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func3 (19 samples, 0.03%)</title><rect x="796.0" y="213" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="798.98" y="223.5" ></text>
</g>
<g >
<title>runtime.acquirem (342 samples, 0.47%)</title><rect x="945.9" y="229" width="5.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="948.92" y="239.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (7 samples, 0.01%)</title><rect x="1063.6" y="133" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1066.58" y="143.5" ></text>
</g>
<g >
<title>runtime.bgscavenge (135 samples, 0.18%)</title><rect x="783.0" y="277" width="2.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="786.00" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (41 samples, 0.06%)</title><rect x="795.2" y="229" width="0.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="798.24" y="239.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).CompareAndSwap (7 samples, 0.01%)</title><rect x="785.3" y="261" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="788.27" y="271.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).next (28 samples, 0.04%)</title><rect x="799.1" y="165" width="0.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="802.07" y="175.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (19 samples, 0.03%)</title><rect x="822.0" y="197" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="825.04" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).trigger (15 samples, 0.02%)</title><rect x="136.9" y="213" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="139.88" y="223.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (32 samples, 0.04%)</title><rect x="792.1" y="181" width="0.5" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="795.08" y="191.5" ></text>
</g>
<g >
<title>runtime.preemptall (151 samples, 0.21%)</title><rect x="792.6" y="197" width="2.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="795.60" y="207.5" ></text>
</g>
<g >
<title>strings.indexFunc (32 samples, 0.04%)</title><rect x="779.5" y="229" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="782.46" y="239.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (42 samples, 0.06%)</title><rect x="1063.6" y="165" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1066.56" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (179 samples, 0.24%)</title><rect x="112.8" y="229" width="2.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="115.78" y="239.5" ></text>
</g>
<g >
<title>runtime.preemptM (8 samples, 0.01%)</title><rect x="125.3" y="117" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="128.25" y="127.5" ></text>
</g>
<g >
<title>aeshashbody (1,395 samples, 1.90%)</title><rect x="486.6" y="245" width="22.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="489.59" y="255.5" >a..</text>
</g>
<g >
<title>runtime.deductSweepCredit (77 samples, 0.11%)</title><rect x="1042.7" y="165" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1045.70" y="175.5" ></text>
</g>
<g >
<title>runtime.(*sysMemStat).add (10 samples, 0.01%)</title><rect x="1039.7" y="85" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1042.68" y="95.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (8 samples, 0.01%)</title><rect x="1039.4" y="69" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1042.36" y="79.5" ></text>
</g>
<g >
<title>runtime.futexsleep (73 samples, 0.10%)</title><rect x="831.4" y="213" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="834.43" y="223.5" ></text>
</g>
<g >
<title>runtime.(*pageCache).alloc (7 samples, 0.01%)</title><rect x="1039.6" y="85" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1042.57" y="95.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (209 samples, 0.29%)</title><rect x="817.3" y="197" width="3.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="820.26" y="207.5" ></text>
</g>
<g >
<title>runtime.tgkill (26 samples, 0.04%)</title><rect x="1063.8" y="101" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1066.80" y="111.5" ></text>
</g>
<g >
<title>runtime.futex (8 samples, 0.01%)</title><rect x="283.6" y="69" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="286.55" y="79.5" ></text>
</g>
<g >
<title>runtime.forEachPInternal (39 samples, 0.05%)</title><rect x="795.2" y="197" width="0.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="798.24" y="207.5" ></text>
</g>
<g >
<title>runtime.signalM (14 samples, 0.02%)</title><rect x="125.7" y="85" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="128.73" y="95.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1,320 samples, 1.80%)</title><rect x="154.4" y="245" width="21.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="157.39" y="255.5" >r..</text>
</g>
<g >
<title>runtime.preemptM (14 samples, 0.02%)</title><rect x="125.7" y="101" width="0.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="128.73" y="111.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (19 samples, 0.03%)</title><rect x="929.1" y="181" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="932.05" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).init (7 samples, 0.01%)</title><rect x="1060.3" y="101" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1063.34" y="111.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (47 samples, 0.06%)</title><rect x="283.6" y="117" width="0.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="286.55" y="127.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (1,336 samples, 1.82%)</title><rect x="824.3" y="261" width="21.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="827.30" y="271.5" >r..</text>
</g>
<g >
<title>runtime.unlockWithRank (7 samples, 0.01%)</title><rect x="788.4" y="197" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="791.38" y="207.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocker).tryAcquire (8 samples, 0.01%)</title><rect x="1043.8" y="133" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1046.81" y="143.5" ></text>
</g>
<g >
<title>runtime.procyield (17 samples, 0.02%)</title><rect x="827.1" y="165" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="830.05" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).heapBitsSmallForAddr (8 samples, 0.01%)</title><rect x="132.0" y="101" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="135.01" y="111.5" ></text>
</g>
<g >
<title>runtime.wakep (9 samples, 0.01%)</title><rect x="796.1" y="181" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="799.14" y="191.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).next (15 samples, 0.02%)</title><rect x="126.4" y="85" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="129.43" y="95.5" ></text>
</g>
<g >
<title>gcWriteBarrier (292 samples, 0.40%)</title><rect x="276.5" y="245" width="4.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="279.53" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (13 samples, 0.02%)</title><rect x="111.0" y="101" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="113.99" y="111.5" ></text>
</g>
<g >
<title>runtime.systemstack (70 samples, 0.10%)</title><rect x="109.4" y="149" width="1.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="112.39" y="159.5" ></text>
</g>
<g >
<title>strings.TrimRightFunc (188 samples, 0.26%)</title><rect x="780.0" y="245" width="3.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="782.98" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (20 samples, 0.03%)</title><rect x="845.9" y="277" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="848.92" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (210 samples, 0.29%)</title><rect x="1060.1" y="165" width="3.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1063.11" y="175.5" ></text>
</g>
<g >
<title>indexbytebody (874 samples, 1.19%)</title><rect x="864.4" y="229" width="14.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="867.37" y="239.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (361 samples, 0.49%)</title><rect x="929.4" y="181" width="5.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="932.36" y="191.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge (133 samples, 0.18%)</title><rect x="783.0" y="229" width="2.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="786.00" y="239.5" ></text>
</g>
<g >
<title>runtime.gosched_m (18 samples, 0.02%)</title><rect x="822.7" y="261" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="825.70" y="271.5" ></text>
</g>
<g >
<title>runtime.greyobject (44 samples, 0.06%)</title><rect x="133.5" y="117" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="136.46" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (15 samples, 0.02%)</title><rect x="112.5" y="197" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="115.53" y="207.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (12 samples, 0.02%)</title><rect x="284.3" y="117" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="287.31" y="127.5" ></text>
</g>
<g >
<title>runtime.notewakeup (48 samples, 0.07%)</title><rect x="830.0" y="165" width="0.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="833.03" y="175.5" ></text>
</g>
<g >
<title>runtime.gcTrigger.test (20 samples, 0.03%)</title><rect x="136.8" y="229" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="139.79" y="239.5" ></text>
</g>
<g >
<title>runtime.bucketMask (91 samples, 0.12%)</title><rect x="320.8" y="261" width="1.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="323.77" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (62 samples, 0.08%)</title><rect x="283.6" y="133" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="286.55" y="143.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.forEachP.func5 (202 samples, 0.28%)</title><rect x="791.9" y="229" width="3.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="794.92" y="239.5" ></text>
</g>
<g >
<title>runtime.preemptall (8 samples, 0.01%)</title><rect x="125.3" y="133" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="128.25" y="143.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (55 samples, 0.08%)</title><rect x="844.9" y="245" width="0.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="847.92" y="255.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (12 samples, 0.02%)</title><rect x="284.3" y="101" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="287.31" y="111.5" ></text>
</g>
<g >
<title>runtime.systemstack (79 samples, 0.11%)</title><rect x="1063.6" y="197" width="1.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1066.56" y="207.5" ></text>
</g>
<g >
<title>runtime.publicationBarrier (73 samples, 0.10%)</title><rect x="139.2" y="229" width="1.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="142.18" y="239.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).initAt (7 samples, 0.01%)</title><rect x="798.8" y="165" width="0.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="801.83" y="175.5" ></text>
</g>
<g >
<title>runtime.findObject (14 samples, 0.02%)</title><rect x="802.3" y="165" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="805.27" y="175.5" ></text>
</g>
<g >
<title>syscall.read (1,304 samples, 1.78%)</title><rect x="282.5" y="197" width="21.0" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="285.52" y="207.5" ></text>
</g>
<g >
<title>runtime.decoderune (11 samples, 0.02%)</title><rect x="779.6" y="213" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="782.56" y="223.5" ></text>
</g>
<g >
<title>runtime.findObject (70 samples, 0.10%)</title><rect x="132.3" y="117" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="135.34" y="127.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).run (133 samples, 0.18%)</title><rect x="783.0" y="261" width="2.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="786.00" y="271.5" ></text>
</g>
<g >
<title>runtime.scanstack (20 samples, 0.03%)</title><rect x="1060.5" y="85" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1063.52" y="95.5" ></text>
</g>
<g >
<title>runtime.notesleep (94 samples, 0.13%)</title><rect x="825.1" y="165" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="828.05" y="175.5" ></text>
</g>
<g >
<title>runtime.gcmarknewobject (76 samples, 0.10%)</title><rect x="137.1" y="229" width="1.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="140.12" y="239.5" ></text>
</g>
<g >
<title>runtime.scanobject (513 samples, 0.70%)</title><rect x="127.6" y="133" width="8.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="130.59" y="143.5" ></text>
</g>
<g >
<title>os.(*File).Read (25 samples, 0.03%)</title><rect x="281.5" y="229" width="0.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="284.48" y="239.5" ></text>
</g>
<g >
<title>runtime.sweepone (71 samples, 0.10%)</title><rect x="1042.8" y="149" width="1.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1045.79" y="159.5" ></text>
</g>
<g >
<title>runtime.schedule (76 samples, 0.10%)</title><rect x="823.0" y="245" width="1.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="826.03" y="255.5" ></text>
</g>
<g >
<title>runtime.forEachP (202 samples, 0.28%)</title><rect x="791.9" y="261" width="3.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="794.92" y="271.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).addObject (8 samples, 0.01%)</title><rect x="799.8" y="149" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="802.76" y="159.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).reset (7 samples, 0.01%)</title><rect x="136.6" y="165" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="139.55" y="175.5" ></text>
</g>
<g >
<title>runtime.lock2 (21 samples, 0.03%)</title><rect x="823.5" y="197" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="826.48" y="207.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByte (121 samples, 0.17%)</title><rect x="274.6" y="229" width="1.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="277.57" y="239.5" ></text>
</g>
<g >
<title>runtime.casgstatus (13 samples, 0.02%)</title><rect x="284.8" y="149" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="287.76" y="159.5" ></text>
</g>
<g >
<title>runtime.publicationBarrier (11 samples, 0.02%)</title><rect x="1138.4" y="213" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1141.37" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (34 samples, 0.05%)</title><rect x="1042.9" y="133" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1045.87" y="143.5" ></text>
</g>
<g >
<title>runtime.scanstack (65 samples, 0.09%)</title><rect x="126.4" y="101" width="1.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="129.36" y="111.5" ></text>
</g>
<g >
<title>runtime.osyield (62 samples, 0.08%)</title><rect x="832.6" y="213" width="1.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="835.62" y="223.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint64).Add (13 samples, 0.02%)</title><rect x="108.7" y="197" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="111.70" y="207.5" ></text>
</g>
<g >
<title>runtime.acquirem (409 samples, 0.56%)</title><rect x="30.1" y="245" width="6.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="33.08" y="255.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (50 samples, 0.07%)</title><rect x="808.4" y="197" width="0.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="811.36" y="207.5" ></text>
</g>
<g >
<title>runtime.madvise (118 samples, 0.16%)</title><rect x="783.2" y="149" width="1.9" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="786.23" y="159.5" ></text>
</g>
<g >
<title>runtime.bgsweep (418 samples, 0.57%)</title><rect x="785.2" y="277" width="6.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="788.18" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (10 samples, 0.01%)</title><rect x="1039.1" y="85" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1042.14" y="95.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.forEachP.func6 (41 samples, 0.06%)</title><rect x="795.2" y="213" width="0.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="798.24" y="223.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).Add (9 samples, 0.01%)</title><rect x="788.6" y="229" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="791.62" y="239.5" ></text>
</g>
<g >
<title>runtime.scanblock (19 samples, 0.03%)</title><rect x="800.4" y="149" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="803.36" y="159.5" ></text>
</g>
<g >
<title>runtime.bucketShift (94 samples, 0.13%)</title><rect x="322.2" y="261" width="1.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="325.24" y="271.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (7 samples, 0.01%)</title><rect x="783.1" y="165" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="786.05" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).init (7 samples, 0.01%)</title><rect x="110.0" y="85" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="113.04" y="95.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (26 samples, 0.04%)</title><rect x="826.9" y="197" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="829.91" y="207.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (7 samples, 0.01%)</title><rect x="845.8" y="277" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="848.81" y="287.5" ></text>
</g>
<g >
<title>runtime.signalM (8 samples, 0.01%)</title><rect x="125.3" y="101" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="128.25" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mspan).init (20 samples, 0.03%)</title><rect x="1038.7" y="69" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1041.72" y="79.5" ></text>
</g>
<g >
<title>runtime.(*mspan).typePointersOfUnchecked (9 samples, 0.01%)</title><rect x="132.0" y="117" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="135.00" y="127.5" ></text>
</g>
<g >
<title>runtime.memequal (121 samples, 0.17%)</title><rect x="536.5" y="245" width="2.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="539.53" y="255.5" ></text>
</g>
<g >
<title>runtime.futex (7 samples, 0.01%)</title><rect x="796.4" y="149" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="799.37" y="159.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (17 samples, 0.02%)</title><rect x="1043.5" y="133" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1046.53" y="143.5" ></text>
</g>
<g >
<title>strconv.atof64exact (1,888 samples, 2.58%)</title><rect x="583.1" y="213" width="30.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="586.10" y="223.5" >st..</text>
</g>
<g >
<title>runtime.startm (48 samples, 0.07%)</title><rect x="830.0" y="181" width="0.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="833.03" y="191.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (22 samples, 0.03%)</title><rect x="281.9" y="213" width="0.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="284.89" y="223.5" ></text>
</g>
<g >
<title>main.(*Measurements).Add (1,869 samples, 2.55%)</title><rect x="179.8" y="277" width="30.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="182.78" y="287.5" >ma..</text>
</g>
<g >
<title>runtime.(*sweepLocker).tryAcquire (23 samples, 0.03%)</title><rect x="791.5" y="245" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="794.49" y="255.5" ></text>
</g>
<g >
<title>runtime.scanobject (139 samples, 0.19%)</title><rect x="1061.0" y="117" width="2.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1064.00" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (329 samples, 0.45%)</title><rect x="1037.0" y="165" width="5.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1040.01" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).heapGoalInternal (11 samples, 0.02%)</title><rect x="136.9" y="197" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="139.94" y="207.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.forEachP.func5 (12 samples, 0.02%)</title><rect x="125.2" y="165" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="128.20" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (10 samples, 0.01%)</title><rect x="126.0" y="133" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="129.02" y="143.5" ></text>
</g>
<g >
<title>runtime.readUintptr (31 samples, 0.04%)</title><rect x="816.2" y="197" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="819.18" y="207.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (1,137 samples, 1.55%)</title><rect x="285.2" y="149" width="18.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="288.21" y="159.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (33 samples, 0.05%)</title><rect x="284.6" y="165" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="287.63" y="175.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (8 samples, 0.01%)</title><rect x="1063.3" y="101" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1066.33" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (2,887 samples, 3.94%)</title><rect x="1075.2" y="197" width="46.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1078.25" y="207.5" >runt..</text>
</g>
<g >
<title>runtime.futex (7 samples, 0.01%)</title><rect x="1063.6" y="101" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1066.58" y="111.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerDedicated (1,529 samples, 2.09%)</title><rect x="797.7" y="245" width="24.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="800.73" y="255.5" >r..</text>
</g>
<g >
<title>runtime.unlock2 (7 samples, 0.01%)</title><rect x="829.6" y="181" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="832.63" y="191.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (175 samples, 0.24%)</title><rect x="278.4" y="181" width="2.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="281.42" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).nextSpanForSweep (52 samples, 0.07%)</title><rect x="788.5" y="245" width="0.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="791.49" y="255.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (9 samples, 0.01%)</title><rect x="1064.7" y="165" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1067.69" y="175.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (31 samples, 0.04%)</title><rect x="795.3" y="181" width="0.5" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="798.26" y="191.5" ></text>
</g>
<g >
<title>runtime.forEachPInternal (11 samples, 0.02%)</title><rect x="125.2" y="149" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="128.20" y="159.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (864 samples, 1.18%)</title><rect x="831.0" y="245" width="13.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="834.01" y="255.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (40 samples, 0.05%)</title><rect x="135.0" y="117" width="0.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="138.01" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mspan).initHeapBits (130 samples, 0.18%)</title><rect x="1040.2" y="149" width="2.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1043.22" y="159.5" ></text>
</g>
<g >
<title>runtime.pidlegetSpinning (8 samples, 0.01%)</title><rect x="829.9" y="181" width="0.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="832.88" y="191.5" ></text>
</g>
<g >
<title>runtime.notetsleep (7 samples, 0.01%)</title><rect x="1063.6" y="149" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1066.58" y="159.5" ></text>
</g>
<g >
<title>countbody (994 samples, 1.36%)</title><rect x="1170.5" y="229" width="16.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1173.50" y="239.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (36 samples, 0.05%)</title><rect x="798.0" y="213" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="801.01" y="223.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (28 samples, 0.04%)</title><rect x="798.0" y="197" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="801.02" y="207.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (11 samples, 0.02%)</title><rect x="135.8" y="133" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="138.84" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (18 samples, 0.02%)</title><rect x="1045.5" y="181" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1048.46" y="191.5" ></text>
</g>
<g >
<title>runtime.spanOf (60 samples, 0.08%)</title><rect x="934.2" y="165" width="1.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="937.20" y="175.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func3 (22 samples, 0.03%)</title><rect x="797.3" y="229" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="800.25" y="239.5" ></text>
</g>
<g >
<title>runtime.spanOf (10 samples, 0.01%)</title><rect x="134.8" y="117" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="137.85" y="127.5" ></text>
</g>
<g >
<title>strings.Index (1,851 samples, 2.53%)</title><rect x="851.0" y="261" width="29.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="853.99" y="271.5" >st..</text>
</g>
<g >
<title>runtime.(*spanSet).pop (16 samples, 0.02%)</title><rect x="789.0" y="229" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="791.98" y="239.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (207 samples, 0.28%)</title><rect x="1060.1" y="149" width="3.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1063.13" y="159.5" ></text>
</g>
<g >
<title>runtime.preemptM (28 samples, 0.04%)</title><rect x="798.0" y="181" width="0.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="801.02" y="191.5" ></text>
</g>
<g >
<title>runtime.unlock2 (55 samples, 0.08%)</title><rect x="844.9" y="229" width="0.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="847.92" y="239.5" ></text>
</g>
<g >
<title>runtime.gcTrigger.test (26 samples, 0.04%)</title><rect x="1064.8" y="213" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1067.85" y="223.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (18 samples, 0.02%)</title><rect x="812.1" y="197" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="815.06" y="207.5" ></text>
</g>
</g>
</svg>
