<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="390.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="373" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="373" > </text>
<g id="frames">
<g >
<title>runtime.(*gcBitsArena).tryAlloc (1 samples, 0.01%)</title><rect x="200.4" y="101" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="203.35" y="111.5" ></text>
</g>
<g >
<title>runtime.bgscavenge (2 samples, 0.02%)</title><rect x="10.0" y="325" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (340 samples, 3.13%)</title><rect x="247.2" y="261" width="36.9" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="250.15" y="271.5" >run..</text>
</g>
<g >
<title>runtime.(*mheap).allocManual (1 samples, 0.01%)</title><rect x="216.5" y="85" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="219.53" y="95.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (1 samples, 0.01%)</title><rect x="1188.2" y="181" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1191.15" y="191.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.01%)</title><rect x="19.4" y="181" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="22.45" y="191.5" ></text>
</g>
<g >
<title>gcWriteBarrier (2 samples, 0.02%)</title><rect x="683.0" y="261" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="686.01" y="271.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (14 samples, 0.13%)</title><rect x="1187.9" y="309" width="1.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1190.94" y="319.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.03%)</title><rect x="19.3" y="277" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="22.34" y="287.5" ></text>
</g>
<g >
<title>runtime.findObject (2 samples, 0.02%)</title><rect x="26.2" y="245" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="29.18" y="255.5" ></text>
</g>
<g >
<title>runtime.schedule (5 samples, 0.05%)</title><rect x="1187.9" y="277" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1190.94" y="287.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.01%)</title><rect x="686.6" y="181" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="689.60" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (3 samples, 0.03%)</title><rect x="20.1" y="245" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="23.10" y="255.5" ></text>
</g>
<g >
<title>runtime/internal/sys.LeadingZeros64 (1 samples, 0.01%)</title><rect x="12.6" y="197" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="15.61" y="207.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).addObject (1 samples, 0.01%)</title><rect x="21.4" y="197" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="24.40" y="207.5" ></text>
</g>
<g >
<title>syscall.Read (740 samples, 6.81%)</title><rect x="684.4" y="245" width="80.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="687.43" y="255.5" >syscall.R..</text>
</g>
<g >
<title>runtime.gcMarkDone.func2 (2 samples, 0.02%)</title><rect x="19.7" y="277" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="22.66" y="287.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.01%)</title><rect x="1188.0" y="229" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1191.05" y="239.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).trigger (2 samples, 0.02%)</title><rect x="219.7" y="229" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="222.68" y="239.5" ></text>
</g>
<g >
<title>runtime.netpoll (5 samples, 0.05%)</title><rect x="1186.6" y="261" width="0.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1189.63" y="271.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (2 samples, 0.02%)</title><rect x="32.6" y="261" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="35.59" y="271.5" ></text>
</g>
<g >
<title>runtime.scanblock (18 samples, 0.17%)</title><rect x="216.6" y="117" width="2.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="219.64" y="127.5" ></text>
</g>
<g >
<title>gosave_systemstack_switch (1 samples, 0.01%)</title><rect x="1189.8" y="309" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1192.78" y="319.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.01%)</title><rect x="1187.8" y="261" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1190.83" y="271.5" ></text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.01%)</title><rect x="683.1" y="181" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="686.12" y="191.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint64).CompareAndSwap (4 samples, 0.04%)</title><rect x="14.2" y="277" width="0.5" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="17.23" y="287.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (4 samples, 0.04%)</title><rect x="17.2" y="277" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="20.17" y="287.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (2,285 samples, 21.03%)</title><rect x="39.6" y="277" width="248.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="42.64" y="287.5" >runtime.slicebytetostring</text>
</g>
<g >
<title>internal/stringslite.IndexByte (608 samples, 5.59%)</title><rect x="1118.3" y="261" width="66.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1121.33" y="271.5" >interna..</text>
</g>
<g >
<title>runtime.(*scavengerState).run (2 samples, 0.02%)</title><rect x="10.0" y="309" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mheap).nextSpanForSweep (10 samples, 0.09%)</title><rect x="13.7" y="293" width="1.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="16.69" y="303.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).allocToCache (1 samples, 0.01%)</title><rect x="199.6" y="117" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="202.59" y="127.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint8).Load (4 samples, 0.04%)</title><rect x="684.8" y="181" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="687.75" y="191.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func3 (1 samples, 0.01%)</title><rect x="19.3" y="149" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="22.34" y="159.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.01%)</title><rect x="21.9" y="197" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="24.94" y="207.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).init.func2 (2 samples, 0.02%)</title><rect x="10.0" y="293" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.01%)</title><rect x="1188.5" y="229" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1191.48" y="239.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwlock (2 samples, 0.02%)</title><rect x="684.2" y="229" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="687.21" y="239.5" ></text>
</g>
<g >
<title>runtime.gcTrigger.test (2 samples, 0.02%)</title><rect x="219.7" y="245" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="222.68" y="255.5" ></text>
</g>
<g >
<title>runtime.add (223 samples, 2.05%)</title><rect x="775.1" y="277" width="24.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="778.09" y="287.5" >r..</text>
</g>
<g >
<title>runtime.scanblock (1 samples, 0.01%)</title><rect x="22.2" y="229" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="25.16" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (119 samples, 1.10%)</title><rect x="19.9" y="309" width="12.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="22.88" y="319.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (2 samples, 0.02%)</title><rect x="683.0" y="245" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="686.01" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (96 samples, 0.88%)</title><rect x="193.1" y="245" width="10.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="196.08" y="255.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (1 samples, 0.01%)</title><rect x="1187.3" y="261" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1190.29" y="271.5" ></text>
</g>
<g >
<title>syscall.read (740 samples, 6.81%)</title><rect x="684.4" y="229" width="80.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="687.43" y="239.5" >syscall.r..</text>
</g>
<g >
<title>runtime.save (1 samples, 0.01%)</title><rect x="686.1" y="165" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="689.05" y="175.5" ></text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.01%)</title><rect x="1189.5" y="309" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1192.46" y="319.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.02%)</title><rect x="683.0" y="229" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="686.01" y="239.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (3 samples, 0.03%)</title><rect x="16.8" y="277" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="19.84" y="287.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (2 samples, 0.02%)</title><rect x="31.8" y="261" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="34.83" y="271.5" ></text>
</g>
<g >
<title>aeshashbody (186 samples, 1.71%)</title><rect x="965.2" y="261" width="20.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="968.23" y="271.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.01%)</title><rect x="19.6" y="229" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="22.56" y="239.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.01%)</title><rect x="219.6" y="181" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="222.57" y="191.5" ></text>
</g>
<g >
<title>runtime.newMarkBits (2 samples, 0.02%)</title><rect x="200.5" y="101" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="203.46" y="111.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination (3 samples, 0.03%)</title><rect x="19.3" y="293" width="0.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="22.34" y="303.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.01%)</title><rect x="1187.9" y="213" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1190.94" y="223.5" ></text>
</g>
<g >
<title>runtime.(*stkframe).getStackMap (1 samples, 0.01%)</title><rect x="32.4" y="197" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="35.37" y="207.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.01%)</title><rect x="1188.5" y="213" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1191.48" y="223.5" ></text>
</g>
<g >
<title>runtime.scanstack (12 samples, 0.11%)</title><rect x="20.7" y="229" width="1.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="23.75" y="239.5" ></text>
</g>
<g >
<title>runtime.(*profBuf).read (1 samples, 0.01%)</title><rect x="1189.9" y="293" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1192.89" y="303.5" ></text>
</g>
<g >
<title>runtime.(*randomOrder).start (1 samples, 0.01%)</title><rect x="1184.7" y="261" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1187.68" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (55 samples, 0.51%)</title><rect x="195.0" y="213" width="6.0" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="198.03" y="223.5" ></text>
</g>
<g >
<title>runtime.futex (13 samples, 0.12%)</title><rect x="1185.2" y="213" width="1.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1188.22" y="223.5" ></text>
</g>
<g >
<title>runtime.forEachPInternal (7 samples, 0.06%)</title><rect x="18.0" y="261" width="0.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="21.04" y="271.5" ></text>
</g>
<g >
<title>runtime.notetsleep (1 samples, 0.01%)</title><rect x="19.7" y="245" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="22.66" y="255.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readLock (2 samples, 0.02%)</title><rect x="684.2" y="245" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="687.21" y="255.5" ></text>
</g>
<g >
<title>runtime.addb (1 samples, 0.01%)</title><rect x="26.0" y="229" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="28.96" y="239.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (3 samples, 0.03%)</title><rect x="32.0" y="261" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="35.04" y="271.5" ></text>
</g>
<g >
<title>bufio.ScanLines (197 samples, 1.81%)</title><rect x="620.3" y="261" width="21.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="623.25" y="271.5" >b..</text>
</g>
<g >
<title>runtime.schedule (33 samples, 0.30%)</title><rect x="1184.4" y="293" width="3.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1187.35" y="303.5" ></text>
</g>
<g >
<title>runtime.greyobject (3 samples, 0.03%)</title><rect x="26.4" y="245" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="29.40" y="255.5" ></text>
</g>
<g >
<title>runtime.(*pageCache).alloc (1 samples, 0.01%)</title><rect x="199.7" y="117" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="202.70" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (1 samples, 0.01%)</title><rect x="203.6" y="245" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="206.61" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mspan).countAlloc (5 samples, 0.05%)</title><rect x="14.8" y="293" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="17.78" y="303.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).init (2 samples, 0.02%)</title><rect x="20.5" y="229" width="0.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="23.53" y="239.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.01%)</title><rect x="19.6" y="213" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="22.56" y="223.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (6 samples, 0.06%)</title><rect x="201.1" y="197" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="204.11" y="207.5" ></text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.01%)</title><rect x="1188.2" y="213" width="0.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1191.15" y="223.5" ></text>
</g>
<g >
<title>runtime.signalM (3 samples, 0.03%)</title><rect x="20.1" y="213" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="23.10" y="223.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.01%)</title><rect x="1187.7" y="277" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1190.72" y="287.5" ></text>
</g>
<g >
<title>runtime.findRunnable (30 samples, 0.28%)</title><rect x="1184.5" y="277" width="3.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1187.46" y="287.5" ></text>
</g>
<g >
<title>runtime.(*bmap).overflow (1 samples, 0.01%)</title><rect x="775.0" y="277" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="777.99" y="287.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.01%)</title><rect x="19.7" y="197" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="22.66" y="207.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.forEachP.func6 (4 samples, 0.04%)</title><rect x="18.9" y="261" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="21.90" y="271.5" ></text>
</g>
<g >
<title>runtime.(*lockTimer).begin (1 samples, 0.01%)</title><rect x="18.8" y="229" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="21.80" y="239.5" ></text>
</g>
<g >
<title>runtime.scanobject (3 samples, 0.03%)</title><rect x="218.6" y="149" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="221.59" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.01%)</title><rect x="1188.2" y="197" width="0.1" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="1191.15" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (1 samples, 0.01%)</title><rect x="19.3" y="165" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="22.34" y="175.5" ></text>
</g>
<g >
<title>runtime.sysUnused (2 samples, 0.02%)</title><rect x="10.0" y="229" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.01%)</title><rect x="1188.5" y="245" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1191.48" y="255.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.01%)</title><rect x="219.0" y="197" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="222.03" y="207.5" ></text>
</g>
<g >
<title>runtime.step (2 samples, 0.02%)</title><rect x="21.0" y="165" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="23.97" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.02%)</title><rect x="19.7" y="293" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="22.66" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.01%)</title><rect x="1188.2" y="165" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1191.15" y="175.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.01%)</title><rect x="17.6" y="261" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="20.60" y="271.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.01%)</title><rect x="1187.5" y="213" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1190.50" y="223.5" ></text>
</g>
<g >
<title>runtime.gcDrain (113 samples, 1.04%)</title><rect x="20.1" y="277" width="12.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="23.10" y="287.5" ></text>
</g>
<g >
<title>runtime.markroot (17 samples, 0.16%)</title><rect x="20.4" y="261" width="1.9" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="23.42" y="271.5" ></text>
</g>
<g >
<title>runtime.checkIdleGCNoP (1 samples, 0.01%)</title><rect x="1184.8" y="261" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1187.79" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (19 samples, 0.17%)</title><rect x="11.2" y="245" width="2.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="14.19" y="255.5" ></text>
</g>
<g >
<title>runtime.spanAllocType.manual (1 samples, 0.01%)</title><rect x="200.7" y="117" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="203.68" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.01%)</title><rect x="19.3" y="181" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="22.34" y="191.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).Add (2 samples, 0.02%)</title><rect x="194.7" y="213" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="197.70" y="223.5" ></text>
</g>
<g >
<title>runtime.getempty.func1 (1 samples, 0.01%)</title><rect x="216.5" y="101" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="219.53" y="111.5" ></text>
</g>
<g >
<title>runtime.wirep (1 samples, 0.01%)</title><rect x="1187.6" y="229" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1190.61" y="239.5" ></text>
</g>
<g >
<title>runtime.execute (1 samples, 0.01%)</title><rect x="1184.4" y="277" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1187.35" y="287.5" ></text>
</g>
<g >
<title>runtime.packPallocSum (1 samples, 0.01%)</title><rect x="12.5" y="197" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="15.50" y="207.5" ></text>
</g>
<g >
<title>runtime.scanblock (1 samples, 0.01%)</title><rect x="21.8" y="197" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="24.84" y="207.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (23 samples, 0.21%)</title><rect x="216.4" y="229" width="2.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="219.42" y="239.5" ></text>
</g>
<g >
<title>runtime.bgsweep (72 samples, 0.66%)</title><rect x="10.2" y="325" width="7.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="13.22" y="335.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (23 samples, 0.21%)</title><rect x="216.4" y="181" width="2.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="219.42" y="191.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.01%)</title><rect x="1187.8" y="229" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1190.83" y="239.5" ></text>
</g>
<g >
<title>runtime.newAllocBits (3 samples, 0.03%)</title><rect x="200.4" y="117" width="0.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="203.35" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (1 samples, 0.01%)</title><rect x="19.3" y="133" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="22.34" y="143.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.01%)</title><rect x="1187.8" y="245" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1190.83" y="255.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByte (70 samples, 0.64%)</title><rect x="675.4" y="245" width="7.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="678.41" y="255.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).free (1 samples, 0.01%)</title><rect x="19.3" y="117" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="22.34" y="127.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (1 samples, 0.01%)</title><rect x="26.1" y="245" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="29.07" y="255.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge.func1 (2 samples, 0.02%)</title><rect x="10.0" y="245" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.01%)</title><rect x="219.0" y="181" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="222.03" y="191.5" ></text>
</g>
<g >
<title>runtime.procresize (1 samples, 0.01%)</title><rect x="219.5" y="181" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="222.46" y="191.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).next (2 samples, 0.02%)</title><rect x="1184.5" y="261" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1187.46" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (26 samples, 0.24%)</title><rect x="10.9" y="293" width="2.8" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="13.87" y="303.5" ></text>
</g>
<g >
<title>runtime.main (10,605 samples, 97.59%)</title><rect x="32.8" y="325" width="1151.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="35.80" y="335.5" >runtime.main</text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge (2 samples, 0.02%)</title><rect x="10.0" y="277" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.01%)</title><rect x="1188.5" y="277" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1191.48" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1,361 samples, 12.52%)</title><rect x="74.8" y="261" width="147.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="77.83" y="271.5" >runtime.mallocgc</text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerIdle (4 samples, 0.04%)</title><rect x="32.4" y="293" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="35.37" y="303.5" ></text>
</g>
<g >
<title>runtime.getpid (1 samples, 0.01%)</title><rect x="20.1" y="197" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="23.10" y="207.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.01%)</title><rect x="1187.8" y="197" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1190.83" y="207.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.01%)</title><rect x="18.8" y="245" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="21.80" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (70 samples, 0.64%)</title><rect x="194.3" y="229" width="7.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="197.27" y="239.5" ></text>
</g>
<g >
<title>runtime.park_m (33 samples, 0.30%)</title><rect x="1184.4" y="309" width="3.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1187.35" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (8 samples, 0.07%)</title><rect x="202.6" y="213" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="205.63" y="223.5" ></text>
</g>
<g >
<title>runtime.casgstatus (8 samples, 0.07%)</title><rect x="685.2" y="165" width="0.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="688.19" y="175.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.01%)</title><rect x="19.6" y="165" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="22.56" y="175.5" ></text>
</g>
<g >
<title>runtime.casfrom_Gscanstatus (1 samples, 0.01%)</title><rect x="1189.5" y="277" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1192.46" y="287.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.01%)</title><rect x="1188.4" y="213" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1191.37" y="223.5" ></text>
</g>
<g >
<title>runtime.stealWork (2 samples, 0.02%)</title><rect x="1187.4" y="261" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1190.39" y="271.5" ></text>
</g>
<g >
<title>runtime.gcstopm (3 samples, 0.03%)</title><rect x="1187.9" y="245" width="0.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1190.94" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (6 samples, 0.06%)</title><rect x="25.0" y="245" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="27.98" y="255.5" ></text>
</g>
<g >
<title>bufio.dropCR (33 samples, 0.30%)</title><rect x="641.6" y="261" width="3.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="644.64" y="271.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (136 samples, 1.25%)</title><rect x="18.0" y="325" width="14.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="21.04" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (15 samples, 0.14%)</title><rect x="201.9" y="229" width="1.6" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="204.87" y="239.5" ></text>
</g>
<g >
<title>bufio.(*Scanner).Scan (1,811 samples, 16.67%)</title><rect x="568.6" y="277" width="196.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="571.56" y="287.5" >bufio.(*Scanner).Scan</text>
</g>
<g >
<title>runtime.gcMarkDone.forEachP.func5 (8 samples, 0.07%)</title><rect x="18.0" y="277" width="0.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="21.04" y="287.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (1 samples, 0.01%)</title><rect x="1188.2" y="133" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1191.15" y="143.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (2 samples, 0.02%)</title><rect x="1188.3" y="245" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1191.26" y="255.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (1 samples, 0.01%)</title><rect x="196.2" y="101" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="199.22" y="111.5" ></text>
</g>
<g >
<title>runtime.traceEnabled (1 samples, 0.01%)</title><rect x="201.8" y="213" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="204.76" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeMSpanLocked (1 samples, 0.01%)</title><rect x="11.1" y="245" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="14.09" y="255.5" ></text>
</g>
<g >
<title>runtime.bucketMask (30 samples, 0.28%)</title><rect x="799.4" y="277" width="3.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="802.42" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocMSpanLocked (1 samples, 0.01%)</title><rect x="196.2" y="117" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="199.22" y="127.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.01%)</title><rect x="219.6" y="165" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="222.57" y="175.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (6 samples, 0.06%)</title><rect x="683.6" y="245" width="0.6" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="686.56" y="255.5" ></text>
</g>
<g >
<title>runtime.forEachP (8 samples, 0.07%)</title><rect x="18.0" y="309" width="0.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="21.04" y="319.5" ></text>
</g>
<g >
<title>runtime.offAddr.lessThan (1 samples, 0.01%)</title><rect x="12.9" y="213" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="15.93" y="223.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (1 samples, 0.01%)</title><rect x="1188.2" y="149" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1191.15" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (1 samples, 0.01%)</title><rect x="216.5" y="53" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="219.53" y="63.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (1 samples, 0.01%)</title><rect x="26.7" y="245" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="29.72" y="255.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.01%)</title><rect x="219.6" y="133" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="222.57" y="143.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (9 samples, 0.08%)</title><rect x="685.2" y="181" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="688.19" y="191.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.01%)</title><rect x="19.7" y="213" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="22.66" y="223.5" ></text>
</g>
<g >
<title>os.(*File).Read (2 samples, 0.02%)</title><rect x="683.2" y="261" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="686.23" y="271.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.01%)</title><rect x="18.0" y="197" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="21.04" y="207.5" ></text>
</g>
<g >
<title>runtime.gcStart (7 samples, 0.06%)</title><rect x="218.9" y="245" width="0.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="221.92" y="255.5" ></text>
</g>
<g >
<title>runtime.preemptM (6 samples, 0.06%)</title><rect x="18.1" y="229" width="0.7" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="21.14" y="239.5" ></text>
</g>
<g >
<title>indexbytebody (443 samples, 4.08%)</title><rect x="1125.5" y="245" width="48.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1128.50" y="255.5" >inde..</text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (2 samples, 0.02%)</title><rect x="18.9" y="213" width="0.2" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="21.90" y="223.5" ></text>
</g>
<g >
<title>runtime.madvise (2 samples, 0.02%)</title><rect x="10.0" y="197" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (2 samples, 0.02%)</title><rect x="25.6" y="245" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="28.64" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (1 samples, 0.01%)</title><rect x="683.0" y="181" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="686.01" y="191.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.01%)</title><rect x="1188.0" y="213" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1191.05" y="223.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (1 samples, 0.01%)</title><rect x="32.4" y="213" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="35.37" y="223.5" ></text>
</g>
<g >
<title>runtime.(*scavengeIndex).free (2 samples, 0.02%)</title><rect x="12.7" y="213" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="15.71" y="223.5" ></text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.01%)</title><rect x="1185.0" y="229" width="0.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1188.01" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.04%)</title><rect x="18.9" y="277" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="21.90" y="287.5" ></text>
</g>
<g >
<title>runtime.procyield (7 samples, 0.06%)</title><rect x="1188.7" y="261" width="0.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1191.70" y="271.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.01%)</title><rect x="19.6" y="197" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="22.56" y="207.5" ></text>
</g>
<g >
<title>bytes.IndexByte (348 samples, 3.20%)</title><rect x="645.2" y="261" width="37.8" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="648.23" y="271.5" >byt..</text>
</g>
<g >
<title>runtime.preemptall (6 samples, 0.06%)</title><rect x="18.1" y="245" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="21.14" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mspan).typePointersOfUnchecked (2 samples, 0.02%)</title><rect x="25.9" y="245" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="28.85" y="255.5" ></text>
</g>
<g >
<title>runtime.markroot (1 samples, 0.01%)</title><rect x="32.4" y="261" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="35.37" y="271.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uintptr).Store (1 samples, 0.01%)</title><rect x="16.6" y="277" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="19.62" y="287.5" ></text>
</g>
<g >
<title>runtime.preemptM (1 samples, 0.01%)</title><rect x="19.8" y="229" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="22.77" y="239.5" ></text>
</g>
<g >
<title>runtime.forEachP (4 samples, 0.04%)</title><rect x="18.9" y="293" width="0.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="21.90" y="303.5" ></text>
</g>
<g >
<title>runtime.scanstack (1 samples, 0.01%)</title><rect x="32.4" y="229" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="35.37" y="239.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.01%)</title><rect x="218.8" y="133" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="221.81" y="143.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.01%)</title><rect x="1187.7" y="261" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1190.72" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.02%)</title><rect x="1189.7" y="325" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1192.67" y="335.5" ></text>
</g>
<g >
<title>runtime.runqgrab (1 samples, 0.01%)</title><rect x="1187.5" y="229" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1190.50" y="239.5" ></text>
</g>
<g >
<title>runtime.(*sysMemStat).add (5 samples, 0.05%)</title><rect x="199.8" y="117" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="202.81" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.01%)</title><rect x="1185.0" y="213" width="0.1" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="1188.01" y="223.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (3 samples, 0.03%)</title><rect x="20.1" y="261" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="23.10" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (23 samples, 0.21%)</title><rect x="216.4" y="197" width="2.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="219.42" y="207.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint64).Add (1 samples, 0.01%)</title><rect x="194.9" y="213" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="197.92" y="223.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (1 samples, 0.01%)</title><rect x="216.5" y="149" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="219.53" y="159.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (1 samples, 0.01%)</title><rect x="1189.6" y="325" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1192.57" y="335.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (2 samples, 0.02%)</title><rect x="17.4" y="261" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="20.38" y="271.5" ></text>
</g>
<g >
<title>runtime.sysUnusedOS (2 samples, 0.02%)</title><rect x="10.0" y="213" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (52 samples, 0.48%)</title><rect x="195.2" y="149" width="5.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="198.25" y="159.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocker).tryAcquire (2 samples, 0.02%)</title><rect x="17.8" y="293" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="20.82" y="303.5" ></text>
</g>
<g >
<title>runtime.publicationBarrier (22 samples, 0.20%)</title><rect x="220.2" y="245" width="2.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="223.22" y="255.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (6 samples, 0.06%)</title><rect x="21.3" y="213" width="0.6" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="24.29" y="223.5" ></text>
</g>
<g >
<title>runtime.futexsleep (2 samples, 0.02%)</title><rect x="19.1" y="197" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="22.12" y="207.5" ></text>
</g>
<g >
<title>runtime.(*stkframe).getStackMap (3 samples, 0.03%)</title><rect x="21.5" y="197" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="24.51" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGetFast (1 samples, 0.01%)</title><rect x="20.0" y="277" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="22.99" y="287.5" ></text>
</g>
<g >
<title>runtime.gcmarknewobject (3 samples, 0.03%)</title><rect x="219.9" y="245" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="222.90" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (1 samples, 0.01%)</title><rect x="216.5" y="69" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="219.53" y="79.5" ></text>
</g>
<g >
<title>runtime.alignUp (19 samples, 0.17%)</title><rect x="68.6" y="261" width="2.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="71.64" y="271.5" ></text>
</g>
<g >
<title>runtime.futexsleep (14 samples, 0.13%)</title><rect x="1185.1" y="229" width="1.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1188.11" y="239.5" ></text>
</g>
<g >
<title>internal/stringslite.Index (154 samples, 1.42%)</title><rect x="1101.6" y="261" width="16.7" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1104.61" y="271.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.01%)</title><rect x="18.8" y="261" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="21.80" y="271.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (9 samples, 0.08%)</title><rect x="18.9" y="309" width="1.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="21.90" y="319.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.01%)</title><rect x="19.6" y="181" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="22.56" y="191.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (3 samples, 0.03%)</title><rect x="32.0" y="229" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="35.04" y="239.5" ></text>
</g>
<g >
<title>memeqbody (591 samples, 5.44%)</title><rect x="985.4" y="261" width="64.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="988.42" y="271.5" >memeqbody</text>
</g>
<g >
<title>internal/stringslite.Cut (1,114 samples, 10.25%)</title><rect x="1063.4" y="277" width="121.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1066.39" y="287.5" >internal/string..</text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).Add (2 samples, 0.02%)</title><rect x="11.2" y="229" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="14.19" y="239.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (1 samples, 0.01%)</title><rect x="19.3" y="101" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="22.34" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mheap).tryAllocMSpan (1 samples, 0.01%)</title><rect x="200.8" y="133" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="203.78" y="143.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (717 samples, 6.60%)</title><rect x="686.9" y="197" width="77.9" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="689.92" y="207.5" >syscall...</text>
</g>
<g >
<title>runtime.typePointers.nextFast (6 samples, 0.06%)</title><rect x="31.1" y="245" width="0.6" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="34.07" y="255.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.01%)</title><rect x="32.3" y="213" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="35.26" y="223.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).summarize (9 samples, 0.08%)</title><rect x="11.5" y="197" width="1.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="14.52" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).partialSwept (1 samples, 0.01%)</title><rect x="201.0" y="213" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="204.00" y="223.5" ></text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.01%)</title><rect x="1187.6" y="261" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1190.61" y="271.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (15 samples, 0.14%)</title><rect x="20.5" y="245" width="1.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="23.53" y="255.5" ></text>
</g>
<g >
<title>runtime.strhash (65 samples, 0.60%)</title><rect x="1054.8" y="261" width="7.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1057.81" y="271.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (23 samples, 0.21%)</title><rect x="216.4" y="165" width="2.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="219.42" y="175.5" ></text>
</g>
<g >
<title>runtime.gcStart.func3 (2 samples, 0.02%)</title><rect x="219.5" y="213" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="222.46" y="223.5" ></text>
</g>
<g >
<title>runtime.morestack (15 samples, 0.14%)</title><rect x="1187.9" y="325" width="1.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1190.94" y="335.5" ></text>
</g>
<g >
<title>runtime.findRunnable (5 samples, 0.05%)</title><rect x="1187.9" y="261" width="0.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1190.94" y="271.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (2 samples, 0.02%)</title><rect x="199.3" y="101" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="202.26" y="111.5" ></text>
</g>
<g >
<title>runtime.getMCache (29 samples, 0.27%)</title><rect x="71.1" y="261" width="3.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="74.13" y="271.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (1 samples, 0.01%)</title><rect x="21.4" y="181" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="24.40" y="191.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (18 samples, 0.17%)</title><rect x="216.6" y="133" width="2.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="219.64" y="143.5" ></text>
</g>
<g >
<title>runtime.(*spanSetBlockAlloc).free (1 samples, 0.01%)</title><rect x="219.4" y="181" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="222.35" y="191.5" ></text>
</g>
<g >
<title>bufio.(*Scanner).Text (2,348 samples, 21.61%)</title><rect x="32.8" y="293" width="255.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="35.80" y="303.5" >bufio.(*Scanner).Text</text>
</g>
<g >
<title>runtime.typePointers.next (36 samples, 0.33%)</title><rect x="27.2" y="245" width="3.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="30.16" y="255.5" ></text>
</g>
<g >
<title>runtime.mPark (1 samples, 0.01%)</title><rect x="1184.9" y="245" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1187.90" y="255.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (2 samples, 0.02%)</title><rect x="683.0" y="197" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="686.01" y="207.5" ></text>
</g>
<g >
<title>runtime.acquirem (30 samples, 0.28%)</title><rect x="65.4" y="261" width="3.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="68.38" y="271.5" ></text>
</g>
<g >
<title>runtime.(*consistentHeapStats).acquire (1 samples, 0.01%)</title><rect x="196.1" y="117" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="199.12" y="127.5" ></text>
</g>
<g >
<title>main.R3 (7,130 samples, 65.61%)</title><rect x="287.8" y="293" width="774.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="290.76" y="303.5" >main.R3</text>
</g>
<g >
<title>runtime.pcvalue (2 samples, 0.02%)</title><rect x="21.0" y="181" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="23.97" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (1 samples, 0.01%)</title><rect x="203.5" y="245" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="206.50" y="255.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (2,358 samples, 21.70%)</title><rect x="805.8" y="277" width="256.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="808.82" y="287.5" >runtime.mapaccess2_faststr</text>
</g>
<g >
<title>runtime.memequal (48 samples, 0.44%)</title><rect x="1049.6" y="261" width="5.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1052.60" y="271.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.01%)</title><rect x="1188.5" y="261" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1191.48" y="271.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*UnsafePointer).Load (1 samples, 0.01%)</title><rect x="14.7" y="277" width="0.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="17.67" y="287.5" ></text>
</g>
<g >
<title>runtime.lock2 (8 samples, 0.07%)</title><rect x="1188.6" y="277" width="0.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1191.59" y="287.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (2 samples, 0.02%)</title><rect x="21.0" y="197" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="23.97" y="207.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint64).Add (2 samples, 0.02%)</title><rect x="201.3" y="181" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="204.33" y="191.5" ></text>
</g>
<g >
<title>runtime.newMarkBits (1 samples, 0.01%)</title><rect x="17.7" y="277" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="20.71" y="287.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.01%)</title><rect x="13.3" y="245" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="16.26" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (50 samples, 0.46%)</title><rect x="195.4" y="133" width="5.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="198.36" y="143.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.01%)</title><rect x="1184.9" y="197" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1187.90" y="207.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.01%)</title><rect x="18.0" y="213" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="21.04" y="223.5" ></text>
</g>
<g >
<title>runtime.duffzero (1 samples, 0.01%)</title><rect x="21.2" y="213" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="24.18" y="223.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uintptr).Add (1 samples, 0.01%)</title><rect x="10.2" y="309" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="13.22" y="319.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (21 samples, 0.19%)</title><rect x="15.5" y="293" width="2.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="18.54" y="303.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.01%)</title><rect x="32.5" y="261" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="35.48" y="271.5" ></text>
</g>
<g >
<title>runtime.tgkill (2 samples, 0.02%)</title><rect x="20.2" y="197" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="23.21" y="207.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (2 samples, 0.02%)</title><rect x="19.7" y="261" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="22.66" y="271.5" ></text>
</g>
<g >
<title>runtime.mPark (14 samples, 0.13%)</title><rect x="1185.1" y="261" width="1.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1188.11" y="271.5" ></text>
</g>
<g >
<title>runtime.preemptM (3 samples, 0.03%)</title><rect x="20.1" y="229" width="0.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="23.10" y="239.5" ></text>
</g>
<g >
<title>runtime.memmove (4 samples, 0.04%)</title><rect x="764.8" y="261" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="767.78" y="271.5" ></text>
</g>
<g >
<title>runtime.asyncPreempt (1 samples, 0.01%)</title><rect x="799.3" y="277" width="0.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="802.31" y="287.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (1 samples, 0.01%)</title><rect x="219.4" y="165" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="222.35" y="175.5" ></text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.01%)</title><rect x="1187.6" y="245" width="0.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1190.61" y="255.5" ></text>
</g>
<g >
<title>runtime.memmove (226 samples, 2.08%)</title><rect x="222.6" y="261" width="24.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="225.61" y="271.5" >r..</text>
</g>
<g >
<title>runtime.startTheWorldWithSema (2 samples, 0.02%)</title><rect x="219.5" y="197" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="222.46" y="207.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.01%)</title><rect x="1184.9" y="229" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1187.90" y="239.5" ></text>
</g>
<g >
<title>runtime.forEachPInternal (4 samples, 0.04%)</title><rect x="18.9" y="245" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="21.90" y="255.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (1 samples, 0.01%)</title><rect x="193.0" y="245" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="195.97" y="255.5" ></text>
</g>
<g >
<title>runtime.(*bmap).keys (3 samples, 0.03%)</title><rect x="774.7" y="277" width="0.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="777.66" y="287.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (3 samples, 0.03%)</title><rect x="197.1" y="101" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="200.09" y="111.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.01%)</title><rect x="218.4" y="101" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="221.38" y="111.5" ></text>
</g>
<g >
<title>runtime.bucketShift (29 samples, 0.27%)</title><rect x="802.7" y="277" width="3.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="805.68" y="287.5" ></text>
</g>
<g >
<title>runtime.(*scavChunkData).free (1 samples, 0.01%)</title><rect x="12.8" y="197" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="15.82" y="207.5" ></text>
</g>
<g >
<title>runtime.entersyscall (13 samples, 0.12%)</title><rect x="684.8" y="197" width="1.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="687.75" y="207.5" ></text>
</g>
<g >
<title>bufio.(*Scanner).advance (87 samples, 0.80%)</title><rect x="765.2" y="277" width="9.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="768.21" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (26 samples, 0.24%)</title><rect x="10.9" y="277" width="2.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="13.87" y="287.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (1 samples, 0.01%)</title><rect x="18.0" y="229" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="21.04" y="239.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.01%)</title><rect x="218.5" y="101" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="221.48" y="111.5" ></text>
</g>
<g >
<title>indexbytebody (231 samples, 2.13%)</title><rect x="650.3" y="245" width="25.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="653.33" y="255.5" >i..</text>
</g>
<g >
<title>runtime.unlock2 (3 samples, 0.03%)</title><rect x="13.4" y="229" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="16.37" y="239.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerDedicated (114 samples, 1.05%)</title><rect x="20.0" y="293" width="12.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="22.99" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (6 samples, 0.06%)</title><rect x="201.1" y="213" width="0.7" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="204.11" y="223.5" ></text>
</g>
<g >
<title>all (10,867 samples, 100%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>runtime/pprof.readProfile (1 samples, 0.01%)</title><rect x="1189.9" y="309" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1192.89" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (2 samples, 0.02%)</title><rect x="19.3" y="213" width="0.3" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="22.34" y="223.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).init (1 samples, 0.01%)</title><rect x="216.5" y="133" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="219.53" y="143.5" ></text>
</g>
<g >
<title>main.main (10,605 samples, 97.59%)</title><rect x="32.8" y="309" width="1151.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="35.80" y="319.5" >main.main</text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.02%)</title><rect x="10.0" y="261" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (2 samples, 0.02%)</title><rect x="686.7" y="181" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="689.71" y="191.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.02%)</title><rect x="19.1" y="181" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="22.12" y="191.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).initAt (2 samples, 0.02%)</title><rect x="20.5" y="213" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="23.53" y="223.5" ></text>
</g>
<g >
<title>runtime.makeSpanClass (5 samples, 0.05%)</title><rect x="74.3" y="261" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="77.28" y="271.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (5 samples, 0.05%)</title><rect x="1186.6" y="229" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1189.63" y="239.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.01%)</title><rect x="1188.3" y="213" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1191.26" y="223.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (1 samples, 0.01%)</title><rect x="200.9" y="197" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="203.89" y="207.5" ></text>
</g>
<g >
<title>runtime.releasem (34 samples, 0.31%)</title><rect x="284.1" y="261" width="3.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="287.07" y="271.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (1 samples, 0.01%)</title><rect x="22.2" y="245" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="25.16" y="255.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.01%)</title><rect x="218.7" y="133" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="221.70" y="143.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (3 samples, 0.03%)</title><rect x="32.0" y="245" width="0.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="35.04" y="255.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).next (4 samples, 0.04%)</title><rect x="20.7" y="213" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="23.75" y="223.5" ></text>
</g>
<g >
<title>runtime.signalM (1 samples, 0.01%)</title><rect x="19.8" y="213" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="22.77" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (2 samples, 0.02%)</title><rect x="18.9" y="197" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="21.90" y="207.5" ></text>
</g>
<g >
<title>runtime.getpid (3 samples, 0.03%)</title><rect x="18.3" y="197" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="21.25" y="207.5" ></text>
</g>
<g >
<title>runtime/pprof.profileWriter (1 samples, 0.01%)</title><rect x="1189.9" y="325" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1192.89" y="335.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).memoryLimitHeapGoal (1 samples, 0.01%)</title><rect x="219.8" y="197" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="222.79" y="207.5" ></text>
</g>
<g >
<title>runtime.bool2int (1 samples, 0.01%)</title><rect x="70.7" y="261" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="73.70" y="271.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).Add (3 samples, 0.03%)</title><rect x="16.3" y="277" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="19.30" y="287.5" ></text>
</g>
<g >
<title>runtime.spanOfUnchecked (1 samples, 0.01%)</title><rect x="31.7" y="261" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="34.72" y="271.5" ></text>
</g>
<g >
<title>runtime.gcStart.func2 (3 samples, 0.03%)</title><rect x="219.1" y="213" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="222.14" y="223.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.01%)</title><rect x="1187.3" y="245" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1190.29" y="255.5" ></text>
</g>
<g >
<title>runtime.newArenaMayUnlock (1 samples, 0.01%)</title><rect x="199.5" y="85" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="202.48" y="95.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).Add (2 samples, 0.02%)</title><rect x="195.9" y="117" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="198.90" y="127.5" ></text>
</g>
<g >
<title>runtime.shrinkstack (1 samples, 0.01%)</title><rect x="21.9" y="213" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="24.94" y="223.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func3 (3 samples, 0.03%)</title><rect x="19.3" y="261" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="22.34" y="271.5" ></text>
</g>
<g >
<title>runtime.markroot (18 samples, 0.17%)</title><rect x="216.6" y="149" width="2.0" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="219.64" y="159.5" ></text>
</g>
<g >
<title>runtime.preemptPark (1 samples, 0.01%)</title><rect x="1189.5" y="293" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1192.46" y="303.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.01%)</title><rect x="1188.0" y="197" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1191.05" y="207.5" ></text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.01%)</title><rect x="1188.2" y="229" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1191.15" y="239.5" ></text>
</g>
<g >
<title>runtime.pMask.read (1 samples, 0.01%)</title><rect x="1187.2" y="261" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1190.18" y="271.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.01%)</title><rect x="1188.4" y="229" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1191.37" y="239.5" ></text>
</g>
<g >
<title>runtime.preemptall (1 samples, 0.01%)</title><rect x="19.8" y="245" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="22.77" y="255.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).Add (4 samples, 0.04%)</title><rect x="13.8" y="277" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="16.80" y="287.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.01%)</title><rect x="219.6" y="149" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="222.57" y="159.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).summarize (1 samples, 0.01%)</title><rect x="19.3" y="85" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="22.34" y="95.5" ></text>
</g>
<g >
<title>runtime.systemstack (23 samples, 0.21%)</title><rect x="216.4" y="213" width="2.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="219.42" y="223.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (1 samples, 0.01%)</title><rect x="19.7" y="229" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="22.66" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (7 samples, 0.06%)</title><rect x="218.9" y="229" width="0.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="221.92" y="239.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (2 samples, 0.02%)</title><rect x="683.0" y="213" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="686.01" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (1 samples, 0.01%)</title><rect x="19.3" y="197" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="22.34" y="207.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).Add (1 samples, 0.01%)</title><rect x="195.1" y="197" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="198.14" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (52 samples, 0.48%)</title><rect x="195.2" y="165" width="5.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="198.25" y="175.5" ></text>
</g>
<g >
<title>runtime.getempty (1 samples, 0.01%)</title><rect x="216.5" y="117" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="219.53" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mspan).init (14 samples, 0.13%)</title><rect x="197.7" y="101" width="1.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="200.74" y="111.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (8 samples, 0.07%)</title><rect x="1188.6" y="293" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1191.59" y="303.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (7 samples, 0.06%)</title><rect x="686.2" y="197" width="0.7" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="689.16" y="207.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (1 samples, 0.01%)</title><rect x="32.4" y="245" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="35.37" y="255.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).resolveInternal (1 samples, 0.01%)</title><rect x="20.6" y="197" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="23.64" y="207.5" ></text>
</g>
<g >
<title>runtime.(*sweepClass).update (1 samples, 0.01%)</title><rect x="15.4" y="293" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="18.43" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (52 samples, 0.48%)</title><rect x="195.2" y="181" width="5.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="198.25" y="191.5" ></text>
</g>
<g >
<title>strings.Cut (1,127 samples, 10.37%)</title><rect x="1062.0" y="293" width="122.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1064.98" y="303.5" >strings.Cut</text>
</g>
<g >
<title>runtime.tgkill (1 samples, 0.01%)</title><rect x="19.8" y="197" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="22.77" y="207.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.01%)</title><rect x="19.4" y="197" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="22.45" y="207.5" ></text>
</g>
<g >
<title>syscall.Syscall (739 samples, 6.80%)</title><rect x="684.5" y="213" width="80.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="687.53" y="223.5" >syscall.S..</text>
</g>
<g >
<title>runtime.(*unwinder).resolveInternal (1 samples, 0.01%)</title><rect x="20.9" y="197" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="23.86" y="207.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwunlock (4 samples, 0.04%)</title><rect x="683.8" y="213" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="686.77" y="223.5" ></text>
</g>
<g >
<title>runtime.runqsteal (2 samples, 0.02%)</title><rect x="1187.4" y="245" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1190.39" y="255.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.01%)</title><rect x="1187.9" y="197" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1190.94" y="207.5" ></text>
</g>
<g >
<title>runtime.notetsleep (1 samples, 0.01%)</title><rect x="18.0" y="245" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="21.04" y="255.5" ></text>
</g>
<g >
<title>runtime.(*specialsIter).valid (1 samples, 0.01%)</title><rect x="15.3" y="293" width="0.1" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="18.32" y="303.5" ></text>
</g>
<g >
<title>runtime.tophash (1 samples, 0.01%)</title><rect x="1061.9" y="277" width="0.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1064.87" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (30 samples, 0.28%)</title><rect x="196.3" y="117" width="3.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="199.33" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocNeedsZero (2 samples, 0.02%)</title><rect x="197.4" y="101" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="200.42" y="111.5" ></text>
</g>
<g >
<title>runtime.mcall (33 samples, 0.30%)</title><rect x="1184.4" y="325" width="3.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1187.35" y="335.5" ></text>
</g>
<g >
<title>runtime.finishsweep_m (3 samples, 0.03%)</title><rect x="219.1" y="197" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="222.14" y="207.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (716 samples, 6.59%)</title><rect x="687.0" y="181" width="77.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="690.03" y="191.5" >internal..</text>
</g>
<g >
<title>runtime.startTheWorldWithSema (3 samples, 0.03%)</title><rect x="19.3" y="245" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="22.34" y="255.5" ></text>
</g>
<g >
<title>runtime.notetsleep (2 samples, 0.02%)</title><rect x="19.1" y="229" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="22.12" y="239.5" ></text>
</g>
<g >
<title>runtime.readUintptr (3 samples, 0.03%)</title><rect x="26.8" y="245" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="29.83" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (52 samples, 0.48%)</title><rect x="195.2" y="197" width="5.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="198.25" y="207.5" ></text>
</g>
<g >
<title>os.(*File).read (749 samples, 6.89%)</title><rect x="683.4" y="261" width="81.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="686.45" y="271.5" >os.(*File..</text>
</g>
<g >
<title>runtime.gcstopm (2 samples, 0.02%)</title><rect x="1184.9" y="261" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1187.90" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mspan).init (1 samples, 0.01%)</title><rect x="216.5" y="37" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="219.53" y="47.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (6 samples, 0.06%)</title><rect x="1187.9" y="293" width="0.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1190.94" y="303.5" ></text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.01%)</title><rect x="1185.0" y="245" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1188.01" y="255.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func3 (26 samples, 0.24%)</title><rect x="10.9" y="261" width="2.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="13.87" y="271.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.01%)</title><rect x="1187.9" y="181" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1190.94" y="191.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).reset (2 samples, 0.02%)</title><rect x="219.1" y="181" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="222.14" y="191.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).free (15 samples, 0.14%)</title><rect x="11.4" y="229" width="1.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="14.41" y="239.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.01%)</title><rect x="219.6" y="117" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="222.57" y="127.5" ></text>
</g>
<g >
<title>runtime.(*sysMemStat).add (2 samples, 0.02%)</title><rect x="13.0" y="229" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="16.04" y="239.5" ></text>
</g>
<g >
<title>runtime.divRoundUp (3 samples, 0.03%)</title><rect x="70.8" y="261" width="0.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="73.81" y="271.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (140 samples, 1.29%)</title><rect x="203.7" y="245" width="15.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="206.72" y="255.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.01%)</title><rect x="1187.7" y="245" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1190.72" y="255.5" ></text>
</g>
<g >
<title>runtime.scanobject (87 samples, 0.80%)</title><rect x="22.3" y="261" width="9.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="25.27" y="271.5" ></text>
</g>
<g >
<title>runtime.procresize (2 samples, 0.02%)</title><rect x="19.3" y="229" width="0.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="22.34" y="239.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.EpollWait (5 samples, 0.05%)</title><rect x="1186.6" y="245" width="0.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1189.63" y="255.5" ></text>
</g>
<g >
<title>runtime.suspendG (1 samples, 0.01%)</title><rect x="22.1" y="229" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="25.05" y="239.5" ></text>
</g>
<g >
<title>runtime.resetspinning (1 samples, 0.01%)</title><rect x="1187.8" y="277" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1190.83" y="287.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readUnlock (5 samples, 0.05%)</title><rect x="683.7" y="229" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="686.67" y="239.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint64).Add (1 samples, 0.01%)</title><rect x="17.3" y="261" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="20.28" y="271.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).heapGoalInternal (2 samples, 0.02%)</title><rect x="219.7" y="213" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="222.68" y="223.5" ></text>
</g>
<g >
<title>runtime.(*consistentHeapStats).release (1 samples, 0.01%)</title><rect x="16.7" y="277" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="19.73" y="287.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.01%)</title><rect x="1187.8" y="213" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1190.83" y="223.5" ></text>
</g>
<g >
<title>runtime.gcDrain (4 samples, 0.04%)</title><rect x="32.4" y="277" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="35.37" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (8 samples, 0.07%)</title><rect x="18.0" y="293" width="0.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="21.04" y="303.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.01%)</title><rect x="1188.3" y="197" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1191.26" y="207.5" ></text>
</g>
<g >
<title>runtime.newMarkBits (1 samples, 0.01%)</title><rect x="199.5" y="101" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="202.48" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mheap).setSpans (1 samples, 0.01%)</title><rect x="197.6" y="101" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="200.64" y="111.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.01%)</title><rect x="1184.9" y="213" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1187.90" y="223.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.01%)</title><rect x="17.6" y="277" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="20.60" y="287.5" ></text>
</g>
<g >
<title>runtime.gcResetMarkState (2 samples, 0.02%)</title><rect x="218.9" y="213" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="221.92" y="223.5" ></text>
</g>
<g >
<title>runtime.tgkill (2 samples, 0.02%)</title><rect x="18.6" y="197" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="21.58" y="207.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (1 samples, 0.01%)</title><rect x="1188.3" y="229" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1191.26" y="239.5" ></text>
</g>
<g >
<title>runtime.(*atomicHeadTailIndex).incTail (2 samples, 0.02%)</title><rect x="201.5" y="181" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="204.55" y="191.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (3 samples, 0.03%)</title><rect x="13.4" y="245" width="0.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="16.37" y="255.5" ></text>
</g>
<g >
<title>runtime.mPark (1 samples, 0.01%)</title><rect x="1187.9" y="229" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1190.94" y="239.5" ></text>
</g>
<g >
<title>runtime.signalM (6 samples, 0.06%)</title><rect x="18.1" y="213" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="21.14" y="223.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (2 samples, 0.02%)</title><rect x="18.9" y="229" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="21.90" y="239.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByteString (99 samples, 0.91%)</title><rect x="1173.6" y="245" width="10.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1176.60" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (1 samples, 0.01%)</title><rect x="32.2" y="213" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="35.15" y="223.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.01%)</title><rect x="1188.4" y="197" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1191.37" y="207.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (2 samples, 0.02%)</title><rect x="19.1" y="213" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="22.12" y="223.5" ></text>
</g>
<g >
<title>runtime.notesleep (14 samples, 0.13%)</title><rect x="1185.1" y="245" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1188.11" y="255.5" ></text>
</g>
<g >
<title>runtime.sweepone (71 samples, 0.65%)</title><rect x="10.3" y="309" width="7.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="13.33" y="319.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (12 samples, 0.11%)</title><rect x="11.4" y="213" width="1.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="14.41" y="223.5" ></text>
</g>
</g>
</svg>
