<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>runtime.procyield (2 samples, 0.01%)</title><rect x="29.7" y="149" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="32.73" y="159.5" ></text>
</g>
<g >
<title>runtime.schedule (22 samples, 0.11%)</title><rect x="1186.7" y="213" width="1.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1189.68" y="223.5" ></text>
</g>
<g >
<title>runtime.heapBitsSlice (202 samples, 0.98%)</title><rect x="1091.6" y="149" width="11.6" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1094.65" y="159.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (6 samples, 0.03%)</title><rect x="28.5" y="133" width="0.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="31.47" y="143.5" ></text>
</g>
<g >
<title>runtime.futex (7 samples, 0.03%)</title><rect x="1186.2" y="133" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1189.17" y="143.5" ></text>
</g>
<g >
<title>runtime.systemstack (8 samples, 0.04%)</title><rect x="916.4" y="181" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="919.39" y="191.5" ></text>
</g>
<g >
<title>runtime.gcstopm (7 samples, 0.03%)</title><rect x="1186.7" y="181" width="0.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1189.74" y="191.5" ></text>
</g>
<g >
<title>runtime.main (19,815 samples, 96.02%)</title><rect x="48.9" y="261" width="1133.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="51.88" y="271.5" >runtime.main</text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (11 samples, 0.05%)</title><rect x="26.2" y="181" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="29.18" y="191.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (4 samples, 0.02%)</title><rect x="27.3" y="133" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="30.27" y="143.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (6 samples, 0.03%)</title><rect x="47.0" y="197" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="50.00" y="207.5" ></text>
</g>
<g >
<title>runtime.sysUnused (5 samples, 0.02%)</title><rect x="10.0" y="165" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (2 samples, 0.01%)</title><rect x="155.0" y="149" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="157.96" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (6 samples, 0.03%)</title><rect x="1028.3" y="53" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1031.35" y="63.5" ></text>
</g>
<g >
<title>runtime.bgscavenge (5 samples, 0.02%)</title><rect x="10.0" y="261" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (29 samples, 0.14%)</title><rect x="153.2" y="117" width="1.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="156.18" y="127.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (2 samples, 0.01%)</title><rect x="25.6" y="197" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="28.61" y="207.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).resolveInternal (3 samples, 0.01%)</title><rect x="28.2" y="133" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="31.18" y="143.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (2 samples, 0.01%)</title><rect x="22.3" y="181" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="25.29" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (2 samples, 0.01%)</title><rect x="23.7" y="133" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="26.72" y="143.5" ></text>
</g>
<g >
<title>runtime.step (2 samples, 0.01%)</title><rect x="27.4" y="101" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="30.38" y="111.5" ></text>
</g>
<g >
<title>runtime.notetsleep (7 samples, 0.03%)</title><rect x="25.0" y="181" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="27.98" y="191.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readUnlock (2 samples, 0.01%)</title><rect x="337.0" y="181" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="339.96" y="191.5" ></text>
</g>
<g >
<title>strings.Split (6,324 samples, 30.65%)</title><rect x="820.3" y="245" width="361.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="823.32" y="255.5" >strings.Split</text>
</g>
<g >
<title>runtime.wbBufFlush1 (3 samples, 0.01%)</title><rect x="1187.4" y="149" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1190.43" y="159.5" ></text>
</g>
<g >
<title>runtime.findObject (2 samples, 0.01%)</title><rect x="165.0" y="53" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="168.02" y="63.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (37 samples, 0.18%)</title><rect x="1038.5" y="117" width="2.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1041.53" y="127.5" ></text>
</g>
<g >
<title>runtime.bool2int (11 samples, 0.05%)</title><rect x="935.0" y="197" width="0.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="938.03" y="207.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (2 samples, 0.01%)</title><rect x="24.2" y="181" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="27.24" y="191.5" ></text>
</g>
<g >
<title>runtime.memmove (4 samples, 0.02%)</title><rect x="373.0" y="213" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="375.99" y="223.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (6 samples, 0.03%)</title><rect x="336.7" y="197" width="0.4" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="339.74" y="207.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (2 samples, 0.01%)</title><rect x="1028.7" y="37" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1031.75" y="47.5" ></text>
</g>
<g >
<title>runtime.wakep (14 samples, 0.07%)</title><rect x="1187.9" y="213" width="0.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1190.94" y="223.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (5 samples, 0.02%)</title><rect x="21.0" y="213" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="24.04" y="223.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint64).Add (2 samples, 0.01%)</title><rect x="1031.3" y="117" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1034.26" y="127.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).Add (9 samples, 0.04%)</title><rect x="20.3" y="213" width="0.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="23.35" y="223.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (2 samples, 0.01%)</title><rect x="165.9" y="149" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="168.88" y="159.5" ></text>
</g>
<g >
<title>runtime.casgstatus (3 samples, 0.01%)</title><rect x="337.8" y="117" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="340.77" y="127.5" ></text>
</g>
<g >
<title>runtime.casgstatus (2 samples, 0.01%)</title><rect x="338.3" y="133" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="341.28" y="143.5" ></text>
</g>
<g >
<title>runtime.bgsweep (206 samples, 1.00%)</title><rect x="10.3" y="261" width="11.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="13.29" y="271.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (3 samples, 0.01%)</title><rect x="155.1" y="149" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="158.07" y="159.5" ></text>
</g>
<g >
<title>runtime.getMCache (57 samples, 0.28%)</title><rect x="77.7" y="213" width="3.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="80.70" y="223.5" ></text>
</g>
<g >
<title>strconv.special (187 samples, 0.91%)</title><rect x="786.0" y="181" width="10.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="788.95" y="191.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByteString (91 samples, 0.44%)</title><rect x="856.1" y="197" width="5.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="859.12" y="207.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (7 samples, 0.03%)</title><rect x="16.5" y="181" width="0.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="19.46" y="191.5" ></text>
</g>
<g >
<title>runtime.sweepone (200 samples, 0.97%)</title><rect x="10.6" y="245" width="11.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="13.63" y="255.5" ></text>
</g>
<g >
<title>all (20,636 samples, 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.01%)</title><rect x="1186.9" y="165" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1189.91" y="175.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).Add (5 samples, 0.02%)</title><rect x="1024.9" y="53" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1027.92" y="63.5" ></text>
</g>
<g >
<title>runtime.bucketShift (28 samples, 0.14%)</title><rect x="391.1" y="229" width="1.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="394.06" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mspan).initHeapBits (15 samples, 0.07%)</title><rect x="1029.4" y="117" width="0.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1032.43" y="127.5" ></text>
</g>
<g >
<title>runtime.lock2 (3 samples, 0.01%)</title><rect x="23.8" y="117" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="26.84" y="127.5" ></text>
</g>
<g >
<title>runtime.memmove (229 samples, 1.11%)</title><rect x="167.4" y="213" width="13.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="170.36" y="223.5" ></text>
</g>
<g >
<title>runtime.scavChunkData.pack (2 samples, 0.01%)</title><rect x="15.1" y="149" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="18.15" y="159.5" ></text>
</g>
<g >
<title>runtime.systemstack (88 samples, 0.43%)</title><rect x="1024.4" y="101" width="5.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1027.40" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (88 samples, 0.43%)</title><rect x="1024.4" y="117" width="5.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1027.40" y="127.5" ></text>
</g>
<g >
<title>runtime.add (15 samples, 0.07%)</title><rect x="934.2" y="197" width="0.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="937.17" y="207.5" ></text>
</g>
<g >
<title>runtime.(*bmap).keys (12 samples, 0.06%)</title><rect x="376.8" y="229" width="0.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="379.76" y="239.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (3 samples, 0.01%)</title><rect x="40.9" y="181" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="43.88" y="191.5" ></text>
</g>
<g >
<title>runtime.pcvalue (4 samples, 0.02%)</title><rect x="27.3" y="117" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="30.27" y="127.5" ></text>
</g>
<g >
<title>runtime.(*pageCache).flush (2 samples, 0.01%)</title><rect x="24.0" y="133" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="27.01" y="143.5" ></text>
</g>
<g >
<title>runtime.gcTrigger.test (5 samples, 0.02%)</title><rect x="1041.4" y="181" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1044.38" y="191.5" ></text>
</g>
<g >
<title>bufio.ScanLines (200 samples, 0.97%)</title><rect x="293.6" y="213" width="11.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="296.56" y="223.5" ></text>
</g>
<g >
<title>os.(*File).Read (5 samples, 0.02%)</title><rect x="336.3" y="213" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="339.28" y="223.5" ></text>
</g>
<g >
<title>syscall.Read (624 samples, 3.02%)</title><rect x="337.3" y="197" width="35.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="340.31" y="207.5" >sys..</text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (7 samples, 0.03%)</title><rect x="23.7" y="165" width="0.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="26.72" y="175.5" ></text>
</g>
<g >
<title>runtime.findObject (2 samples, 0.01%)</title><rect x="336.2" y="133" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="339.16" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (147 samples, 0.71%)</title><rect x="1023.0" y="165" width="8.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1025.97" y="175.5" ></text>
</g>
<g >
<title>runtime.findObject (31 samples, 0.15%)</title><rect x="38.3" y="181" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="41.30" y="191.5" ></text>
</g>
<g >
<title>runtime.usleep (6 samples, 0.03%)</title><rect x="1185.1" y="149" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1188.14" y="159.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.forEachP.func6 (13 samples, 0.06%)</title><rect x="23.7" y="197" width="0.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="26.67" y="207.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).Add (3 samples, 0.01%)</title><rect x="1023.6" y="149" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1026.60" y="159.5" ></text>
</g>
<g >
<title>runtime.spanOf (2 samples, 0.01%)</title><rect x="165.1" y="53" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="168.13" y="63.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func3 (2 samples, 0.01%)</title><rect x="25.6" y="213" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="28.61" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeMSpanLocked (5 samples, 0.02%)</title><rect x="11.8" y="181" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="14.77" y="191.5" ></text>
</g>
<g >
<title>runtime.greyobject (2 samples, 0.01%)</title><rect x="165.4" y="85" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="168.42" y="95.5" ></text>
</g>
<g >
<title>runtime.gcTrigger.test (4 samples, 0.02%)</title><rect x="166.0" y="197" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="169.05" y="207.5" ></text>
</g>
<g >
<title>runtime.findfunc (2 samples, 0.01%)</title><rect x="28.4" y="133" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="31.36" y="143.5" ></text>
</g>
<g >
<title>runtime.futexsleep (9 samples, 0.04%)</title><rect x="22.4" y="149" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="25.41" y="159.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint64).Add (3 samples, 0.01%)</title><rect x="152.6" y="165" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="155.55" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (9 samples, 0.04%)</title><rect x="1031.4" y="165" width="0.5" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1034.38" y="175.5" ></text>
</g>
<g >
<title>runtime.stealWork (10 samples, 0.05%)</title><rect x="1184.9" y="197" width="0.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1187.91" y="207.5" ></text>
</g>
<g >
<title>runtime.offAddr.lessThan (3 samples, 0.01%)</title><rect x="15.0" y="149" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="17.97" y="159.5" ></text>
</g>
<g >
<title>strings.Index (688 samples, 3.33%)</title><rect x="822.0" y="229" width="39.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="824.98" y="239.5" >str..</text>
</g>
<g >
<title>bufio.(*Scanner).Scan (1,860 samples, 9.01%)</title><rect x="266.9" y="229" width="106.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="269.86" y="239.5" >bufio.(*Scann..</text>
</g>
<g >
<title>runtime.preemptM (7 samples, 0.03%)</title><rect x="27.5" y="165" width="0.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="30.50" y="175.5" ></text>
</g>
<g >
<title>runtime.scanobject (21 samples, 0.10%)</title><rect x="47.6" y="197" width="1.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="50.63" y="207.5" ></text>
</g>
<g >
<title>runtime.preemptM (7 samples, 0.03%)</title><rect x="23.0" y="165" width="0.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="25.98" y="175.5" ></text>
</g>
<g >
<title>runtime.signalM (7 samples, 0.03%)</title><rect x="27.5" y="149" width="0.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="30.50" y="159.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).CompareAndSwap (5 samples, 0.02%)</title><rect x="10.9" y="229" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="13.91" y="239.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (2 samples, 0.01%)</title><rect x="1040.5" y="85" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1043.53" y="95.5" ></text>
</g>
<g >
<title>strconv.readFloat (1,945 samples, 9.43%)</title><rect x="674.7" y="181" width="111.3" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="677.74" y="191.5" >strconv.readF..</text>
</g>
<g >
<title>runtime.tgkill (3 samples, 0.01%)</title><rect x="25.4" y="133" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="28.44" y="143.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (30 samples, 0.15%)</title><rect x="12.9" y="149" width="1.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="15.86" y="159.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.EpollWait (4 samples, 0.02%)</title><rect x="1184.5" y="181" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1187.51" y="191.5" ></text>
</g>
<g >
<title>runtime.futex (4 samples, 0.02%)</title><rect x="1187.2" y="133" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1190.20" y="143.5" ></text>
</g>
<g >
<title>runtime.stopm (7 samples, 0.03%)</title><rect x="1185.5" y="197" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1188.48" y="207.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func2 (12 samples, 0.06%)</title><rect x="24.9" y="213" width="0.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="27.92" y="223.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (37 samples, 0.18%)</title><rect x="1038.5" y="101" width="2.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1041.53" y="111.5" ></text>
</g>
<g >
<title>runtime.pcvalue (3 samples, 0.01%)</title><rect x="29.3" y="101" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="32.33" y="111.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).reset (7 samples, 0.03%)</title><rect x="1040.8" y="117" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1043.76" y="127.5" ></text>
</g>
<g >
<title>runtime.forEachP (13 samples, 0.06%)</title><rect x="23.7" y="229" width="0.7" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="26.67" y="239.5" ></text>
</g>
<g >
<title>runtime.newArenaMayUnlock (3 samples, 0.01%)</title><rect x="154.3" y="37" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="157.27" y="47.5" ></text>
</g>
<g >
<title>runtime.procyield (19 samples, 0.09%)</title><rect x="1188.7" y="197" width="1.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1191.74" y="207.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge.func1 (5 samples, 0.02%)</title><rect x="10.0" y="181" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint64).CompareAndSwap (2 samples, 0.01%)</title><rect x="17.8" y="213" width="0.1" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="20.83" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (403 samples, 1.95%)</title><rect x="25.8" y="245" width="23.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="28.84" y="255.5" >r..</text>
</g>
<g >
<title>main.main (10,675 samples, 51.73%)</title><rect x="209.9" y="245" width="610.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="212.91" y="255.5" >main.main</text>
</g>
<g >
<title>runtime.(*mspan).typePointersOfUnchecked (4 samples, 0.02%)</title><rect x="38.0" y="181" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="41.02" y="191.5" ></text>
</g>
<g >
<title>runtime.scanblock (30 samples, 0.15%)</title><rect x="1038.6" y="53" width="1.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1041.58" y="63.5" ></text>
</g>
<g >
<title>runtime.tophash (8 samples, 0.04%)</title><rect x="580.8" y="229" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="583.79" y="239.5" ></text>
</g>
<g >
<title>runtime.scanobject (5 samples, 0.02%)</title><rect x="165.2" y="101" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="168.25" y="111.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readLock (4 samples, 0.02%)</title><rect x="337.1" y="197" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="340.08" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (15 samples, 0.07%)</title><rect x="1030.5" y="149" width="0.9" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1033.52" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (66 samples, 0.32%)</title><rect x="152.3" y="181" width="3.8" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="155.33" y="191.5" ></text>
</g>
<g >
<title>runtime.acquirem (69 samples, 0.33%)</title><rect x="67.5" y="213" width="3.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="70.47" y="223.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).init.func2 (5 samples, 0.02%)</title><rect x="10.0" y="229" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>runtime.morestack (56 samples, 0.27%)</title><rect x="1186.7" y="261" width="3.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1189.68" y="271.5" ></text>
</g>
<g >
<title>runtime.lock2 (2 samples, 0.01%)</title><rect x="24.2" y="165" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="27.24" y="175.5" ></text>
</g>
<g >
<title>runtime.mPark (5 samples, 0.02%)</title><rect x="1187.1" y="181" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1190.14" y="191.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (36 samples, 0.17%)</title><rect x="1186.7" y="229" width="2.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1189.68" y="239.5" ></text>
</g>
<g >
<title>runtime.notesleep (3 samples, 0.01%)</title><rect x="1186.7" y="149" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1189.74" y="159.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).run (5 samples, 0.02%)</title><rect x="10.0" y="245" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>runtime.getpid (2 samples, 0.01%)</title><rect x="26.3" y="133" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="29.30" y="143.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (6 samples, 0.03%)</title><rect x="1187.4" y="181" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1190.43" y="191.5" ></text>
</g>
<g >
<title>strconv.parseFloatPrefix (3,521 samples, 17.06%)</title><rect x="595.3" y="213" width="201.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="598.31" y="223.5" >strconv.parseFloatPrefix</text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (49 samples, 0.24%)</title><rect x="162.9" y="133" width="2.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="165.90" y="143.5" ></text>
</g>
<g >
<title>runtime.futexsleep (7 samples, 0.03%)</title><rect x="25.0" y="149" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="27.98" y="159.5" ></text>
</g>
<g >
<title>runtime.tgkill (5 samples, 0.02%)</title><rect x="27.6" y="133" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="30.61" y="143.5" ></text>
</g>
<g >
<title>runtime.markroot (30 samples, 0.15%)</title><rect x="1038.6" y="85" width="1.7" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1041.58" y="95.5" ></text>
</g>
<g >
<title>runtime.markroot (58 samples, 0.28%)</title><rect x="26.9" y="197" width="3.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="29.87" y="207.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (3 samples, 0.01%)</title><rect x="47.4" y="181" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="50.40" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).markBitsForIndex (3 samples, 0.01%)</title><rect x="37.8" y="181" width="0.2" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="40.85" y="191.5" ></text>
</g>
<g >
<title>strings.genSplit (5,607 samples, 27.17%)</title><rect x="861.3" y="229" width="320.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="864.32" y="239.5" >strings.genSplit</text>
</g>
<g >
<title>runtime.scanblock (2 samples, 0.01%)</title><rect x="29.6" y="133" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="32.56" y="143.5" ></text>
</g>
<g >
<title>runtime.systemstack (25 samples, 0.12%)</title><rect x="22.2" y="229" width="1.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="25.18" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (5 samples, 0.02%)</title><rect x="336.0" y="181" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="338.99" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (92 samples, 0.45%)</title><rect x="11.6" y="213" width="5.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="14.60" y="223.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.01%)</title><rect x="1187.8" y="133" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1190.83" y="143.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination (8 samples, 0.04%)</title><rect x="24.4" y="229" width="0.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="27.41" y="239.5" ></text>
</g>
<g >
<title>runtime.tgkill (5 samples, 0.02%)</title><rect x="23.1" y="133" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="26.09" y="143.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).heapGoalInternal (3 samples, 0.01%)</title><rect x="1041.5" y="149" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1044.50" y="159.5" ></text>
</g>
<g >
<title>bufio.dropCR (64 samples, 0.31%)</title><rect x="305.0" y="213" width="3.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="308.00" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (16 samples, 0.08%)</title><rect x="156.1" y="181" width="0.9" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="159.10" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (5 samples, 0.02%)</title><rect x="10.0" y="197" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (6 samples, 0.03%)</title><rect x="165.7" y="181" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="168.71" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (11 samples, 0.05%)</title><rect x="156.4" y="165" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="159.38" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (27 samples, 0.13%)</title><rect x="153.2" y="85" width="1.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="156.24" y="95.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uintptr).Store (2 samples, 0.01%)</title><rect x="20.9" y="213" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="23.86" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (2 samples, 0.01%)</title><rect x="1185.7" y="165" width="0.1" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="1188.65" y="175.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.01%)</title><rect x="1041.3" y="85" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1044.27" y="95.5" ></text>
</g>
<g >
<title>runtime.(*sysMemStat).add (6 samples, 0.03%)</title><rect x="1028.9" y="53" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1031.92" y="63.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (7 samples, 0.03%)</title><rect x="157.0" y="197" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="160.01" y="207.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (8 samples, 0.04%)</title><rect x="916.4" y="197" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="919.39" y="207.5" ></text>
</g>
<g >
<title>runtime.acquirem (65 samples, 0.31%)</title><rect x="930.5" y="197" width="3.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="933.45" y="207.5" ></text>
</g>
<g >
<title>runtime.suspendG (2 samples, 0.01%)</title><rect x="29.7" y="165" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="32.73" y="175.5" ></text>
</g>
<g >
<title>runtime.traceLocker.ok (2 samples, 0.01%)</title><rect x="339.0" y="133" width="0.1" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="341.97" y="143.5" ></text>
</g>
<g >
<title>runtime.tgkill (7 samples, 0.03%)</title><rect x="26.4" y="133" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="29.41" y="143.5" ></text>
</g>
<g >
<title>runtime.(*scavengeIndex).free (6 samples, 0.03%)</title><rect x="14.6" y="149" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="17.57" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mSpanStateBox).get (2 samples, 0.01%)</title><rect x="11.7" y="181" width="0.1" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="14.66" y="191.5" ></text>
</g>
<g >
<title>runtime.notesleep (5 samples, 0.02%)</title><rect x="1187.1" y="165" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1190.14" y="175.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).Add (16 samples, 0.08%)</title><rect x="16.9" y="213" width="0.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="19.92" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (13 samples, 0.06%)</title><rect x="153.7" y="69" width="0.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="156.70" y="79.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func3 (4 samples, 0.02%)</title><rect x="24.6" y="197" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="27.64" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (4 samples, 0.02%)</title><rect x="1087.0" y="149" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1090.02" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocMSpanLocked (6 samples, 0.03%)</title><rect x="1025.3" y="53" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1028.32" y="63.5" ></text>
</g>
<g >
<title>runtime.startm (2 samples, 0.01%)</title><rect x="1187.8" y="165" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1190.83" y="175.5" ></text>
</g>
<g >
<title>indexbytebody (377 samples, 1.83%)</title><rect x="311.7" y="197" width="21.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="314.69" y="207.5" >i..</text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (2 samples, 0.01%)</title><rect x="916.6" y="133" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="919.56" y="143.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).trigger (3 samples, 0.01%)</title><rect x="166.1" y="181" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="169.11" y="191.5" ></text>
</g>
<g >
<title>runtime.findRunnable (63 samples, 0.31%)</title><rect x="1182.3" y="213" width="3.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1185.28" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).countAlloc (3 samples, 0.01%)</title><rect x="18.7" y="229" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="21.75" y="239.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge (5 samples, 0.02%)</title><rect x="10.0" y="213" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (593 samples, 2.87%)</title><rect x="339.1" y="149" width="33.9" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="342.08" y="159.5" >sy..</text>
</g>
<g >
<title>runtime.signalM (4 samples, 0.02%)</title><rect x="25.4" y="149" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="28.38" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (2 samples, 0.01%)</title><rect x="1187.0" y="133" width="0.1" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="1190.03" y="143.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (118 samples, 0.57%)</title><rect x="1104.9" y="181" width="6.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1107.86" y="191.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (4 samples, 0.02%)</title><rect x="1184.5" y="165" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1187.51" y="175.5" ></text>
</g>
<g >
<title>runtime.wakep (11 samples, 0.05%)</title><rect x="1185.9" y="197" width="0.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1188.94" y="207.5" ></text>
</g>
<g >
<title>runtime.getpid (2 samples, 0.01%)</title><rect x="23.0" y="133" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="25.98" y="143.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (4 samples, 0.02%)</title><rect x="154.6" y="53" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="157.56" y="63.5" ></text>
</g>
<g >
<title>runtime.mPark (26 samples, 0.13%)</title><rect x="1183.0" y="197" width="1.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1186.02" y="207.5" ></text>
</g>
<g >
<title>runtime.gcStart.func3 (4 samples, 0.02%)</title><rect x="1041.2" y="149" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1044.16" y="159.5" ></text>
</g>
<g >
<title>memeqbody (607 samples, 2.94%)</title><rect x="538.8" y="213" width="34.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="541.82" y="223.5" >me..</text>
</g>
<g >
<title>runtime.lockWithRank (19 samples, 0.09%)</title><rect x="1188.7" y="229" width="1.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1191.74" y="239.5" ></text>
</g>
<g >
<title>runtime.entersyscall (10 samples, 0.05%)</title><rect x="337.4" y="149" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="340.42" y="159.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (9 samples, 0.04%)</title><rect x="22.4" y="165" width="0.5" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="25.41" y="175.5" ></text>
</g>
<g >
<title>runtime.signalM (9 samples, 0.04%)</title><rect x="26.3" y="149" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="29.30" y="159.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (3 samples, 0.01%)</title><rect x="165.5" y="69" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="168.53" y="79.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).Add (5 samples, 0.02%)</title><rect x="12.5" y="165" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="15.46" y="175.5" ></text>
</g>
<g >
<title>runtime.(*activeSweep).end (2 samples, 0.01%)</title><rect x="11.2" y="229" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="14.20" y="239.5" ></text>
</g>
<g >
<title>runtime.procresize (3 samples, 0.01%)</title><rect x="24.7" y="165" width="0.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="27.70" y="175.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwlock (2 samples, 0.01%)</title><rect x="337.2" y="181" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="340.19" y="191.5" ></text>
</g>
<g >
<title>runtime.runqsteal (7 samples, 0.03%)</title><rect x="1185.1" y="181" width="0.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1188.08" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (3 samples, 0.01%)</title><rect x="1031.7" y="149" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1034.72" y="159.5" ></text>
</g>
<g >
<title>runtime.finishsweep_m (3 samples, 0.01%)</title><rect x="165.7" y="149" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="168.71" y="159.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (2 samples, 0.01%)</title><rect x="24.1" y="149" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="27.12" y="159.5" ></text>
</g>
<g >
<title>runtime.unlock2 (7 samples, 0.03%)</title><rect x="16.5" y="165" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="19.46" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (4 samples, 0.02%)</title><rect x="1026.6" y="37" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1029.57" y="47.5" ></text>
</g>
<g >
<title>runtime.step (2 samples, 0.01%)</title><rect x="28.7" y="101" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="31.70" y="111.5" ></text>
</g>
<g >
<title>runtime.schedule (2 samples, 0.01%)</title><rect x="1181.9" y="229" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1184.94" y="239.5" ></text>
</g>
<g >
<title>runtime.notetsleep (9 samples, 0.04%)</title><rect x="22.4" y="181" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="25.41" y="191.5" ></text>
</g>
<g >
<title>runtime.scanobject (4 samples, 0.02%)</title><rect x="1040.3" y="85" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1043.30" y="95.5" ></text>
</g>
<g >
<title>strconv.atof64exact (771 samples, 3.74%)</title><rect x="630.1" y="181" width="44.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="633.13" y="191.5" >strc..</text>
</g>
<g >
<title>runtime.(*mcache).nextFree (170 samples, 0.82%)</title><rect x="1022.2" y="181" width="9.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1025.23" y="191.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (3 samples, 0.01%)</title><rect x="1182.9" y="197" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1185.85" y="207.5" ></text>
</g>
<g >
<title>runtime.makeSpanClass (6 samples, 0.03%)</title><rect x="81.0" y="213" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="84.02" y="223.5" ></text>
</g>
<g >
<title>runtime.pcvalue (5 samples, 0.02%)</title><rect x="28.5" y="117" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="31.53" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (29 samples, 0.14%)</title><rect x="153.2" y="101" width="1.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="156.18" y="111.5" ></text>
</g>
<g >
<title>countbody (393 samples, 1.90%)</title><rect x="1154.1" y="197" width="22.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1157.15" y="207.5" >c..</text>
</g>
<g >
<title>runtime.startTheWorldWithSema (4 samples, 0.02%)</title><rect x="1041.2" y="133" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1044.16" y="143.5" ></text>
</g>
<g >
<title>strconv.commonPrefixLenIgnoreCase (8 samples, 0.04%)</title><rect x="674.2" y="181" width="0.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="677.22" y="191.5" ></text>
</g>
<g >
<title>internal/bytealg.CountString (93 samples, 0.45%)</title><rect x="1176.6" y="197" width="5.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1179.62" y="207.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (3 samples, 0.01%)</title><rect x="23.8" y="133" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="26.84" y="143.5" ></text>
</g>
<g >
<title>runtime.pallocSum.unpack (2 samples, 0.01%)</title><rect x="14.4" y="133" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="17.40" y="143.5" ></text>
</g>
<g >
<title>runtime.acquirep (3 samples, 0.01%)</title><rect x="1185.6" y="181" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1188.60" y="191.5" ></text>
</g>
<g >
<title>strconv.atof64 (3,400 samples, 16.48%)</title><rect x="602.2" y="197" width="194.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="605.23" y="207.5" >strconv.atof64</text>
</g>
<g >
<title>runtime.(*mcache).nextFree (92 samples, 0.45%)</title><rect x="151.8" y="197" width="5.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="154.75" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).partialSwept (3 samples, 0.01%)</title><rect x="1030.3" y="149" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1033.35" y="159.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint8).Load (2 samples, 0.01%)</title><rect x="36.6" y="181" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="39.59" y="191.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4.1 (2 samples, 0.01%)</title><rect x="24.0" y="149" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="27.01" y="159.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (9 samples, 0.04%)</title><rect x="155.6" y="149" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="158.58" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (5 samples, 0.02%)</title><rect x="23.7" y="149" width="0.3" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="26.72" y="159.5" ></text>
</g>
<g >
<title>runtime.futex (24 samples, 0.12%)</title><rect x="1183.1" y="149" width="1.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1186.14" y="159.5" ></text>
</g>
<g >
<title>runtime.netpoll (2 samples, 0.01%)</title><rect x="165.9" y="133" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="168.88" y="143.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.01%)</title><rect x="24.1" y="117" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="27.12" y="127.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (5 samples, 0.02%)</title><rect x="16.2" y="181" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="19.18" y="191.5" ></text>
</g>
<g >
<title>runtime.preemptall (4 samples, 0.02%)</title><rect x="25.4" y="181" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="28.38" y="191.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.01%)</title><rect x="1187.8" y="149" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1190.83" y="159.5" ></text>
</g>
<g >
<title>gcWriteBarrier (9 samples, 0.04%)</title><rect x="916.3" y="213" width="0.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="919.33" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (2 samples, 0.01%)</title><rect x="1031.9" y="181" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1034.95" y="191.5" ></text>
</g>
<g >
<title>internal/stringslite.Index (136 samples, 0.66%)</title><rect x="823.4" y="213" width="7.7" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="826.35" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1,504 samples, 7.29%)</title><rect x="81.4" y="213" width="86.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="84.36" y="223.5" >runtime.ma..</text>
</g>
<g >
<title>runtime.markroot (38 samples, 0.18%)</title><rect x="163.1" y="101" width="2.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="166.08" y="111.5" ></text>
</g>
<g >
<title>runtime.wakep (3 samples, 0.01%)</title><rect x="1041.2" y="117" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1044.21" y="127.5" ></text>
</g>
<g >
<title>syscall.read (624 samples, 3.02%)</title><rect x="337.3" y="181" width="35.7" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="340.31" y="191.5" >sys..</text>
</g>
<g >
<title>runtime.(*scavengeIndex).free (2 samples, 0.01%)</title><rect x="24.0" y="117" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="27.01" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (5 samples, 0.02%)</title><rect x="15.8" y="181" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="18.78" y="191.5" ></text>
</g>
<g >
<title>runtime.alignUp (109 samples, 0.53%)</title><rect x="71.4" y="213" width="6.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="74.41" y="223.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (4 samples, 0.02%)</title><rect x="47.3" y="197" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="50.34" y="207.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (84 samples, 0.41%)</title><rect x="41.8" y="181" width="4.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="44.79" y="191.5" ></text>
</g>
<g >
<title>runtime.(*atomicHeadTailIndex).load (3 samples, 0.01%)</title><rect x="18.3" y="213" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="21.29" y="223.5" ></text>
</g>
<g >
<title>runtime.futexsleep (3 samples, 0.01%)</title><rect x="1186.7" y="133" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1189.74" y="143.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (15 samples, 0.07%)</title><rect x="28.8" y="149" width="0.9" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="31.81" y="159.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.01%)</title><rect x="1187.6" y="165" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1190.60" y="175.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.EpollWait (2 samples, 0.01%)</title><rect x="165.9" y="117" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="168.88" y="127.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).next (12 samples, 0.06%)</title><rect x="28.1" y="149" width="0.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="31.13" y="159.5" ></text>
</g>
<g >
<title>runtime.forEachP (25 samples, 0.12%)</title><rect x="22.2" y="245" width="1.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="25.18" y="255.5" ></text>
</g>
<g >
<title>runtime.lock2 (19 samples, 0.09%)</title><rect x="1188.7" y="213" width="1.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1191.74" y="223.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (48 samples, 0.23%)</title><rect x="163.0" y="117" width="2.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="165.96" y="127.5" ></text>
</g>
<g >
<title>runtime.makeSpanClass (18 samples, 0.09%)</title><rect x="936.7" y="197" width="1.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="939.74" y="207.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (2 samples, 0.01%)</title><rect x="1111.6" y="181" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1114.60" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (30 samples, 0.15%)</title><rect x="153.1" y="133" width="1.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="156.13" y="143.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (3 samples, 0.01%)</title><rect x="1187.4" y="165" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1190.43" y="175.5" ></text>
</g>
<g >
<title>runtime.findObject (2 samples, 0.01%)</title><rect x="165.6" y="53" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="168.59" y="63.5" ></text>
</g>
<g >
<title>internal/abi.(*Type).Pointers (19 samples, 0.09%)</title><rect x="929.4" y="197" width="1.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="932.37" y="207.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (7 samples, 0.03%)</title><rect x="916.4" y="149" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="919.44" y="159.5" ></text>
</g>
<g >
<title>runtime.wakep (2 samples, 0.01%)</title><rect x="1187.8" y="181" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1190.83" y="191.5" ></text>
</g>
<g >
<title>runtime.notewakeup (13 samples, 0.06%)</title><rect x="1188.0" y="181" width="0.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1191.00" y="191.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (447 samples, 2.17%)</title><rect x="1112.3" y="197" width="25.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1115.29" y="207.5" >r..</text>
</g>
<g >
<title>runtime.mapaccess2_faststr (3,290 samples, 15.94%)</title><rect x="392.7" y="229" width="188.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="395.66" y="239.5" >runtime.mapaccess2_faststr</text>
</g>
<g >
<title>runtime.unlockWithRank (2 samples, 0.01%)</title><rect x="1186.6" y="213" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1189.57" y="223.5" ></text>
</g>
<g >
<title>runtime.bucketMask (29 samples, 0.14%)</title><rect x="389.4" y="229" width="1.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="392.40" y="239.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (11 samples, 0.05%)</title><rect x="26.2" y="197" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="29.18" y="207.5" ></text>
</g>
<g >
<title>runtime.signalM (7 samples, 0.03%)</title><rect x="23.0" y="149" width="0.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="25.98" y="159.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).free (44 samples, 0.21%)</title><rect x="12.7" y="165" width="2.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="15.74" y="175.5" ></text>
</g>
<g >
<title>runtime.gcDrain (379 samples, 1.84%)</title><rect x="25.9" y="213" width="21.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="28.90" y="223.5" >r..</text>
</g>
<g >
<title>runtime.getpid (2 samples, 0.01%)</title><rect x="27.5" y="133" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="30.50" y="143.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (5 samples, 0.02%)</title><rect x="336.0" y="165" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="338.99" y="175.5" ></text>
</g>
<g >
<title>runtime.futex (9 samples, 0.04%)</title><rect x="22.4" y="133" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="25.41" y="143.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.01%)</title><rect x="1041.3" y="53" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1044.27" y="63.5" ></text>
</g>
<g >
<title>runtime.acquirep (2 samples, 0.01%)</title><rect x="1187.0" y="149" width="0.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1190.03" y="159.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (7 samples, 0.03%)</title><rect x="25.0" y="165" width="0.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="27.98" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (2 samples, 0.01%)</title><rect x="24.8" y="149" width="0.1" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="27.75" y="159.5" ></text>
</g>
<g >
<title>runtime.systemstack (49 samples, 0.24%)</title><rect x="162.9" y="165" width="2.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="165.90" y="175.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (3 samples, 0.01%)</title><rect x="165.5" y="85" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="168.53" y="95.5" ></text>
</g>
<g >
<title>runtime.systemstack (14 samples, 0.07%)</title><rect x="24.9" y="229" width="0.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="27.92" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (94 samples, 0.46%)</title><rect x="11.5" y="229" width="5.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="14.49" y="239.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (7 samples, 0.03%)</title><rect x="337.6" y="133" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="340.59" y="143.5" ></text>
</g>
<g >
<title>runtime.readUintptr (10 samples, 0.05%)</title><rect x="41.0" y="181" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="44.05" y="191.5" ></text>
</g>
<g >
<title>runtime.runqgrab (6 samples, 0.03%)</title><rect x="1185.1" y="165" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1188.14" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).init (22 samples, 0.11%)</title><rect x="1027.0" y="37" width="1.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1029.98" y="47.5" ></text>
</g>
<g >
<title>runtime.lock2 (5 samples, 0.02%)</title><rect x="16.2" y="165" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="19.18" y="175.5" ></text>
</g>
<g >
<title>runtime.add (206 samples, 1.00%)</title><rect x="377.6" y="229" width="11.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="380.62" y="239.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (8 samples, 0.04%)</title><rect x="916.4" y="165" width="0.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="919.39" y="175.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func3 (92 samples, 0.45%)</title><rect x="11.6" y="197" width="5.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="14.60" y="207.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (469 samples, 2.27%)</title><rect x="22.1" y="261" width="26.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="25.07" y="271.5" >r..</text>
</g>
<g >
<title>bufio.(*Scanner).advance (62 samples, 0.30%)</title><rect x="373.2" y="229" width="3.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="376.22" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (45 samples, 0.22%)</title><rect x="152.7" y="165" width="2.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="155.73" y="175.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint8).Load (3 samples, 0.01%)</title><rect x="337.4" y="133" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="340.42" y="143.5" ></text>
</g>
<g >
<title>runtime.spanOf (3 samples, 0.01%)</title><rect x="41.6" y="181" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="44.62" y="191.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (38 samples, 0.18%)</title><rect x="163.1" y="85" width="2.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="166.08" y="95.5" ></text>
</g>
<g >
<title>indexbytebody (374 samples, 1.81%)</title><rect x="834.7" y="197" width="21.4" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="837.73" y="207.5" >i..</text>
</g>
<g >
<title>runtime.typePointers.next (2 samples, 0.01%)</title><rect x="48.7" y="181" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="51.71" y="191.5" ></text>
</g>
<g >
<title>syscall.Syscall (624 samples, 3.02%)</title><rect x="337.3" y="165" width="35.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="340.31" y="175.5" >sys..</text>
</g>
<g >
<title>runtime.wbBufFlush1 (2 samples, 0.01%)</title><rect x="47.5" y="165" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="50.45" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).heapBitsSmallForAddr (2 samples, 0.01%)</title><rect x="38.1" y="165" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="41.13" y="175.5" ></text>
</g>
<g >
<title>runtime.futex (3 samples, 0.01%)</title><rect x="1187.6" y="133" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1190.60" y="143.5" ></text>
</g>
<g >
<title>runtime.startm (10 samples, 0.05%)</title><rect x="1186.0" y="181" width="0.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1189.00" y="191.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (4 samples, 0.02%)</title><rect x="21.3" y="213" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.32" y="223.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint64).Add (9 samples, 0.04%)</title><rect x="1023.8" y="149" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1026.77" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).memoryLimitHeapGoal (3 samples, 0.01%)</title><rect x="1041.5" y="133" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1044.50" y="143.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (49 samples, 0.24%)</title><rect x="162.9" y="181" width="2.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="165.90" y="191.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByte (48 samples, 0.23%)</title><rect x="333.2" y="197" width="2.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="336.25" y="207.5" ></text>
</g>
<g >
<title>runtime.scanstack (31 samples, 0.15%)</title><rect x="28.0" y="165" width="1.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="30.96" y="175.5" ></text>
</g>
<g >
<title>runtime.gcSweep (2 samples, 0.01%)</title><rect x="24.5" y="181" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="27.52" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (87 samples, 0.42%)</title><rect x="1024.5" y="85" width="4.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1027.46" y="95.5" ></text>
</g>
<g >
<title>runtime.systemstack (37 samples, 0.18%)</title><rect x="1038.5" y="149" width="2.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1041.53" y="159.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).init (7 samples, 0.03%)</title><rect x="27.1" y="165" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="30.10" y="175.5" ></text>
</g>
<g >
<title>runtime.gcmarknewobject (3 samples, 0.01%)</title><rect x="1041.7" y="181" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1044.67" y="191.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocker).tryAcquire (8 samples, 0.04%)</title><rect x="21.6" y="229" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="24.61" y="239.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.01%)</title><rect x="1187.8" y="117" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1190.83" y="127.5" ></text>
</g>
<g >
<title>runtime.stopm (2 samples, 0.01%)</title><rect x="1187.0" y="165" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1190.03" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (4 samples, 0.02%)</title><rect x="48.1" y="181" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="51.08" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (2 samples, 0.01%)</title><rect x="1187.0" y="117" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1190.03" y="127.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerIdle (23 samples, 0.11%)</title><rect x="47.6" y="229" width="1.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="50.57" y="239.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (55 samples, 0.27%)</title><rect x="1186.7" y="245" width="3.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1189.68" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (65 samples, 0.31%)</title><rect x="12.1" y="181" width="3.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="15.06" y="191.5" ></text>
</g>
<g >
<title>runtime.finishsweep_m (8 samples, 0.04%)</title><rect x="1040.7" y="133" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1043.70" y="143.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).CompareAndSwap (3 samples, 0.01%)</title><rect x="10.4" y="245" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="13.40" y="255.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.01%)</title><rect x="1041.3" y="69" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1044.27" y="79.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (2 samples, 0.01%)</title><rect x="48.3" y="181" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="51.31" y="191.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).summarize (20 samples, 0.10%)</title><rect x="13.1" y="133" width="1.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="16.09" y="143.5" ></text>
</g>
<g >
<title>runtime.pidleput (2 samples, 0.01%)</title><rect x="1184.7" y="197" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1187.74" y="207.5" ></text>
</g>
<g >
<title>runtime.futex (7 samples, 0.03%)</title><rect x="25.0" y="133" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="27.98" y="143.5" ></text>
</g>
<g >
<title>runtime.gcDrain (23 samples, 0.11%)</title><rect x="47.6" y="213" width="1.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="50.57" y="223.5" ></text>
</g>
<g >
<title>runtime.lock2 (3 samples, 0.01%)</title><rect x="1182.9" y="181" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1185.85" y="191.5" ></text>
</g>
<g >
<title>runtime.startm (13 samples, 0.06%)</title><rect x="1188.0" y="197" width="0.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1191.00" y="207.5" ></text>
</g>
<g >
<title>runtime.wirep (3 samples, 0.01%)</title><rect x="338.8" y="117" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="341.79" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (34 samples, 0.16%)</title><rect x="153.0" y="149" width="2.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="156.01" y="159.5" ></text>
</g>
<g >
<title>runtime.getMCache (18 samples, 0.09%)</title><rect x="935.7" y="197" width="1.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="938.71" y="207.5" ></text>
</g>
<g >
<title>runtime.forEachPInternal (10 samples, 0.05%)</title><rect x="23.7" y="181" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="26.67" y="191.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (2,779 samples, 13.47%)</title><rect x="51.0" y="229" width="158.9" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="54.00" y="239.5" >runtime.slicebytetos..</text>
</g>
<g >
<title>runtime.(*unwinder).resolveInternal (2 samples, 0.01%)</title><rect x="27.2" y="133" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="30.15" y="143.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (2 samples, 0.01%)</title><rect x="165.9" y="101" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="168.88" y="111.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (50 samples, 0.24%)</title><rect x="27.0" y="181" width="2.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="29.98" y="191.5" ></text>
</g>
<g >
<title>runtime.gcStart (6 samples, 0.03%)</title><rect x="165.7" y="197" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="168.71" y="207.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (3 samples, 0.01%)</title><rect x="1187.6" y="149" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1190.60" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (84 samples, 0.41%)</title><rect x="1024.5" y="69" width="4.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1027.52" y="79.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (144 samples, 0.70%)</title><rect x="157.5" y="197" width="8.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="160.47" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).heapGoalInternal (2 samples, 0.01%)</title><rect x="166.2" y="165" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="169.16" y="175.5" ></text>
</g>
<g >
<title>runtime.findRunnable (20 samples, 0.10%)</title><rect x="1186.7" y="197" width="1.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1189.68" y="207.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (5 samples, 0.02%)</title><rect x="29.8" y="181" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="32.84" y="191.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (47 samples, 0.23%)</title><rect x="18.9" y="229" width="2.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="21.92" y="239.5" ></text>
</g>
<g >
<title>runtime.memequal (49 samples, 0.24%)</title><rect x="573.5" y="213" width="2.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="576.52" y="223.5" ></text>
</g>
<g >
<title>runtime.publicationBarrier (9 samples, 0.04%)</title><rect x="1111.7" y="181" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1114.72" y="191.5" ></text>
</g>
<g >
<title>runtime.procyield (3 samples, 0.01%)</title><rect x="1182.9" y="165" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1185.85" y="175.5" ></text>
</g>
<g >
<title>runtime.publicationBarrier (17 samples, 0.08%)</title><rect x="166.4" y="197" width="1.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="169.39" y="207.5" ></text>
</g>
<g >
<title>gcWriteBarrier (5 samples, 0.02%)</title><rect x="336.0" y="213" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="338.99" y="223.5" ></text>
</g>
<g >
<title>runtime.preemptM (9 samples, 0.04%)</title><rect x="26.3" y="165" width="0.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="29.30" y="175.5" ></text>
</g>
<g >
<title>runtime.strhash (78 samples, 0.38%)</title><rect x="576.3" y="213" width="4.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="579.33" y="223.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (37 samples, 0.18%)</title><rect x="23.6" y="245" width="2.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="26.61" y="255.5" ></text>
</g>
<g >
<title>runtime.notesleep (26 samples, 0.13%)</title><rect x="1183.0" y="181" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1186.02" y="191.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func2 (2 samples, 0.01%)</title><rect x="24.5" y="197" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="27.52" y="207.5" ></text>
</g>
<g >
<title>runtime.scanobject (292 samples, 1.42%)</title><rect x="30.2" y="197" width="16.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="33.24" y="207.5" ></text>
</g>
<g >
<title>runtime.gcStart (13 samples, 0.06%)</title><rect x="1040.6" y="181" width="0.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1043.64" y="191.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (469 samples, 2.27%)</title><rect x="180.5" y="213" width="26.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="183.46" y="223.5" >r..</text>
</g>
<g >
<title>runtime.notewakeup (9 samples, 0.04%)</title><rect x="1186.1" y="165" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1189.05" y="175.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3,051 samples, 14.78%)</title><rect x="937.8" y="197" width="174.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="940.77" y="207.5" >runtime.mallocgc</text>
</g>
<g >
<title>runtime.(*mspan).base (8 samples, 0.04%)</title><rect x="37.0" y="181" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="40.05" y="191.5" ></text>
</g>
<g >
<title>runtime.(*stkframe).getStackMap (7 samples, 0.03%)</title><rect x="29.1" y="133" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="32.10" y="143.5" ></text>
</g>
<g >
<title>runtime.forEachPInternal (22 samples, 0.11%)</title><rect x="22.2" y="197" width="1.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="25.18" y="207.5" ></text>
</g>
<g >
<title>strconv.ParseFloat (3,767 samples, 18.25%)</title><rect x="581.2" y="229" width="215.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="584.24" y="239.5" >strconv.ParseFloat</text>
</g>
<g >
<title>runtime.(*mspan).initHeapBits (2 samples, 0.01%)</title><rect x="154.8" y="133" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="157.84" y="143.5" ></text>
</g>
<g >
<title>runtime.systemstack (13 samples, 0.06%)</title><rect x="23.7" y="213" width="0.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="26.67" y="223.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (2 samples, 0.01%)</title><rect x="163.0" y="101" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="165.96" y="111.5" ></text>
</g>
<g >
<title>runtime.newAllocBits (4 samples, 0.02%)</title><rect x="154.6" y="69" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="157.56" y="79.5" ></text>
</g>
<g >
<title>runtime.notetsleep (2 samples, 0.01%)</title><rect x="24.1" y="165" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="27.12" y="175.5" ></text>
</g>
<g >
<title>runtime.mPark (3 samples, 0.01%)</title><rect x="1186.7" y="165" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1189.74" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).partialSwept (2 samples, 0.01%)</title><rect x="155.3" y="165" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="158.30" y="175.5" ></text>
</g>
<g >
<title>runtime.lock (2 samples, 0.01%)</title><rect x="16.1" y="181" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="19.06" y="191.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).allocToCache (4 samples, 0.02%)</title><rect x="1028.7" y="53" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1031.69" y="63.5" ></text>
</g>
<g >
<title>runtime.newMarkBits (2 samples, 0.01%)</title><rect x="1028.2" y="37" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1031.23" y="47.5" ></text>
</g>
<g >
<title>runtime.(*spanSetBlockAlloc).free (2 samples, 0.01%)</title><rect x="165.7" y="133" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="168.71" y="143.5" ></text>
</g>
<g >
<title>runtime.systemstack (7 samples, 0.03%)</title><rect x="24.5" y="213" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="27.47" y="223.5" ></text>
</g>
<g >
<title>runtime.futexsleep (4 samples, 0.02%)</title><rect x="1187.2" y="149" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1190.20" y="159.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (10 samples, 0.05%)</title><rect x="338.4" y="133" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="341.39" y="143.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (5 samples, 0.02%)</title><rect x="336.0" y="197" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="338.99" y="207.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (37 samples, 0.18%)</title><rect x="1038.5" y="133" width="2.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1041.53" y="143.5" ></text>
</g>
<g >
<title>runtime.gcStart.func2 (8 samples, 0.04%)</title><rect x="1040.7" y="149" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1043.70" y="159.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (3 samples, 0.01%)</title><rect x="165.5" y="101" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="168.53" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (12 samples, 0.06%)</title><rect x="155.4" y="165" width="0.7" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="158.41" y="175.5" ></text>
</g>
<g >
<title>runtime.park_m (81 samples, 0.39%)</title><rect x="1182.1" y="245" width="4.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1185.05" y="255.5" ></text>
</g>
<g >
<title>bufio.(*Scanner).Text (2,816 samples, 13.65%)</title><rect x="48.9" y="245" width="161.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="51.88" y="255.5" >bufio.(*Scanner).Text</text>
</g>
<g >
<title>runtime.(*bmap).overflow (3 samples, 0.01%)</title><rect x="377.4" y="229" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="380.45" y="239.5" ></text>
</g>
<g >
<title>strings.TrimSpace (414 samples, 2.01%)</title><rect x="796.6" y="229" width="23.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="799.65" y="239.5" >s..</text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).Add (3 samples, 0.01%)</title><rect x="153.5" y="69" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="156.47" y="79.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).dispose (2 samples, 0.01%)</title><rect x="22.3" y="165" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="25.29" y="175.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (5 samples, 0.02%)</title><rect x="336.0" y="149" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="338.99" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (106 samples, 0.51%)</title><rect x="1024.3" y="149" width="6.0" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1027.29" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocNeedsZero (3 samples, 0.01%)</title><rect x="1026.8" y="37" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1029.80" y="47.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (6 samples, 0.03%)</title><rect x="1025.3" y="37" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1028.32" y="47.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerDedicated (379 samples, 1.84%)</title><rect x="25.9" y="229" width="21.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="28.90" y="239.5" >r..</text>
</g>
<g >
<title>runtime.procyield (2 samples, 0.01%)</title><rect x="24.2" y="149" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="27.24" y="159.5" ></text>
</g>
<g >
<title>runtime.mcall (83 samples, 0.40%)</title><rect x="1181.9" y="261" width="4.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1184.94" y="271.5" ></text>
</g>
<g >
<title>runtime.findObject (4 samples, 0.02%)</title><rect x="1040.0" y="37" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1042.96" y="47.5" ></text>
</g>
<g >
<title>runtime.(*mspan).init (7 samples, 0.03%)</title><rect x="153.9" y="53" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="156.87" y="63.5" ></text>
</g>
<g >
<title>runtime.futexsleep (24 samples, 0.12%)</title><rect x="1183.1" y="165" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1186.14" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (5 samples, 0.02%)</title><rect x="36.7" y="181" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="39.70" y="191.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (49 samples, 0.24%)</title><rect x="162.9" y="149" width="2.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="165.90" y="159.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (13 samples, 0.06%)</title><rect x="1030.6" y="133" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1033.63" y="143.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (30 samples, 0.15%)</title><rect x="1038.6" y="69" width="1.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1041.58" y="79.5" ></text>
</g>
<g >
<title>runtime.readUintptr (29 samples, 0.14%)</title><rect x="1103.2" y="165" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1106.20" y="175.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (37 samples, 0.18%)</title><rect x="1038.5" y="165" width="2.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1041.53" y="175.5" ></text>
</g>
<g >
<title>runtime.resetspinning (11 samples, 0.05%)</title><rect x="1185.9" y="213" width="0.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1188.94" y="223.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).initAt (7 samples, 0.03%)</title><rect x="27.1" y="149" width="0.4" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="30.10" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (935 samples, 4.53%)</title><rect x="1049.7" y="165" width="53.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1052.73" y="175.5" >runti..</text>
</g>
<g >
<title>runtime.mergeSummaries (2 samples, 0.01%)</title><rect x="14.2" y="133" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="17.23" y="143.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).pop (4 samples, 0.02%)</title><rect x="18.5" y="213" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="21.46" y="223.5" ></text>
</g>
<g >
<title>runtime.gcStart.func2 (3 samples, 0.01%)</title><rect x="165.7" y="165" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="168.71" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (13 samples, 0.06%)</title><rect x="1040.6" y="165" width="0.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1043.64" y="175.5" ></text>
</g>
<g >
<title>runtime.madvise (5 samples, 0.02%)</title><rect x="10.0" y="133" width="0.3" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>runtime.resetspinning (2 samples, 0.01%)</title><rect x="1187.8" y="197" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1190.83" y="207.5" ></text>
</g>
<g >
<title>runtime.preemptM (4 samples, 0.02%)</title><rect x="25.4" y="165" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="28.38" y="175.5" ></text>
</g>
<g >
<title>runtime.findObject (2 samples, 0.01%)</title><rect x="916.7" y="133" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="919.67" y="143.5" ></text>
</g>
<g >
<title>runtime.futex (3 samples, 0.01%)</title><rect x="1186.7" y="117" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1189.74" y="127.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (7 samples, 0.03%)</title><rect x="1186.2" y="149" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1189.17" y="159.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (19 samples, 0.09%)</title><rect x="338.0" y="149" width="1.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="340.99" y="159.5" ></text>
</g>
<g >
<title>runtime.unlock2 (2 samples, 0.01%)</title><rect x="1186.6" y="197" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1189.57" y="207.5" ></text>
</g>
<g >
<title>runtime.releasem (57 samples, 0.28%)</title><rect x="1137.9" y="197" width="3.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1140.85" y="207.5" ></text>
</g>
<g >
<title>runtime.schedule (79 samples, 0.38%)</title><rect x="1182.2" y="229" width="4.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1185.17" y="239.5" ></text>
</g>
<g >
<title>bytes.IndexByte (478 samples, 2.32%)</title><rect x="308.7" y="213" width="27.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="311.66" y="223.5" >b..</text>
</g>
<g >
<title>runtime.heapSetType (1,102 samples, 5.34%)</title><rect x="1041.8" y="181" width="63.1" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="1044.84" y="191.5" >runtim..</text>
</g>
<g >
<title>runtime.preemptall (9 samples, 0.04%)</title><rect x="22.9" y="181" width="0.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="25.92" y="191.5" ></text>
</g>
<g >
<title>internal/stringslite.IndexByte (528 samples, 2.56%)</title><rect x="831.1" y="213" width="30.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="834.13" y="223.5" >in..</text>
</g>
<g >
<title>strings.Count (714 samples, 3.46%)</title><rect x="1141.1" y="213" width="40.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1144.11" y="223.5" >str..</text>
</g>
<g >
<title>runtime.makeslice (3,922 samples, 19.01%)</title><rect x="916.8" y="213" width="224.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="919.84" y="223.5" >runtime.makeslice</text>
</g>
<g >
<title>runtime.futexsleep (2 samples, 0.01%)</title><rect x="24.1" y="133" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="27.12" y="143.5" ></text>
</g>
<g >
<title>runtime.netpoll (4 samples, 0.02%)</title><rect x="1184.5" y="197" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1187.51" y="207.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (4 samples, 0.02%)</title><rect x="29.3" y="117" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="32.27" y="127.5" ></text>
</g>
<g >
<title>runtime.greyobject (14 samples, 0.07%)</title><rect x="40.1" y="181" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="43.08" y="191.5" ></text>
</g>
<g >
<title>runtime.newMarkBits (3 samples, 0.01%)</title><rect x="154.3" y="53" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="157.27" y="63.5" ></text>
</g>
<g >
<title>runtime.gcStart.func3 (3 samples, 0.01%)</title><rect x="165.9" y="165" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="168.88" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).trigger (4 samples, 0.02%)</title><rect x="1041.4" y="165" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1044.44" y="175.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (149 samples, 0.72%)</title><rect x="1032.1" y="181" width="8.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1035.12" y="191.5" ></text>
</g>
<g >
<title>runtime.gcmarknewobject (2 samples, 0.01%)</title><rect x="166.3" y="197" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="169.28" y="207.5" ></text>
</g>
<g >
<title>aeshashbody (509 samples, 2.47%)</title><rect x="509.7" y="213" width="29.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="512.71" y="223.5" >ae..</text>
</g>
<g >
<title>runtime.startTheWorldWithSema (4 samples, 0.02%)</title><rect x="24.6" y="181" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="27.64" y="191.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (11 samples, 0.05%)</title><rect x="25.0" y="197" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="27.98" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mspan).heapBits (77 samples, 0.37%)</title><rect x="1087.2" y="149" width="4.4" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="1090.24" y="159.5" ></text>
</g>
<g >
<title>runtime.scanblock (5 samples, 0.02%)</title><rect x="29.8" y="165" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="32.84" y="175.5" ></text>
</g>
<g >
<title>os.(*File).read (637 samples, 3.09%)</title><rect x="336.6" y="213" width="36.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="339.56" y="223.5" >os...</text>
</g>
<g >
<title>runtime.(*mcentral).fullUnswept (2 samples, 0.01%)</title><rect x="11.3" y="229" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="14.32" y="239.5" ></text>
</g>
<g >
<title>runtime.startm (2 samples, 0.01%)</title><rect x="1041.3" y="101" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1044.27" y="111.5" ></text>
</g>
<g >
<title>runtime.(*sysMemStat).add (7 samples, 0.03%)</title><rect x="15.3" y="165" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="18.26" y="175.5" ></text>
</g>
<g >
<title>runtime.sysUnusedOS (5 samples, 0.02%)</title><rect x="10.0" y="149" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (13 samples, 0.06%)</title><rect x="1188.0" y="165" width="0.7" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1191.00" y="175.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (588 samples, 2.85%)</title><rect x="339.4" y="133" width="33.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="342.37" y="143.5" >in..</text>
</g>
<g >
<title>runtime.typePointers.nextFast (6 samples, 0.03%)</title><rect x="46.6" y="181" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="49.60" y="191.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*UnsafePointer).Load (5 samples, 0.02%)</title><rect x="17.9" y="213" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="20.95" y="223.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint64).Add (2 samples, 0.01%)</title><rect x="156.0" y="133" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="158.98" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (104 samples, 0.50%)</title><rect x="1024.3" y="133" width="6.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1027.34" y="143.5" ></text>
</g>
<g >
<title>runtime.releasem (46 samples, 0.22%)</title><rect x="207.3" y="213" width="2.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="210.28" y="223.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (14 samples, 0.07%)</title><rect x="1029.5" y="101" width="0.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1032.49" y="111.5" ></text>
</g>
<g >
<title>runtime.futex (13 samples, 0.06%)</title><rect x="1188.0" y="149" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1191.00" y="159.5" ></text>
</g>
<g >
<title>runtime.exitsyscall0 (2 samples, 0.01%)</title><rect x="1181.9" y="245" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1184.94" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).nextSpanForSweep (33 samples, 0.16%)</title><rect x="16.9" y="229" width="1.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="19.86" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (47 samples, 0.23%)</title><rect x="1025.7" y="53" width="2.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1028.66" y="63.5" ></text>
</g>
<g >
<title>runtime.scanblock (38 samples, 0.18%)</title><rect x="163.1" y="69" width="2.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="166.08" y="79.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.forEachP.func5 (25 samples, 0.12%)</title><rect x="22.2" y="213" width="1.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="25.18" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (6 samples, 0.03%)</title><rect x="37.5" y="181" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="40.50" y="191.5" ></text>
</g>
</g>
</svg>
