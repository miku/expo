<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="406.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="389" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="389" > </text>
<g id="frames">
<g >
<title>runtime.casgstatus (2 samples, 0.02%)</title><rect x="617.4" y="181" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="620.39" y="191.5" ></text>
</g>
<g >
<title>main.R4 (6,666 samples, 62.97%)</title><rect x="317.8" y="309" width="743.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="320.76" y="319.5" >main.R4</text>
</g>
<g >
<title>runtime.markrootBlock (3 samples, 0.03%)</title><rect x="21.9" y="261" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="24.93" y="271.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (26 samples, 0.25%)</title><rect x="229.0" y="181" width="2.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="232.03" y="191.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).Add (2 samples, 0.02%)</title><rect x="210.1" y="133" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="213.09" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mheap).nextSpanForSweep (4 samples, 0.04%)</title><rect x="14.5" y="309" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="17.46" y="319.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).free (12 samples, 0.11%)</title><rect x="11.9" y="245" width="1.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="14.89" y="255.5" ></text>
</g>
<g >
<title>syscall.Read (799 samples, 7.55%)</title><rect x="616.5" y="261" width="89.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="619.50" y="271.5" >syscall.Read</text>
</g>
<g >
<title>runtime.startm (1 samples, 0.01%)</title><rect x="1187.7" y="261" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1190.66" y="271.5" ></text>
</g>
<g >
<title>runtime.unlock2 (3 samples, 0.03%)</title><rect x="14.1" y="245" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="17.12" y="255.5" ></text>
</g>
<g >
<title>runtime.(*pageBits).clear (1 samples, 0.01%)</title><rect x="13.2" y="245" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="16.23" y="255.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerDedicated (112 samples, 1.06%)</title><rect x="19.1" y="309" width="12.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="22.14" y="319.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.01%)</title><rect x="21.3" y="165" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="24.26" y="175.5" ></text>
</g>
<g >
<title>runtime.pidleget (1 samples, 0.01%)</title><rect x="1185.2" y="213" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1188.21" y="223.5" ></text>
</g>
<g >
<title>gcWriteBarrier (5 samples, 0.05%)</title><rect x="613.7" y="277" width="0.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="616.71" y="287.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).init.func2 (2 samples, 0.02%)</title><rect x="10.0" y="309" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).partialUnswept (1 samples, 0.01%)</title><rect x="11.1" y="309" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="14.11" y="319.5" ></text>
</g>
<g >
<title>runtime.(*scavengeIndex).free (1 samples, 0.01%)</title><rect x="13.0" y="229" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="16.01" y="239.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (9 samples, 0.09%)</title><rect x="1187.8" y="309" width="1.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1190.77" y="319.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.01%)</title><rect x="1188.6" y="245" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1191.55" y="255.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (16 samples, 0.15%)</title><rect x="229.4" y="149" width="1.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="232.37" y="159.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.01%)</title><rect x="617.8" y="165" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="620.83" y="175.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByteString (92 samples, 0.87%)</title><rect x="1174.8" y="261" width="10.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1177.84" y="271.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.01%)</title><rect x="1187.0" y="261" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1189.99" y="271.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.01%)</title><rect x="214.5" y="133" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="217.54" y="143.5" ></text>
</g>
<g >
<title>runtime.pidleput (1 samples, 0.01%)</title><rect x="1186.8" y="277" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1189.77" y="287.5" ></text>
</g>
<g >
<title>runtime.preemptM (5 samples, 0.05%)</title><rect x="17.8" y="245" width="0.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="20.80" y="255.5" ></text>
</g>
<g >
<title>runtime.markroot (23 samples, 0.22%)</title><rect x="19.7" y="277" width="2.6" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="22.70" y="287.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.01%)</title><rect x="1188.6" y="213" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1191.55" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (11 samples, 0.10%)</title><rect x="231.9" y="245" width="1.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="234.93" y="255.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (135 samples, 1.28%)</title><rect x="216.9" y="261" width="15.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="219.88" y="271.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.01%)</title><rect x="1187.3" y="277" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1190.32" y="287.5" ></text>
</g>
<g >
<title>runtime.wakeNetPoller (1 samples, 0.01%)</title><rect x="1185.2" y="261" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1188.21" y="271.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (4 samples, 0.04%)</title><rect x="613.8" y="261" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="616.82" y="271.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.01%)</title><rect x="1187.9" y="213" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1190.88" y="223.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination (3 samples, 0.03%)</title><rect x="18.6" y="309" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="21.58" y="319.5" ></text>
</g>
<g >
<title>runtime.findRunnable (19 samples, 0.18%)</title><rect x="1185.3" y="293" width="2.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1188.32" y="303.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).trigger (1 samples, 0.01%)</title><rect x="233.6" y="245" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="236.60" y="255.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepareRead (1 samples, 0.01%)</title><rect x="616.4" y="261" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="619.39" y="271.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint64).Add (1 samples, 0.01%)</title><rect x="208.9" y="229" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="211.86" y="239.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.01%)</title><rect x="1187.7" y="213" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1190.66" y="223.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readLock (7 samples, 0.07%)</title><rect x="615.6" y="261" width="0.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="618.61" y="271.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.01%)</title><rect x="229.3" y="69" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="232.26" y="79.5" ></text>
</g>
<g >
<title>runtime.forEachPInternal (11 samples, 0.10%)</title><rect x="17.1" y="277" width="1.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="20.13" y="287.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (4 samples, 0.04%)</title><rect x="613.8" y="229" width="0.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="616.82" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (51 samples, 0.48%)</title><rect x="209.3" y="181" width="5.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="212.30" y="191.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).Add (1 samples, 0.01%)</title><rect x="11.8" y="245" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="14.78" y="255.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (10 samples, 0.09%)</title><rect x="11.9" y="229" width="1.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="14.89" y="239.5" ></text>
</g>
<g >
<title>runtime.gcStart.func2 (5 samples, 0.05%)</title><rect x="232.0" y="229" width="0.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="235.04" y="239.5" ></text>
</g>
<g >
<title>runtime.markroot (18 samples, 0.17%)</title><rect x="229.1" y="165" width="2.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="232.15" y="175.5" ></text>
</g>
<g >
<title>runtime.castogscanstatus (1 samples, 0.01%)</title><rect x="21.8" y="229" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.82" y="239.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.01%)</title><rect x="18.5" y="213" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="21.47" y="223.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.01%)</title><rect x="232.7" y="213" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="235.71" y="223.5" ></text>
</g>
<g >
<title>os.(*File).Read (4 samples, 0.04%)</title><rect x="614.3" y="277" width="0.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="617.27" y="287.5" ></text>
</g>
<g >
<title>runtime.pidlegetSpinning (1 samples, 0.01%)</title><rect x="1188.7" y="277" width="0.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1191.66" y="287.5" ></text>
</g>
<g >
<title>runtime.(*timer).reset (1 samples, 0.01%)</title><rect x="1185.2" y="309" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1188.21" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (1 samples, 0.01%)</title><rect x="229.0" y="85" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="232.03" y="95.5" ></text>
</g>
<g >
<title>runtime.divRoundUp (6 samples, 0.06%)</title><rect x="76.9" y="277" width="0.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="79.88" y="287.5" ></text>
</g>
<g >
<title>runtime.procyield (9 samples, 0.09%)</title><rect x="1188.8" y="277" width="1.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1191.77" y="287.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).next (1 samples, 0.01%)</title><rect x="1185.5" y="277" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1188.54" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).setSpans (1 samples, 0.01%)</title><rect x="212.6" y="117" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="215.65" y="127.5" ></text>
</g>
<g >
<title>runtime.getMCache (28 samples, 0.26%)</title><rect x="77.5" y="277" width="3.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="80.55" y="287.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (769 samples, 7.26%)</title><rect x="619.8" y="197" width="85.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="622.84" y="207.5" >internal/r..</text>
</g>
<g >
<title>runtime.scanstack (1 samples, 0.01%)</title><rect x="229.3" y="133" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="232.26" y="143.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.03%)</title><rect x="18.6" y="293" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="21.58" y="303.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (13 samples, 0.12%)</title><rect x="618.1" y="213" width="1.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="621.06" y="223.5" ></text>
</g>
<g >
<title>runtime.makeSpanClass (5 samples, 0.05%)</title><rect x="80.7" y="277" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="83.67" y="287.5" ></text>
</g>
<g >
<title>runtime.resetspinning (1 samples, 0.01%)</title><rect x="1188.6" y="277" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1191.55" y="287.5" ></text>
</g>
<g >
<title>runtime.typePointers.next (28 samples, 0.26%)</title><rect x="27.8" y="261" width="3.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="30.83" y="271.5" ></text>
</g>
<g >
<title>runtime.casfrom_Gscanstatus (1 samples, 0.01%)</title><rect x="19.8" y="229" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="22.81" y="239.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (3 samples, 0.03%)</title><rect x="19.1" y="261" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="22.14" y="271.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (2 samples, 0.02%)</title><rect x="20.5" y="213" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="23.48" y="223.5" ></text>
</g>
<g >
<title>runtime.main (10,347 samples, 97.74%)</title><rect x="31.8" y="341" width="1153.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="34.85" y="351.5" >runtime.main</text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepare (1 samples, 0.01%)</title><rect x="616.4" y="245" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="619.39" y="255.5" ></text>
</g>
<g >
<title>runtime.resumeG (1 samples, 0.01%)</title><rect x="19.8" y="245" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="22.81" y="255.5" ></text>
</g>
<g >
<title>runtime.findRunnable (6 samples, 0.06%)</title><rect x="1187.8" y="277" width="0.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1190.77" y="287.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.01%)</title><rect x="20.4" y="213" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="23.37" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1,394 samples, 13.17%)</title><rect x="81.2" y="277" width="155.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="84.23" y="287.5" >runtime.mallocgc</text>
</g>
<g >
<title>runtime.gcTrigger.test (5 samples, 0.05%)</title><rect x="233.2" y="261" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="236.16" y="271.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (6 samples, 0.06%)</title><rect x="215.1" y="213" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="218.10" y="223.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.01%)</title><rect x="1187.4" y="261" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1190.44" y="271.5" ></text>
</g>
<g >
<title>runtime.entersyscall (11 samples, 0.10%)</title><rect x="616.8" y="213" width="1.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="619.83" y="223.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.01%)</title><rect x="14.0" y="261" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="17.01" y="271.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.01%)</title><rect x="1187.4" y="277" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1190.44" y="287.5" ></text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.01%)</title><rect x="1185.1" y="277" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1188.10" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (28 samples, 0.26%)</title><rect x="210.6" y="133" width="3.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="213.64" y="143.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (1 samples, 0.01%)</title><rect x="705.6" y="277" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="708.56" y="287.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (1 samples, 0.01%)</title><rect x="705.6" y="261" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="708.56" y="271.5" ></text>
</g>
<g >
<title>runtime.sysUnused (2 samples, 0.02%)</title><rect x="10.0" y="245" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>runtime.gcStart.func1 (1 samples, 0.01%)</title><rect x="231.9" y="229" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="234.93" y="239.5" ></text>
</g>
<g >
<title>runtime.casGToWaiting (1 samples, 0.01%)</title><rect x="18.4" y="261" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="21.36" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (26 samples, 0.25%)</title><rect x="229.0" y="229" width="2.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="232.03" y="239.5" ></text>
</g>
<g >
<title>runtime.morestack (18 samples, 0.17%)</title><rect x="1187.8" y="341" width="2.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1190.77" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (1 samples, 0.01%)</title><rect x="216.8" y="261" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="219.77" y="271.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocker).tryAcquire (2 samples, 0.02%)</title><rect x="16.9" y="309" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="19.91" y="319.5" ></text>
</g>
<g >
<title>runtime.stealWork (1 samples, 0.01%)</title><rect x="1187.2" y="277" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1190.21" y="287.5" ></text>
</g>
<g >
<title>runtime.notetsleep (1 samples, 0.01%)</title><rect x="18.5" y="245" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="21.47" y="255.5" ></text>
</g>
<g >
<title>runtime.scanobject (4 samples, 0.04%)</title><rect x="231.2" y="165" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="234.15" y="175.5" ></text>
</g>
<g >
<title>runtime.lock2 (3 samples, 0.03%)</title><rect x="13.7" y="245" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="16.68" y="255.5" ></text>
</g>
<g >
<title>runtime.scanblock (1 samples, 0.01%)</title><rect x="21.5" y="213" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="24.48" y="223.5" ></text>
</g>
<g >
<title>runtime.mPark (8 samples, 0.08%)</title><rect x="1185.7" y="277" width="0.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1188.65" y="287.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func2 (1 samples, 0.01%)</title><rect x="19.0" y="293" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="22.03" y="303.5" ></text>
</g>
<g >
<title>runtime.strhash (74 samples, 0.70%)</title><rect x="1050.1" y="277" width="8.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1053.11" y="287.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.01%)</title><rect x="1188.3" y="213" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1191.33" y="223.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.01%)</title><rect x="19.0" y="229" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="22.03" y="239.5" ></text>
</g>
<g >
<title>runtime.notetsleep (1 samples, 0.01%)</title><rect x="19.0" y="261" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="22.03" y="271.5" ></text>
</g>
<g >
<title>gosave_systemstack_switch (1 samples, 0.01%)</title><rect x="1189.9" y="325" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1192.89" y="335.5" ></text>
</g>
<g >
<title>runtime.preemptall (1 samples, 0.01%)</title><rect x="231.9" y="197" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="234.93" y="207.5" ></text>
</g>
<g >
<title>runtime.gcDrain (2 samples, 0.02%)</title><rect x="31.6" y="293" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="34.62" y="303.5" ></text>
</g>
<g >
<title>runtime.pidlegetSpinning (1 samples, 0.01%)</title><rect x="1185.2" y="229" width="0.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1188.21" y="239.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwlock (6 samples, 0.06%)</title><rect x="615.7" y="245" width="0.7" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="618.72" y="255.5" ></text>
</g>
<g >
<title>runtime.resetspinning (2 samples, 0.02%)</title><rect x="1187.5" y="293" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1190.55" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mspan).markBitsForIndex (1 samples, 0.01%)</title><rect x="613.8" y="213" width="0.1" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="616.82" y="223.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.01%)</title><rect x="1188.1" y="245" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1191.11" y="255.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).CompareAndSwap (2 samples, 0.02%)</title><rect x="10.9" y="309" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="13.89" y="319.5" ></text>
</g>
<g >
<title>runtime.(*bmap).overflow (5 samples, 0.05%)</title><rect x="713.3" y="293" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="716.25" y="303.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.01%)</title><rect x="1187.7" y="245" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1190.66" y="255.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.forEachP.func6 (2 samples, 0.02%)</title><rect x="18.4" y="277" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="21.36" y="287.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.forEachP.func5 (11 samples, 0.10%)</title><rect x="17.1" y="293" width="1.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="20.13" y="303.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.01%)</title><rect x="18.8" y="261" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="21.81" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (29 samples, 0.27%)</title><rect x="11.2" y="309" width="3.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="14.23" y="319.5" ></text>
</g>
<g >
<title>runtime.(*moduledata).textAddr (1 samples, 0.01%)</title><rect x="21.1" y="165" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="24.15" y="175.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Pointer[go.shape.struct (1 samples, 0.01%)</title><rect x="14.6" y="293" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="17.57" y="303.5" ></text>
</g>
<g >
<title>runtime.netpoll (2 samples, 0.02%)</title><rect x="18.6" y="245" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="21.58" y="255.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (18 samples, 0.17%)</title><rect x="14.9" y="309" width="2.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="17.90" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (6 samples, 0.06%)</title><rect x="215.1" y="229" width="0.7" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="218.10" y="239.5" ></text>
</g>
<g >
<title>runtime.acquirem (26 samples, 0.25%)</title><rect x="68.1" y="277" width="2.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="71.07" y="287.5" ></text>
</g>
<g >
<title>runtime.madvise (2 samples, 0.02%)</title><rect x="10.0" y="213" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>runtime.scanobject (2 samples, 0.02%)</title><rect x="31.6" y="277" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="34.62" y="287.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (7 samples, 0.07%)</title><rect x="20.8" y="229" width="0.8" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="23.81" y="239.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.01%)</title><rect x="18.8" y="277" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="21.81" y="287.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (423 samples, 4.00%)</title><rect x="265.7" y="277" width="47.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="268.71" y="287.5" >runt..</text>
</g>
<g >
<title>runtime.pMask.read (2 samples, 0.02%)</title><rect x="1186.5" y="277" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1189.54" y="287.5" ></text>
</g>
<g >
<title>runtime.schedule (8 samples, 0.08%)</title><rect x="1187.8" y="293" width="0.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1190.77" y="303.5" ></text>
</g>
<g >
<title>runtime.newAllocBits (4 samples, 0.04%)</title><rect x="214.1" y="133" width="0.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="217.10" y="143.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.01%)</title><rect x="1185.2" y="245" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1188.21" y="255.5" ></text>
</g>
<g >
<title>indexbytebody (407 samples, 3.84%)</title><rect x="1129.5" y="261" width="45.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1132.47" y="271.5" >inde..</text>
</g>
<g >
<title>runtime.scanblock (3 samples, 0.03%)</title><rect x="21.9" y="245" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="24.93" y="255.5" ></text>
</g>
<g >
<title>runtime.notesleep (8 samples, 0.08%)</title><rect x="1185.7" y="261" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1188.65" y="271.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.01%)</title><rect x="16.8" y="293" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="19.80" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (2 samples, 0.02%)</title><rect x="26.2" y="261" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="29.16" y="271.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (3 samples, 0.03%)</title><rect x="14.1" y="261" width="0.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="17.12" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (94 samples, 0.89%)</title><rect x="206.3" y="261" width="10.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="209.30" y="271.5" ></text>
</g>
<g >
<title>runtime.pallocSum.unpack (1 samples, 0.01%)</title><rect x="12.8" y="213" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="15.79" y="223.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (1 samples, 0.01%)</title><rect x="229.3" y="85" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="232.26" y="95.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).run (2 samples, 0.02%)</title><rect x="10.0" y="325" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (132 samples, 1.25%)</title><rect x="17.1" y="341" width="14.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="20.13" y="351.5" ></text>
</g>
<g >
<title>runtime.sweepone (60 samples, 0.57%)</title><rect x="10.4" y="325" width="6.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="13.45" y="335.5" ></text>
</g>
<g >
<title>runtime.(*pageCache).alloc (1 samples, 0.01%)</title><rect x="214.0" y="133" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="216.99" y="143.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.01%)</title><rect x="16.8" y="277" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="19.80" y="287.5" ></text>
</g>
<g >
<title>runtime.(*consistentHeapStats).acquire (2 samples, 0.02%)</title><rect x="209.0" y="229" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="211.97" y="239.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (3 samples, 0.03%)</title><rect x="210.3" y="117" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="213.31" y="127.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.01%)</title><rect x="617.8" y="181" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="620.83" y="191.5" ></text>
</g>
<g >
<title>runtime.casgstatus (3 samples, 0.03%)</title><rect x="618.8" y="197" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="621.84" y="207.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).Add (2 samples, 0.02%)</title><rect x="208.6" y="229" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="211.64" y="239.5" ></text>
</g>
<g >
<title>runtime.publicationBarrier (26 samples, 0.25%)</title><rect x="233.7" y="261" width="2.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="236.72" y="271.5" ></text>
</g>
<g >
<title>runtime.funcInfo.entry (1 samples, 0.01%)</title><rect x="21.4" y="213" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="24.37" y="223.5" ></text>
</g>
<g >
<title>runtime.gcstopm (2 samples, 0.02%)</title><rect x="1187.9" y="261" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1190.88" y="271.5" ></text>
</g>
<g >
<title>runtime.(*timers).check (1 samples, 0.01%)</title><rect x="1187.2" y="261" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1190.21" y="271.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.01%)</title><rect x="1187.9" y="197" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1190.88" y="207.5" ></text>
</g>
<g >
<title>runtime.(*randomOrder).reset (1 samples, 0.01%)</title><rect x="232.8" y="197" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="235.82" y="207.5" ></text>
</g>
<g >
<title>runtime.findObject (4 samples, 0.04%)</title><rect x="26.6" y="261" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="29.61" y="271.5" ></text>
</g>
<g >
<title>runtime.(*timer).maybeAdd (1 samples, 0.01%)</title><rect x="1185.2" y="277" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1188.21" y="287.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (2,847 samples, 26.89%)</title><rect x="741.0" y="293" width="317.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="744.01" y="303.5" >runtime.mapaccess2_faststr</text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.01%)</title><rect x="231.5" y="149" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="234.49" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocNeedsZero (2 samples, 0.02%)</title><rect x="212.4" y="117" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="215.43" y="127.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).init (1 samples, 0.01%)</title><rect x="229.0" y="149" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="232.03" y="159.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.01%)</title><rect x="1188.3" y="245" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1191.33" y="255.5" ></text>
</g>
<g >
<title>runtime.forEachP (11 samples, 0.10%)</title><rect x="17.1" y="325" width="1.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="20.13" y="335.5" ></text>
</g>
<g >
<title>runtime.bgsweep (62 samples, 0.59%)</title><rect x="10.2" y="341" width="6.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="13.22" y="351.5" ></text>
</g>
<g >
<title>internal/bytealg.IndexByte (60 samples, 0.57%)</title><rect x="607.0" y="261" width="6.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="610.02" y="271.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.01%)</title><rect x="19.0" y="213" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="22.03" y="223.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (2 samples, 0.02%)</title><rect x="18.6" y="261" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="21.58" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.02%)</title><rect x="1189.8" y="341" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1192.78" y="351.5" ></text>
</g>
<g >
<title>runtime.gcStart (11 samples, 0.10%)</title><rect x="231.9" y="261" width="1.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="234.93" y="271.5" ></text>
</g>
<g >
<title>strings.Cut (1,116 samples, 10.54%)</title><rect x="1060.8" y="309" width="124.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1063.81" y="319.5" >strings.Cut</text>
</g>
<g >
<title>runtime.systemstack (114 samples, 1.08%)</title><rect x="19.1" y="325" width="12.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="22.14" y="335.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint8).Load (1 samples, 0.01%)</title><rect x="616.8" y="197" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="619.83" y="207.5" ></text>
</g>
<g >
<title>runtime.forEachP (2 samples, 0.02%)</title><rect x="18.4" y="309" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="21.36" y="319.5" ></text>
</g>
<g >
<title>runtime.(*gcCPULimiterState).finishGCTransition (1 samples, 0.01%)</title><rect x="232.6" y="213" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="235.60" y="223.5" ></text>
</g>
<g >
<title>runtime.suspendG (2 samples, 0.02%)</title><rect x="21.7" y="245" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="24.70" y="255.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (1 samples, 0.01%)</title><rect x="231.9" y="213" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="234.93" y="223.5" ></text>
</g>
<g >
<title>runtime.(*bmap).keys (6 samples, 0.06%)</title><rect x="712.6" y="293" width="0.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="715.58" y="303.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (3 samples, 0.03%)</title><rect x="19.1" y="277" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="22.14" y="287.5" ></text>
</g>
<g >
<title>runtime.newMarkBits (3 samples, 0.03%)</title><rect x="213.4" y="117" width="0.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="216.43" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mspan).init (6 samples, 0.06%)</title><rect x="212.8" y="117" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="215.76" y="127.5" ></text>
</g>
<g >
<title>syscall.read (798 samples, 7.54%)</title><rect x="616.6" y="245" width="89.0" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="619.61" y="255.5" >syscall.read</text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).Add (2 samples, 0.02%)</title><rect x="14.7" y="293" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="17.68" y="303.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (772 samples, 7.29%)</title><rect x="619.5" y="213" width="86.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="622.51" y="223.5" >syscall.Ra..</text>
</g>
<g >
<title>runtime.typePointers.nextFast (3 samples, 0.03%)</title><rect x="31.2" y="277" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="34.18" y="287.5" ></text>
</g>
<g >
<title>bufio.ScanLines (201 samples, 1.90%)</title><rect x="524.4" y="277" width="22.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="527.42" y="287.5" >b..</text>
</g>
<g >
<title>runtime.sysUnusedOS (2 samples, 0.02%)</title><rect x="10.0" y="229" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.01%)</title><rect x="18.4" y="245" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="21.36" y="255.5" ></text>
</g>
<g >
<title>runtime.chunkIndex (1 samples, 0.01%)</title><rect x="13.1" y="229" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="16.12" y="239.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge (2 samples, 0.02%)</title><rect x="10.0" y="293" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.01%)</title><rect x="31.5" y="245" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="34.51" y="255.5" ></text>
</g>
<g >
<title>runtime.signalM (5 samples, 0.05%)</title><rect x="17.8" y="229" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="20.80" y="239.5" ></text>
</g>
<g >
<title>runtime.(*timer).modify (1 samples, 0.01%)</title><rect x="1185.2" y="293" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1188.21" y="303.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (3 samples, 0.03%)</title><rect x="214.1" y="117" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="217.10" y="127.5" ></text>
</g>
<g >
<title>aeshashbody (272 samples, 2.57%)</title><rect x="949.9" y="277" width="30.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="952.90" y="287.5" >ae..</text>
</g>
<g >
<title>bufio.dropCR (68 samples, 0.64%)</title><rect x="546.8" y="277" width="7.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="549.83" y="287.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (9 samples, 0.09%)</title><rect x="1188.8" y="309" width="1.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1191.77" y="319.5" ></text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.04%)</title><rect x="613.8" y="245" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="616.82" y="255.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwunlock (3 samples, 0.03%)</title><rect x="615.3" y="229" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="618.27" y="239.5" ></text>
</g>
<g >
<title>runtime.alignUp (53 samples, 0.50%)</title><rect x="71.0" y="277" width="5.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="73.97" y="287.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readUnlock (4 samples, 0.04%)</title><rect x="615.2" y="245" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="618.16" y="255.5" ></text>
</g>
<g >
<title>internal/stringslite.IndexByte (571 samples, 5.39%)</title><rect x="1121.4" y="277" width="63.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1124.45" y="287.5" >intern..</text>
</g>
<g >
<title>runtime.releasem (44 samples, 0.42%)</title><rect x="312.9" y="277" width="4.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="315.86" y="287.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.01%)</title><rect x="1188.3" y="229" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1191.33" y="239.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge.func1 (2 samples, 0.02%)</title><rect x="10.0" y="261" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>runtime.(*stkframe).getStackMap (1 samples, 0.01%)</title><rect x="229.3" y="101" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="232.26" y="111.5" ></text>
</g>
<g >
<title>runtime.(*sysMemStat).add (3 samples, 0.03%)</title><rect x="13.3" y="245" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="16.34" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocManual (1 samples, 0.01%)</title><rect x="229.0" y="101" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="232.03" y="111.5" ></text>
</g>
<g >
<title>runtime.signalM (1 samples, 0.01%)</title><rect x="19.7" y="229" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="22.70" y="239.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.01%)</title><rect x="1188.4" y="261" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1191.44" y="271.5" ></text>
</g>
<g >
<title>runtime.lock2 (9 samples, 0.09%)</title><rect x="1188.8" y="293" width="1.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1191.77" y="303.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (1 samples, 0.01%)</title><rect x="18.5" y="229" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="21.47" y="239.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (2,486 samples, 23.48%)</title><rect x="40.7" y="293" width="277.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="43.65" y="303.5" >runtime.slicebytetostring</text>
</g>
<g >
<title>runtime.systemstack (11 samples, 0.10%)</title><rect x="17.1" y="309" width="1.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="20.13" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (70 samples, 0.66%)</title><rect x="208.0" y="245" width="7.8" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="210.97" y="255.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerIdle (2 samples, 0.02%)</title><rect x="31.6" y="309" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="34.62" y="319.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.01%)</title><rect x="1187.7" y="229" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1190.66" y="239.5" ></text>
</g>
<g >
<title>runtime.schedule (22 samples, 0.21%)</title><rect x="1185.3" y="309" width="2.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1188.32" y="319.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (9 samples, 0.09%)</title><rect x="616.9" y="197" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="619.94" y="207.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.01%)</title><rect x="233.0" y="197" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="236.05" y="207.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.01%)</title><rect x="1188.1" y="213" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1191.11" y="223.5" ></text>
</g>
<g >
<title>runtime.(*moduledata).textAddr (1 samples, 0.01%)</title><rect x="21.4" y="197" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="24.37" y="207.5" ></text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.01%)</title><rect x="231.0" y="117" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="234.04" y="127.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).next (1 samples, 0.01%)</title><rect x="1187.8" y="261" width="0.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1190.77" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (26 samples, 0.25%)</title><rect x="229.0" y="245" width="2.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="232.03" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (51 samples, 0.48%)</title><rect x="209.3" y="165" width="5.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="212.30" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeMSpanLocked (1 samples, 0.01%)</title><rect x="11.3" y="261" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="14.34" y="271.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func3 (2 samples, 0.02%)</title><rect x="18.6" y="277" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="21.58" y="287.5" ></text>
</g>
<g >
<title>runtime.(*pageCache).empty (1 samples, 0.01%)</title><rect x="214.9" y="149" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="217.88" y="159.5" ></text>
</g>
<g >
<title>runtime.mPark (1 samples, 0.01%)</title><rect x="1188.1" y="261" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1191.11" y="271.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func3 (29 samples, 0.27%)</title><rect x="11.2" y="277" width="3.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="14.23" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.02%)</title><rect x="10.0" y="277" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (4 samples, 0.04%)</title><rect x="212.0" y="117" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="214.98" y="127.5" ></text>
</g>
<g >
<title>runtime.tophash (22 samples, 0.21%)</title><rect x="1058.4" y="293" width="2.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1061.36" y="303.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.01%)</title><rect x="1188.6" y="229" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1191.55" y="239.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (1 samples, 0.01%)</title><rect x="1188.2" y="245" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1191.22" y="255.5" ></text>
</g>
<g >
<title>runtime.newMarkBits (1 samples, 0.01%)</title><rect x="214.4" y="117" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="217.43" y="127.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (3 samples, 0.03%)</title><rect x="232.8" y="213" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="235.82" y="223.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.01%)</title><rect x="1188.0" y="245" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1190.99" y="255.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (7 samples, 0.07%)</title><rect x="614.8" y="261" width="0.8" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="617.83" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mspan).typePointersOfUnchecked (1 samples, 0.01%)</title><rect x="231.4" y="149" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="234.38" y="159.5" ></text>
</g>
<g >
<title>runtime.(*spanSetBlockAlloc).free (1 samples, 0.01%)</title><rect x="232.5" y="197" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="235.49" y="207.5" ></text>
</g>
<g >
<title>runtime.getempty.func1 (1 samples, 0.01%)</title><rect x="229.0" y="117" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="232.03" y="127.5" ></text>
</g>
<g >
<title>bufio.(*Scanner).Text (2,565 samples, 24.23%)</title><rect x="31.8" y="309" width="286.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="34.85" y="319.5" >bufio.(*Scanner).Text</text>
</g>
<g >
<title>internal/runtime/syscall.EpollWait (2 samples, 0.02%)</title><rect x="18.6" y="229" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="21.58" y="239.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.01%)</title><rect x="1188.4" y="277" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1191.44" y="287.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (1 samples, 0.01%)</title><rect x="232.5" y="181" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="235.49" y="191.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.01%)</title><rect x="31.7" y="261" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="34.74" y="271.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.01%)</title><rect x="1186.9" y="245" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1189.88" y="255.5" ></text>
</g>
<g >
<title>runtime.tgkill (1 samples, 0.01%)</title><rect x="19.4" y="213" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="22.36" y="223.5" ></text>
</g>
<g >
<title>runtime.readUintptr (4 samples, 0.04%)</title><rect x="27.3" y="261" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="30.28" y="271.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).findRunnableGCWorker (1 samples, 0.01%)</title><rect x="1185.4" y="277" width="0.1" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1188.43" y="287.5" ></text>
</g>
<g >
<title>runtime.preemptM (1 samples, 0.01%)</title><rect x="19.7" y="245" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="22.70" y="255.5" ></text>
</g>
<g >
<title>syscall.Syscall (797 samples, 7.53%)</title><rect x="616.7" y="229" width="88.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="619.72" y="239.5" >syscall.Sy..</text>
</g>
<g >
<title>runtime.funcInfo.entry (1 samples, 0.01%)</title><rect x="21.1" y="181" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="24.15" y="191.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (7 samples, 0.07%)</title><rect x="18.4" y="325" width="0.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="21.36" y="335.5" ></text>
</g>
<g >
<title>runtime.getempty (1 samples, 0.01%)</title><rect x="229.0" y="133" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="232.03" y="143.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (1 samples, 0.01%)</title><rect x="229.0" y="37" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="232.03" y="47.5" ></text>
</g>
<g >
<title>runtime.tgkill (1 samples, 0.01%)</title><rect x="19.7" y="213" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="22.70" y="223.5" ></text>
</g>
<g >
<title>indexbytebody (417 samples, 3.94%)</title><rect x="560.5" y="261" width="46.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="563.54" y="271.5" >inde..</text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (1 samples, 0.01%)</title><rect x="31.5" y="261" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="34.51" y="271.5" ></text>
</g>
<g >
<title>runtime.shrinkstack (1 samples, 0.01%)</title><rect x="21.6" y="229" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="24.59" y="239.5" ></text>
</g>
<g >
<title>runtime.spanOfUnchecked (1 samples, 0.01%)</title><rect x="231.6" y="165" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="234.60" y="175.5" ></text>
</g>
<g >
<title>runtime.mPark (1 samples, 0.01%)</title><rect x="1187.9" y="245" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1190.88" y="255.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (18 samples, 0.17%)</title><rect x="1187.8" y="325" width="2.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1190.77" y="335.5" ></text>
</g>
<g >
<title>runtime.memmove (261 samples, 2.47%)</title><rect x="236.6" y="277" width="29.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="239.61" y="287.5" >ru..</text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).Add (1 samples, 0.01%)</title><rect x="16.4" y="293" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="19.35" y="303.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.01%)</title><rect x="19.0" y="309" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="22.03" y="319.5" ></text>
</g>
<g >
<title>runtime.(*timeHistogram).record (1 samples, 0.01%)</title><rect x="619.1" y="181" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="622.06" y="191.5" ></text>
</g>
<g >
<title>runtime.bucketShift (9 samples, 0.09%)</title><rect x="740.0" y="293" width="1.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="743.00" y="303.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.01%)</title><rect x="1187.3" y="261" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1190.32" y="271.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.01%)</title><rect x="1188.0" y="229" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1190.99" y="239.5" ></text>
</g>
<g >
<title>runtime.scanstack (16 samples, 0.15%)</title><rect x="19.9" y="245" width="1.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="22.92" y="255.5" ></text>
</g>
<g >
<title>runtime.futex (7 samples, 0.07%)</title><rect x="1185.8" y="229" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1188.76" y="239.5" ></text>
</g>
<g >
<title>bufio.(*Scanner).Scan (2,121 samples, 20.04%)</title><rect x="469.7" y="293" width="236.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="472.69" y="303.5" >bufio.(*Scanner).Scan</text>
</g>
<g >
<title>memeqbody (574 samples, 5.42%)</title><rect x="980.2" y="277" width="64.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="983.22" y="287.5" >memeqbody</text>
</g>
<g >
<title>runtime.futexsleep (4 samples, 0.04%)</title><rect x="17.2" y="229" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="20.25" y="239.5" ></text>
</g>
<g >
<title>runtime.(*timeHistogram).record (1 samples, 0.01%)</title><rect x="232.9" y="197" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="235.94" y="207.5" ></text>
</g>
<g >
<title>os.(*File).read (815 samples, 7.70%)</title><rect x="614.7" y="277" width="90.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="617.71" y="287.5" >os.(*File)..</text>
</g>
<g >
<title>runtime.notetsleep (4 samples, 0.04%)</title><rect x="17.2" y="261" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="20.25" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (4 samples, 0.04%)</title><rect x="25.7" y="261" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="28.72" y="271.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.01%)</title><rect x="1187.0" y="245" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1189.99" y="255.5" ></text>
</g>
<g >
<title>runtime.mcall (23 samples, 0.22%)</title><rect x="1185.2" y="341" width="2.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1188.21" y="351.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (1 samples, 0.01%)</title><rect x="31.5" y="277" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="34.51" y="287.5" ></text>
</g>
<g >
<title>runtime.futexsleep (7 samples, 0.07%)</title><rect x="1185.8" y="245" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1188.76" y="255.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.01%)</title><rect x="1188.6" y="197" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1191.55" y="207.5" ></text>
</g>
<g >
<title>runtime.runqempty (1 samples, 0.01%)</title><rect x="1187.1" y="277" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1190.10" y="287.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint64).Add (2 samples, 0.02%)</title><rect x="215.5" y="197" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="218.55" y="207.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (1 samples, 0.01%)</title><rect x="229.3" y="149" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="232.26" y="159.5" ></text>
</g>
<g >
<title>runtime.preemptM (2 samples, 0.02%)</title><rect x="19.3" y="245" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="22.25" y="255.5" ></text>
</g>
<g >
<title>runtime.finishsweep_m (5 samples, 0.05%)</title><rect x="232.0" y="213" width="0.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="235.04" y="223.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.01%)</title><rect x="1188.7" y="261" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1191.66" y="271.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (2 samples, 0.02%)</title><rect x="25.5" y="261" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="28.49" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (2 samples, 0.02%)</title><rect x="213.8" y="133" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="216.76" y="143.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.01%)</title><rect x="18.9" y="309" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="21.92" y="319.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (2 samples, 0.02%)</title><rect x="1188.2" y="261" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1191.22" y="271.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).allocRange (1 samples, 0.01%)</title><rect x="229.0" y="53" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="232.03" y="63.5" ></text>
</g>
<g >
<title>runtime.systemstack (29 samples, 0.27%)</title><rect x="11.2" y="293" width="3.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="14.23" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mspan).typePointersOfUnchecked (1 samples, 0.01%)</title><rect x="26.4" y="261" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="29.39" y="271.5" ></text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.01%)</title><rect x="27.7" y="261" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="30.72" y="271.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (2 samples, 0.02%)</title><rect x="18.6" y="213" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="21.58" y="223.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (2 samples, 0.02%)</title><rect x="231.7" y="165" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="234.71" y="175.5" ></text>
</g>
<g >
<title>runtime.futex (4 samples, 0.04%)</title><rect x="17.2" y="213" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="20.25" y="223.5" ></text>
</g>
<g >
<title>runtime.add (210 samples, 1.98%)</title><rect x="713.8" y="293" width="23.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="716.81" y="303.5" >r..</text>
</g>
<g >
<title>runtime.scanobject (80 samples, 0.76%)</title><rect x="22.3" y="277" width="8.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="25.26" y="287.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).resolveInternal (2 samples, 0.02%)</title><rect x="20.1" y="213" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="23.14" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (9 samples, 0.09%)</title><rect x="215.8" y="245" width="1.0" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="218.77" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (52 samples, 0.49%)</title><rect x="209.2" y="229" width="5.8" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="212.19" y="239.5" ></text>
</g>
<g >
<title>runtime.spanOf (2 samples, 0.02%)</title><rect x="614.0" y="197" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="617.04" y="207.5" ></text>
</g>
<g >
<title>runtime.bucketMask (25 samples, 0.24%)</title><rect x="737.2" y="293" width="2.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="740.22" y="303.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (2 samples, 0.02%)</title><rect x="1186.9" y="277" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1189.88" y="287.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (4 samples, 0.04%)</title><rect x="17.2" y="245" width="0.5" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="20.25" y="255.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (1 samples, 0.01%)</title><rect x="1186.9" y="261" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1189.88" y="271.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.01%)</title><rect x="18.5" y="197" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="21.47" y="207.5" ></text>
</g>
<g >
<title>internal/runtime/atomic.(*Uint32).CompareAndSwap (2 samples, 0.02%)</title><rect x="10.2" y="325" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="13.22" y="335.5" ></text>
</g>
<g >
<title>runtime.scanblock (16 samples, 0.15%)</title><rect x="229.4" y="133" width="1.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="232.37" y="143.5" ></text>
</g>
<g >
<title>runtime.signalM (2 samples, 0.02%)</title><rect x="19.3" y="229" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="22.25" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).fullSwept (1 samples, 0.01%)</title><rect x="215.0" y="229" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="217.99" y="239.5" ></text>
</g>
<g >
<title>runtime.(*stkframe).getStackMap (4 samples, 0.04%)</title><rect x="20.9" y="213" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="23.92" y="223.5" ></text>
</g>
<g >
<title>runtime.save (2 samples, 0.02%)</title><rect x="617.6" y="181" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="620.61" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (6 samples, 0.06%)</title><rect x="216.1" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="219.10" y="239.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (1 samples, 0.01%)</title><rect x="19.0" y="277" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="22.03" y="287.5" ></text>
</g>
<g >
<title>runtime/internal/sys.LeadingZeros64 (1 samples, 0.01%)</title><rect x="12.9" y="213" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="15.90" y="223.5" ></text>
</g>
<g >
<title>internal/stringslite.Cut (1,077 samples, 10.17%)</title><rect x="1065.2" y="293" width="120.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1068.16" y="303.5" >internal/strin..</text>
</g>
<g >
<title>runtime.step (2 samples, 0.02%)</title><rect x="20.5" y="181" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="23.48" y="191.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.01%)</title><rect x="1187.0" y="229" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1189.99" y="239.5" ></text>
</g>
<g >
<title>runtime.spanAllocType.manual (2 samples, 0.02%)</title><rect x="214.7" y="133" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="217.66" y="143.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (2 samples, 0.02%)</title><rect x="21.1" y="197" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="24.15" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mspan).heapBitsSmallForAddr (1 samples, 0.01%)</title><rect x="231.4" y="133" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="234.38" y="143.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.01%)</title><rect x="18.9" y="293" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="21.92" y="303.5" ></text>
</g>
<g >
<title>bytes.IndexByte (532 samples, 5.03%)</title><rect x="554.4" y="277" width="59.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="557.41" y="287.5" >bytes...</text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.01%)</title><rect x="230.9" y="117" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="233.93" y="127.5" ></text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.01%)</title><rect x="1188.2" y="213" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1191.22" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (51 samples, 0.48%)</title><rect x="209.3" y="197" width="5.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="212.30" y="207.5" ></text>
</g>
<g >
<title>runtime.addb (1 samples, 0.01%)</title><rect x="26.5" y="261" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="29.50" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocMSpanLocked (3 samples, 0.03%)</title><rect x="210.3" y="133" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="213.31" y="143.5" ></text>
</g>
<g >
<title>runtime.gcStart.func3 (5 samples, 0.05%)</title><rect x="232.6" y="229" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="235.60" y="239.5" ></text>
</g>
<g >
<title>runtime.memmove (4 samples, 0.04%)</title><rect x="705.7" y="277" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="708.67" y="287.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.01%)</title><rect x="617.8" y="149" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="620.83" y="159.5" ></text>
</g>
<g >
<title>internal/stringslite.Index (136 samples, 1.28%)</title><rect x="1106.3" y="277" width="15.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1109.29" y="287.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (1 samples, 0.01%)</title><rect x="19.0" y="245" width="0.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="22.03" y="255.5" ></text>
</g>
<g >
<title>runtime.bgscavenge (2 samples, 0.02%)</title><rect x="10.0" y="341" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).reset (4 samples, 0.04%)</title><rect x="232.0" y="197" width="0.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="235.04" y="207.5" ></text>
</g>
<g >
<title>runtime.newArenaMayUnlock (3 samples, 0.03%)</title><rect x="213.4" y="101" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="216.43" y="111.5" ></text>
</g>
<g >
<title>main.main (10,347 samples, 97.74%)</title><rect x="31.8" y="325" width="1153.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="34.85" y="335.5" >main.main</text>
</g>
<g >
<title>runtime.preemptall (6 samples, 0.06%)</title><rect x="17.7" y="261" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="20.69" y="271.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).summarize (8 samples, 0.08%)</title><rect x="11.9" y="213" width="0.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="14.89" y="223.5" ></text>
</g>
<g >
<title>bufio.(*Scanner).advance (58 samples, 0.55%)</title><rect x="706.1" y="293" width="6.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="709.12" y="303.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.01%)</title><rect x="1188.0" y="213" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1190.99" y="223.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (3 samples, 0.03%)</title><rect x="619.2" y="197" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="622.17" y="207.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.01%)</title><rect x="1188.6" y="261" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1191.55" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.02%)</title><rect x="18.4" y="293" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="21.36" y="303.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (3 samples, 0.03%)</title><rect x="613.9" y="213" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="616.93" y="223.5" ></text>
</g>
<g >
<title>runtime.forEachPInternal (1 samples, 0.01%)</title><rect x="18.5" y="261" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="21.47" y="271.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (1 samples, 0.01%)</title><rect x="229.0" y="165" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="232.03" y="175.5" ></text>
</g>
<g >
<title>runtime.greyobject (2 samples, 0.02%)</title><rect x="27.1" y="261" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="30.05" y="271.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.01%)</title><rect x="21.3" y="181" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="24.26" y="191.5" ></text>
</g>
<g >
<title>runtime.gcDrain (112 samples, 1.06%)</title><rect x="19.1" y="293" width="12.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="22.14" y="303.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.01%)</title><rect x="1188.7" y="293" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1191.66" y="303.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.01%)</title><rect x="1187.4" y="293" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1190.44" y="303.5" ></text>
</g>
<g >
<title>runtime.getpid (1 samples, 0.01%)</title><rect x="19.3" y="213" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="22.25" y="223.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.01%)</title><rect x="1188.2" y="229" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1191.22" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (20 samples, 0.19%)</title><rect x="11.4" y="261" width="2.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="14.45" y="271.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.01%)</title><rect x="617.8" y="133" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="620.83" y="143.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.01%)</title><rect x="1187.9" y="229" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1190.88" y="239.5" ></text>
</g>
<g >
<title>runtime.pcvalue (2 samples, 0.02%)</title><rect x="20.5" y="197" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="23.48" y="207.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (26 samples, 0.25%)</title><rect x="229.0" y="197" width="2.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="232.03" y="207.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (20 samples, 0.19%)</title><rect x="19.7" y="261" width="2.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="22.70" y="271.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).alloc (1 samples, 0.01%)</title><rect x="229.0" y="69" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="232.03" y="79.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).next (5 samples, 0.05%)</title><rect x="20.1" y="229" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="23.14" y="239.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (3 samples, 0.03%)</title><rect x="13.7" y="261" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="16.68" y="271.5" ></text>
</g>
<g >
<title>runtime.memequal (53 samples, 0.50%)</title><rect x="1044.2" y="277" width="5.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1047.20" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (51 samples, 0.48%)</title><rect x="209.3" y="213" width="5.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="212.30" y="223.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.01%)</title><rect x="21.6" y="213" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="24.59" y="223.5" ></text>
</g>
<g >
<title>runtime.tgkill (5 samples, 0.05%)</title><rect x="17.8" y="213" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="20.80" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (50 samples, 0.47%)</title><rect x="209.3" y="149" width="5.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="212.30" y="159.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.01%)</title><rect x="1187.7" y="277" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1190.66" y="287.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (3 samples, 0.03%)</title><rect x="16.5" y="293" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="19.47" y="303.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (1 samples, 0.01%)</title><rect x="229.3" y="117" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="232.26" y="127.5" ></text>
</g>
<g >
<title>runtime.typePointers.nextFast (2 samples, 0.02%)</title><rect x="31.0" y="261" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="33.96" y="271.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (2 samples, 0.02%)</title><rect x="19.5" y="277" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="22.47" y="287.5" ></text>
</g>
<g >
<title>runtime.scanblock (1 samples, 0.01%)</title><rect x="20.7" y="229" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="23.70" y="239.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.01%)</title><rect x="1188.1" y="229" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1191.11" y="239.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (26 samples, 0.25%)</title><rect x="229.0" y="213" width="2.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="232.03" y="223.5" ></text>
</g>
<g >
<title>all (10,586 samples, 100%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>runtime.park_m (23 samples, 0.22%)</title><rect x="1185.2" y="325" width="2.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1188.21" y="335.5" ></text>
</g>
<g >
<title>runtime.traceEnabled (1 samples, 0.01%)</title><rect x="617.9" y="197" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="620.95" y="207.5" ></text>
</g>
</g>
</svg>
